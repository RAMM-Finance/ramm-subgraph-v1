{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "trade",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "s_trade",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_entry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BaseToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUNDLIMIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TradeToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "a_initial",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "x",
          "type": "uint128"
        },
        {
          "internalType": "int128",
          "name": "y",
          "type": "int128"
        }
      ],
      "name": "addDelta",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "z",
          "type": "uint128"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "areaBetweenCurveAndMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "b",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "b_initial",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseBal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "p2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "p1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "L",
          "type": "uint256"
        }
      ],
      "name": "baseGivenLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cBal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "P",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "I",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sigma",
          "type": "uint256"
        }
      ],
      "name": "calculateInitCurveParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "saleAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sigma",
          "type": "uint256"
        }
      ],
      "name": "calculateInitCurveParamsPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "managementFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "claimFilledOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "claimPartiallyFilledOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "tickLower",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "tickUpper",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount0Requested",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amount1Requested",
          "type": "uint128"
        }
      ],
      "name": "collect",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "discount_cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "discountedReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeGrowthGlobalBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeGrowthGlobalTrade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "flushTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "flush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "getLiq",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "pDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "moveUp",
          "type": "bool"
        }
      ],
      "name": "getNextPriceLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "moveUp",
          "type": "bool"
        }
      ],
      "name": "getNumCross",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "moveUp",
          "type": "bool"
        }
      ],
      "name": "getOneTimeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTraderPosition",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "p2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "p1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "B",
          "type": "uint256"
        }
      ],
      "name": "liquidityGivenBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "p2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "p1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "T",
          "type": "uint256"
        }
      ],
      "name": "liquidityGivenTrade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerClaimClose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerClaimOpen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerClose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "toEscrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "crossId",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerOpen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "toEscrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "crossId",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "open",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerPartiallyClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tradeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerReduceClose",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "makerReduceOpen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "placeLimitOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToEscrow",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "numCross",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        }
      ],
      "name": "pointToPrice",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "positionIsFilled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "bidCrossId",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "askCrossId",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "askLiq",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "bidLiq",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "feeGrowthInside0LastX128",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeGrowthInside1LastX128",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensOwed0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensOwed1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "precision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceDelta",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "priceToPoint",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "pointLower",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "pointUpper",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "provide",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "pointLower",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "pointUpper",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "provideLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isAsk",
          "type": "bool"
        }
      ],
      "name": "reduceLimitOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToReturn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "pointLower",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "pointUpper",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "remove",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetLiq",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_tradeToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_entry",
          "type": "address"
        }
      ],
      "name": "setEntry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slot0",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "curPrice",
          "type": "uint160"
        },
        {
          "internalType": "uint16",
          "name": "point",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "feeProtocol",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "unlocked",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "amortized",
          "type": "bool"
        },
        {
          "internalType": "uint16",
          "name": "modifyLiqPoint",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "int256",
          "name": "amountIn",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "priceLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "takerClose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolamountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "poolamountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "int256",
          "name": "amountIn",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "priceLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "takerOpen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolamountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "poolamountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "ticks",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "liquidityGross",
          "type": "uint128"
        },
        {
          "internalType": "int128",
          "name": "liquidityNet",
          "type": "int128"
        },
        {
          "internalType": "uint256",
          "name": "feeGrowthOutsideBase",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeGrowthOutsideTrade",
          "type": "uint256"
        },
        {
          "internalType": "int56",
          "name": "tickCumulativeOutside",
          "type": "int56"
        },
        {
          "internalType": "uint160",
          "name": "secondsPerLiquidityOutsideX128",
          "type": "uint160"
        },
        {
          "internalType": "uint32",
          "name": "secondsOutside",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "initialized",
          "type": "bool"
        },
        {
          "internalType": "uint128",
          "name": "askLiquidityGross",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "bidLiquidityGross",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "askNumCross",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "bidNumCross",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "moveUp",
          "type": "bool"
        },
        {
          "internalType": "int256",
          "name": "amountSpecified",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "priceLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "trade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "p2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "p1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "L",
          "type": "uint256"
        }
      ],
      "name": "tradeGivenLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "long",
          "type": "bool"
        }
      ],
      "name": "trustedBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "trustedDiscountedMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "pointLower",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "pointUpper",
          "type": "uint16"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "withdrawLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "curPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        }
      ],
      "name": "xMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "curPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        }
      ],
      "name": "xMaxRoundUp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "curPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "moveUp",
          "type": "bool"
        }
      ],
      "name": "yInt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101806040523480156200001257600080fd5b5060405162005b9838038062005b98833981016040819052620000359162000120565b6001600160a01b0380851660e052851661010052600060a081905260c0819052610120819052859085908590838362000078670de0b6b3a7640000606462000190565b600280546001600160801b0319166001600160801b0392909216919091179055505033608052600980546001600160a01b03199081166001600160a01b0396871617909155600a8054821694861694909417909355600b80548416928516929092179091551515610140526005805490911693821693909317909255166101605250620001ca915050565b80516001600160a01b03811681146200011b57600080fd5b919050565b600080600080600060a086880312156200013957600080fd5b620001448662000103565b9450620001546020870162000103565b9350620001646040870162000103565b9250620001746060870162000103565b9150620001846080870162000103565b90509295509295909350565b6001600160801b03818116838216028082169190828114620001c257634e487b7160e01b600052601160045260246000fd5b505092915050565b60805160a05160c05160e051610100516101205161014051610160516159146200028460003960008181610c47015281816122de01528181612e00015281816130f00152613329015260008181611db501528181611f450152818161291e015261299d01526000610b4c015260008181610b120152818161194c0152611c5e015260008181610b86015281816119720152611c8401526000610aeb015260008181610bad015261101a015260006108af01526159146000f3fe608060405234801561001057600080fd5b506004361061043d5760003560e01c806375e2d94611610236578063b501c2841161013b578063ddca3f43116100c3578063e7ca189a11610087578063e7ca189a14610c1c578063f0bb81b314610c2f578063f77c479114610c42578063f83d08ba14610c69578063f9734a2414610c7157600080fd5b8063ddca3f4314610ba8578063df99f8bf14610be3578063e37699c914610bf6578063e38d6b5c14610969578063e7c3614f14610c0957600080fd5b8063c55dae631161010a578063c55dae6314610b0d578063c93ac3ed14610b34578063d0c93a7c14610b47578063d3b5dc3b14610969578063d83678ac14610b8157600080fd5b8063b501c284146109b1578063b9033a39146109c4578063ba52fe61146106ab578063c45a015514610ae657600080fd5b806396fd1c42116101be578063a74d74d41161018d578063a74d74d414610956578063aaf5eb6814610969578063af0d37bc14610978578063b04a69fd1461098b578063b29d9b6e1461099e57600080fd5b806396fd1c421461090a5780639b6080891461091d5780639c9d7d3f14610930578063a1217e7d1461094357600080fd5b80638d01450f116102055780638d01450f146108a25780638da5cb5b146108aa57806390f81702146108d15780639314b03f146108e4578063957343f0146108f757600080fd5b806375e2d946146108565780637f1d9ae61461086957806380c0c3e71461087c5780638ce269991461088f57600080fd5b8063402d44fb11610347578063558bdb29116102cf57806368087cc31161029357806368087cc3146107fb578063681504cd1461080e5780636e2f7ad3146108215780636ed755961461082a5780637063b06c1461084d57600080fd5b8063558bdb29146107b5578063578c8579146107be5780635bfa896a146107d1578063659a544a146107df57806367f239dd146107e857600080fd5b80634970aa88116103165780634970aa88146106ad5780634a3ca717146106c05780634df7e3d0146106d3578063514ea4bf146106dc578063556769ba146107a257600080fd5b8063402d44fb1461067257806342b6c9fb1461068557806342bc52921461069857806348af71321461048257600080fd5b80631816eb13116103ca5780632353b18e116103995780632353b18e14610583578063244d59cb146105a957806332530d7f146105bc57806334327d8b146105cf5780633850c7bd146105e257600080fd5b80631816eb13146105165780631a6865021461051f5780631d2637ab1461054a5780632130ce0d1461055357600080fd5b806310f222211161041157806310f22221146104ab57806311e715d6146104d65780631376ff3e146104e757806314e2b929146104fa578063159054ea1461050d57600080fd5b80624b204514610442578063082167121461046f57806308ef2b4c14610482578063098bcc5614610498575b600080fd5b610455610450366004614ef3565b610c84565b604080519283526020830191909152015b60405180910390f35b61045561047d366004614f81565b61155d565b61048a611695565b604051908152602001610466565b6104556104a6366004614ff2565b611707565b600b546104be906001600160a01b031681565b6040516001600160a01b039091168152602001610466565b6001546001600160a01b031661048a565b61048a6104f5366004615059565b611822565b61048a6105083660046150a6565b611a29565b61048a61271081565b61048a60105481565b600254610532906001600160801b031681565b6040516001600160801b039091168152602001610466565b61048a60075481565b610566610561366004615059565b611aeb565b604080519283526001600160801b03909116602083015201610466565b6105966105913660046150a6565b611d6a565b60405161ffff9091168152602001610466565b6104556105b73660046150bf565b611d96565b6104556105ca366004615129565b6120aa565b61048a6105dd366004615172565b6122d1565b60015461062d906001600160a01b0381169061ffff600160a01b820481169160ff600160b01b8204811692600160b81b8304821692600160c01b810490921691600160c81b90041686565b604080516001600160a01b03909716875261ffff958616602088015260ff909416938601939093529015156060850152151560808401521660a082015260c001610466565b6105326106803660046151a4565b612509565b61048a610693366004615129565b6125c9565b6106ab6106a63660046151e1565b61279c565b005b6106ab6106bb3660046151fe565b6127e8565b61048a6106ce366004615257565b6128e2565b61048a600e5481565b6107476106ea3660046150a6565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006909501546001600160801b0380861697600160801b96879004821697828716979096048216959190941693929189565b604080516001600160801b039a8b168152988a1660208a015296891696880196909652938716606087015295909116608085015260a084015260c083019390935260e082019290925261010081019190915261012001610466565b6104556107b03660046150bf565b6128ff565b61048a600d5481565b6106ab6107cc3660046151fe565b6129f4565b61048a662386f26fc1000081565b61048a60065481565b6005546104be906001600160a01b031681565b610566610809366004615283565b612ac5565b6106ab61081c3660046152b9565b612c93565b61048a600c5481565b61083d610838366004615129565b612d3c565b6040519015158152602001610466565b61048a600f5481565b6106ab6108643660046152e5565b612df5565b610455610877366004615311565b612f83565b61048a61088a3660046152e5565b613088565b6104be61089d366004615367565b6130c6565b6106ab6130e5565b6104be7f000000000000000000000000000000000000000000000000000000000000000081565b6009546104be906001600160a01b031681565b61048a6108f23660046152e5565b613157565b6106ab610905366004615283565b61316d565b6106ab6109183660046152b9565b61331e565b61053261092b366004615129565b61341f565b6106ab61093e366004615283565b613474565b61048a610951366004615382565b6135ac565b61048a6109643660046153c0565b613718565b61048a670de0b6b3a764000081565b6104556109863660046153e5565b613770565b61048a6109993660046152e5565b613867565b61048a6109ac3660046152e5565b61389d565b61048a6109bf36600461544f565b6138c4565b610a626109d2366004615367565b60036020819052600091825260409091208054600182015460028301549383015460048401546005909401546001600160801b0380851696600160801b95869004600f0b9694959094600685900b94600160381b81046001600160a01b031694600160d81b820463ffffffff1694600160f81b90920460ff1693828416938190048316928083169291909104168c565b604080516001600160801b039d8e168152600f9c909c0b60208d01528b019990995260608a019790975260069590950b60808901526001600160a01b0390931660a088015263ffffffff90911660c0870152151560e08601528516610100850152841661012084015283166101408301529190911661016082015261018001610466565b6104be7f000000000000000000000000000000000000000000000000000000000000000081565b6104be7f000000000000000000000000000000000000000000000000000000000000000081565b6106ab610b42366004615484565b6138fb565b610b6e7f000000000000000000000000000000000000000000000000000000000000000081565b60405160029190910b8152602001610466565b6104be7f000000000000000000000000000000000000000000000000000000000000000081565b610bcf7f000000000000000000000000000000000000000000000000000000000000000081565b60405162ffffff9091168152602001610466565b600a546104be906001600160a01b031681565b61048a610c04366004615257565b6139c6565b61048a610c173660046152e5565b6139d4565b610566610c2a366004615283565b613a1c565b61048a610c3d366004615382565b613af4565b6104be7f000000000000000000000000000000000000000000000000000000000000000081565b6106ab613c28565b61048a610c7f3660046152e5565b613c73565b60055460009081906001600160a01b03163314610cbc5760405162461bcd60e51b8152600401610cb3906154a4565b60405180910390fd5b60005460ff1615610cdf5760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff1916600117905560408051808201909152600f81526e2d2d2d4e65772054726164652d2d2d60881b6020820152610d1b90613d39565b6040805160c0810182526001546001600160a01b03808216835261ffff600160a01b83048116602080860182905260ff600160b01b8604811687890152600160b81b860481161515606080890191909152600160c01b87049091161515608080890191909152600160c81b90960490931660a08701528651610100810188528d81526000918101829052865190941696840196909652908201529192662386f26fc1000092909181018b610dd157600754610dd5565b6006545b8152600060208083018290526002546001600160801b03166040808501829052606094850191909152805193840181528284529083018290528281018290528301519293509091908b1390610e2a9085613d7f565b8015610e3457508b155b15610e8457600183604001818151610e4c9190615502565b9052506040830151610e5d90611d6a565b61ffff16606084018190526001805461ffff60a01b1916600160a01b830217905560208601525b825115801590610e98575089836040015114155b1561142257610ef460405180610100016040528060008152602001600061ffff1681526020016000151581526020016000815260200160008152602001600081526020016000815260200160006001600160801b031681525090565b604084015181526060840151610f0b90868f6138c4565b60608201528c610f2b5760018460600151610f269190615515565b610f3b565b6060840151610f3b906001615537565b61ffff1660208201526060840151610f5590600390613d93565b6001600160801b031660e082015281610f9257610f8d8160e001518560c00151610f7f9190615552565b6001600160801b0316613ea2565b610fb7565b610fb78160e001518560c00151610fa99190615552565b6001600160801b0316613ed9565b83526040840151610fc8908e613718565b60408085018290528501518451610fdf929061389d565b60208401908152604085810151606084015187518351631922027560e11b815260048101939093526024830191909152604482015262ffffff7f000000000000000000000000000000000000000000000000000000000000000016606482015285516084820152915160a483015284015160c482015273__$7f722a1af7b4060aab6915c87e2e2208cb$__9063324404ea9060e401608060405180830381865af4158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b59190615572565b60c085015260a08401526080830152604080860191909152805180820190915260088152675f5f5f5f5f5f5f5f60c01b60208201526110f390613d39565b61112160405180604001604052806008815260200167435552505249434560c01b8152508560400151613f10565b61116d6040518060400160405280601e81526020017f74726164696e673b206c69717569646974792c20616d6f756e746c65667400008152508560c001516001600160801b0316613f10565b83516111819061117c906155a8565b613f55565b6111cd6040518060400160405280601881526020017f6e65787470726963656c696d69742f706f696e746e65787400000000000000008152508260600151836020015161ffff16613f9a565b6111f4604051806040016040528060018152602001606160f81b8152508460000151613f10565b61122d6040518060400160405280600e81526020016d185b5bdd5b9d1a5b985b991bdd5d60921b81525082608001518360a00151613f9a565b61125b6040518060400160405280600381526020016239963160e91b81525084602001518560400151613f9a565b811561127d576080810151845185906112759083906155c4565b905250611295565b6080810151845185906112919083906155e4565b9052505b8060a00151846020018181516112ab9190615502565b90525060c08401516001600160801b0316156112f25760c080850151908201516112dd916001600160801b0316613fe1565b846080018181516112ee9190615502565b9052505b806060015184604001510361141c5760e08101516001600160801b031615611326576060840151611326906003908f613ff6565b6020810151600654600754600092611340926003926140ed565b9050866080015115801561136357508660a0015161ffff16826020015161ffff16145b156113915760208083015161ffff1660009081526008909152604090205461138e90600f0b8261560c565b90505b604080518082018252600a81526964796e616d69634c697160b01b6020808301919091528481015161ffff166000908152600890915291909120546113df9190600f90810b9084900b613f9a565b8d6113f0576113ed81615642565b90505b6113fe8560c0015182612509565b6001600160801b031660c086015250602081015161ffff1660608501525b50610e84565b61142f8360400151614140565b600180546001600160a01b0319166001600160a01b03929092169190911790556020850151606084015161ffff91821691161461148c5760608301516001805461ffff909216600160a01b0261ffff60a01b199092169190911790555b8260c001516001600160801b03168360e001516001600160801b0316146114d25760c0830151600280546001600160801b0319166001600160801b039092169190911790555b8b156114e15760808301516006555b806115125761271083602001516114f89190615502565b83516115038d6155a8565b61150d91906155e4565b61153f565b8b61152d578251611523908c6155c4565b836020015161153f565b8251611539908c6155c4565b83602001515b6000805460ff19169055909e909d509b505050505050505050505050565b600080831561158e57841561158257611578838760006120aa565b90925090506115b2565b611578838760016120aa565b84156115a057611578838760016120aa565b6115ac838760006120aa565b90925090505b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906115e49086908690600401615668565b6020604051808303816000875af1158015611603573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116279190615681565b50600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061165a9086908590600401615668565b600060405180830381600087803b15801561167457600080fd5b505af1158015611688573d6000803e3d6000fd5b5050505094509492505050565b6009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156116de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611702919061569e565b905090565b60055460009081906001600160a01b031633146117365760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff16156117595760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff19166001178155611773600433898961415b565b90508060050154856001600160801b03161161179857846001600160801b031661179e565b80600501545b92508060060154846001600160801b0316116117c357836001600160801b03166117c9565b80600601545b915082156117eb57828160050160008282546117e591906156b7565b90915550505b811561180b578181600601600082825461180591906156b7565b90915550505b506000805460ff1916905590969095509350505050565b6005546000906001600160a01b0316331461184f5760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff16156118725760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff191660019081179091555461ffff85169061189b906001600160a01b0316611d6a565b61ffff16036118f85760405162461bcd60e51b815260206004820152602360248201527f43616e277420726564756365206f7264657220666f722063757272656e74207460448201526269636b60e81b6064820152608401610cb3565b6000611914338661190a816001615537565b600492919061415b565b905061192c61192285615642565b82908560006141c6565b6119438561193986615642565b600391908661429b565b600083611970577f0000000000000000000000000000000000000000000000000000000000000000611992565b7f00000000000000000000000000000000000000000000000000000000000000005b9050836119d9576119d46119aa61089d886001615537565b6001600160a01b03166119bc886130c6565b6001600160a01b0316876001600160801b0316613c73565b611a14565b611a146119ea61089d886001615537565b6001600160a01b03166119fc886130c6565b6001600160a01b0316876001600160801b0316613088565b6000805460ff19169055979650505050505050565b600c54600d5460405163018b035160e01b8152600481018490526000602482018190526044820193909352606481019190915260016084820152819073__$7f722a1af7b4060aab6915c87e2e2208cb$__9063018b03519060a4016040805180830381865af4158015611aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac491906156ca565b50905082611ada82670de0b6b3a764000061436c565b611ae491906156b7565b9392505050565b60055460009081906001600160a01b03163314611b1a5760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff1615611b3d5760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff19166001179055828015611b7357506001546001600160a01b0316611b67866130c6565b6001600160a01b031611155b15611bb15760405162461bcd60e51b815260206004820152600e60248201526d61736b2062656c6f77207072696560901b6044820152606401610cb3565b82158015611bdb57506001546001600160a01b0316611bcf866130c6565b6001600160a01b031610155b15611c1a5760405162461bcd60e51b815260206004820152600f60248201526e626964732061626f7665207072696560881b6044820152606401610cb3565b6000611c2c878761190a816001615537565b9050611c3a60038786614381565b9150611c48818686856141c6565b611c55600387878761429b565b600084611c82577f0000000000000000000000000000000000000000000000000000000000000000611ca4565b7f00000000000000000000000000000000000000000000000000000000000000005b905084611ceb57611ce6611cbc61089d896001615537565b6001600160a01b0316611cce896130c6565b6001600160a01b0316886001600160801b0316613c73565b611d26565b611d26611cfc61089d896001615537565b6001600160a01b0316611d0e896130c6565b6001600160a01b0316886001600160801b0316613088565b9350611d5360405180604001604052806009815260200168185b5bdd5b9d189a5960ba1b81525085613f10565b50506000805460ff19169055909590945092505050565b6000670de0b6b3a7640000611d8683662386f26fc10000613fe1565b611d909190615704565b92915050565b6000808615611f0f57611dae33600188888888610c84565b90925090507f000000000000000000000000000000000000000000000000000000000000000015611deb57611de633828460016143d9565b6120a0565b6000611df5611695565b604051636d29069f60e11b8152909150339063da520d3e90611e1f90869089908990600401615718565b600060405180830381600087803b158015611e3957600080fd5b505af1158015611e4d573d6000803e3d6000fd5b505050508083611e5d9190615502565b611e65611695565b1015611e9c5760405162461bcd60e51b81526020600482015260066024820152653130b622a92960d11b6044820152606401610cb3565b600a546001600160a01b03166340c10f19611eb9868801886151e1565b846040518363ffffffff1660e01b8152600401611ed7929190615668565b600060405180830381600087803b158015611ef157600080fd5b505af1158015611f05573d6000803e3d6000fd5b50505050506120a0565b611f1e30600088888888610c84565b90925090508080611f3784670de0b6b3a764000061452b565b611f4191906156b7565b91507f000000000000000000000000000000000000000000000000000000000000000015611f7b57611f7633848460006143d9565b61209e565b6000611f85611695565b604051636d29069f60e11b8152909150339063da520d3e90611faf9086908a908a90600401615718565b600060405180830381600087803b158015611fc957600080fd5b505af1158015611fdd573d6000803e3d6000fd5b505050508083611fed9190615502565b611ff5611695565b101561202c5760405162461bcd60e51b81526020600482015260066024820152653130b622a92960d11b6044820152606401610cb3565b600b546001600160a01b03166340c10f19612049878901896151e1565b866040518363ffffffff1660e01b8152600401612067929190615668565b600060405180830381600087803b15801561208157600080fd5b505af1158015612095573d6000803e3d6000fd5b50505050819350505b505b9550959350505050565b60055460009081906001600160a01b031633146120d95760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff16156120fc5760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff1916600190811782556040805160c08101825282546001600160a01b038116825261ffff600160a01b820481166020840152600160b01b820460ff90811694840194909452600160b81b8204841615156060840152600160c01b820490931615156080830152600160c81b900490911660a0820152919061218c908890889061190a908290615537565b60015490915061ffff8716906121aa906001600160a01b0316611d6a565b61ffff16146121ef5760405162461bcd60e51b81526020600482015260116024820152704e6f742063757272656e7420707269636560781b6044820152606401610cb3565b600085612210576001820154600160801b90046001600160801b031661221f565b60018201546001600160801b03165b905061223761222d82615642565b83908860006141c6565b61224e8761224483615642565b600391908961429b565b61228561225f61089d896001615537565b6001600160a01b031684600001516001600160a01b0316836001600160801b0316613088565b93506122b983600001516001600160a01b03166122a1896130c6565b6001600160a01b0316836001600160801b0316613c73565b6000805460ff19169055989397509295505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461233a5760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b6044820152606401610cb3565b600061235a6123498587615502565b61235488600261574e565b90614540565b9050600061236c8261235488886156b7565b905073__$7f722a1af7b4060aab6915c87e2e2208cb$__63018b0351612392898761436c565b6040516001600160e01b031960e084901b16815260048101919091526000602482015260448101849052606481018990526001608482015260a4016040805180830381865af41580156123e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240d91906156ca565b50600f55600e86905586612421838761436c565b61242b898761436c565b600f54612438908961436c565b61244291906156b7565b61244c9190615502565b61245691906156b7565b925061248f61246d670de0b6b3a764000083614540565b600280546001600160801b0319166001600160801b0392909216919091179055565b61249a600e54614555565b6124d16124a686611d6a565b61ffff16600090815260086020526040902080546001600160801b03191660016001607f1b03179055565b6124ff6124dd86611d6a565b6001805461ffff909216600160c81b0261ffff60c81b19909216919091179055565b5050949350505050565b60008082600f0b1215612576576001600160801b03831661252983615642565b6125339085615765565b9150816001600160801b0316106125715760405162461bcd60e51b81526020600482015260026024820152614c5360f01b6044820152606401610cb3565b611d90565b6001600160801b03831661258a8385615552565b9150816001600160801b03161015611d905760405162461bcd60e51b81526020600482015260026024820152614c4160f01b6044820152606401610cb3565b6005546000906001600160a01b031633146125f65760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff16156126195760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff19166001908117825561263b908690869061190a908290615537565b9050600061264b60038686614381565b90506000846126645782546001600160801b0316612677565b8254600160801b90046001600160801b03165b9050806001600160801b0316826001600160801b0316116126d05760405162461bcd60e51b8152602060048201526013602482015272141bdcda5d1a5bdb881b9bdd08199a5b1b1959606a1b6044820152606401610cb3565b6000856126f1576001840154600160801b90046001600160801b0316612700565b60018401546001600160801b03165b905085156127325761272b61271961089d896001615537565b6001600160a01b03166122a1896130c6565b9450612770565b61276d61274361089d896001615537565b6001600160a01b0316612755896130c6565b6001600160a01b0316836001600160801b0316613088565b94505b61278661277c82615642565b85908860006141c6565b50506000805460ff191690555090949350505050565b6005546001600160a01b031633146127c65760405162461bcd60e51b8152600401610cb3906154a4565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000806127f9338888888888613770565b6009546040516323b872dd60e01b81529294509092506001600160a01b0316906323b872dd9061283190339030908790600401615785565b6020604051808303816000875af1158015612850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128749190615681565b50600a54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906128a79033908590600401615668565b600060405180830381600087803b1580156128c157600080fd5b505af11580156128d5573d6000803e3d6000fd5b5050505050505050505050565b60006128ef600384613d93565b6001600160801b03169392505050565b60008086156129675761291733600088888888610c84565b90925090507f00000000000000000000000000000000000000000000000000000000000000001561294f57611de633828460016145ab565b611de661295e848601866151e1565b828460016145ab565b61297633600188888888610c84565b9092509050818061298f83670de0b6b3a764000061452b565b61299991906156b7565b92507f0000000000000000000000000000000000000000000000000000000000000000156129ce57611f7633848460006145ab565b6129e66129dd858701876151e1565b848460006145ab565b809150509550959350505050565b600080612a0333888888612f83565b91509150612a1b3388886001600160801b0380611707565b505060095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90612a4f9033908690600401615668565b6020604051808303816000875af1158015612a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a929190615681565b50600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906128a79033908590600401615668565b6000808315612b8d57612b0c8387612b05612ae461089d836001615537565b6001600160a01b0316612af68b6130c6565b6001600160a01b03168a6139d4565b6000611aeb565b6009546040516323b872dd60e01b81529294509092506001600160a01b0316906323b872dd90612b4490869030908790600401615785565b6020604051808303816000875af1158015612b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b879190615681565b50612c8a565b612bcb8387612bc4612ba361089d836001615537565b6001600160a01b0316612bb58b6130c6565b6001600160a01b03168a613867565b6001611aeb565b90925090506000612c04612be361089d896001615537565b6001600160a01b0316612bf5896130c6565b6001600160a01b031688613c73565b612c0e90846156b7565b6009546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd90612c4390879030908690600401615785565b6020604051808303816000875af1158015612c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c869190615681565b5091505b94509492505050565b6005546001600160a01b03163314612cbd5760405162461bcd60e51b8152600401610cb3906157a9565b600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990612cef9085908590600401615668565b600060405180830381600087803b158015612d0957600080fd5b505af1158015612d1d573d6000803e3d6000fd5b505050508060106000828254612d339190615502565b90915550505050565b600080612d4f858561190a816001615537565b90506000612d5f60038686614381565b9050600084612d785782546001600160801b0316612d8b565b8254600160801b90046001600160801b03165b9050600085612dae576001840154600160801b90046001600160801b0316612dbd565b60018401546001600160801b03165b90506000816001600160801b0316118015612de95750816001600160801b0316836001600160801b0316115b98975050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612e5c5760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b6044820152606401610cb3565b670de0b6b3a7640000612e7d612e728486615502565b61235486600261574e565b612e8791906156b7565b600d55612eac612e978385615502565b600d5461235490670de0b6b3a76400006156b7565b600c5573__$7f722a1af7b4060aab6915c87e2e2208cb$__63018b0351612ed3858461436c565b600c54600d546040516001600160e01b031960e086901b168152600481019390935260006024840152604483019190915260648201526001608482015260a4016040805180830381865af4158015612f2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5391906156ca565b600e55600f55600c54612f739061246d90670de0b6b3a764000090614540565b612f7e600e54614555565b505050565b60055460009081906001600160a01b03163314612fb25760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff1615612fd55760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff19166001178155604080516080810182526001600160a01b038916815261ffff80891660208301528716918101919091528190819061302b906060810161302189615642565b600f0b90526146b1565b92509250925060008211806130405750600081115b15613070578183600501546130559190615502565b8184600601546130659190615502565b600685015560058401555b6000805460ff19169055909890975095505050505050565b6000828410156130aa5760405162461bcd60e51b8152600401610cb3906157cb565b6130be826130b885876156b7565b9061452b565b949350505050565b6000611d906130e0662386f26fc1000061ffff851661574e565b614140565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461312d5760405162461bcd60e51b8152600401610cb3906157a9565b600280546001600160801b03191690556131556001805460ff60c01b1916600160c01b179055565b565b60006130be8261316785876156b7565b90614949565b811561321757600061319a828661319361318e612ae461089d846001615537565b61495e565b6000611822565b60095460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb906131cd9085908590600401615668565b6020604051808303816000875af11580156131ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132109190615681565b5050613318565b600061324e61318e61322d61089d886001615537565b6001600160a01b031661323f886130c6565b6001600160a01b031687613867565b905061325d8286836001611822565b506009546001600160a01b031663a9059cbb836132ab61328161089d8a6001615537565b6001600160a01b03166132938a6130c6565b6001600160a01b0316866001600160801b0316613c73565b6132b590886156b7565b6040518363ffffffff1660e01b81526004016132d2929190615668565b6020604051808303816000875af11580156132f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133159190615681565b50505b50505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146133665760405162461bcd60e51b8152600401610cb3906157a9565b60001981036133e9576009546001600160a01b031663a9059cbb83613389611695565b6040518363ffffffff1660e01b81526004016133a6929190615668565b6020604051808303816000875af11580156133c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f7e9190615681565b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906133a69085908590600401615668565b5050565b60008161344f57613436848461190a816001615537565b60010154600160801b90046001600160801b03166130be565b61345f848461190a816001615537565b600101546001600160801b0316949350505050565b811561350757600061349c828661349561318e612ba361089d846001615537565b6001611822565b600a546040516340c10f1960e01b81529192506001600160a01b0316906340c10f19906134cf9085908590600401615668565b600060405180830381600087803b1580156134e957600080fd5b505af11580156134fd573d6000803e3d6000fd5b5050505050613318565b613541818561319361318e61352061089d846001615537565b6001600160a01b03166135328a6130c6565b6001600160a01b031689613867565b50600b546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906135749084908790600401615668565b600060405180830381600087803b15801561358e57600080fd5b505af11580156135a2573d6000803e3d6000fd5b5050505050505050565b6000821561363c576135c0828560016125c9565b60095460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb906135f39085908590600401615668565b6020604051808303816000875af1158015613612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136369190615681565b50611ae4565b600061364a8386600061341f565b9050613658838660006125c9565b915061367d61366b61089d876001615537565b6001600160a01b03166122a1876130c6565b61368f83670de0b6b3a764000061452b565b61369991906156b7565b60095460405163a9059cbb60e01b81529193506001600160a01b03169063a9059cbb906136cc9086908690600401615668565b6020604051808303816000875af11580156136eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061370f9190615681565b50509392505050565b60008061372484611d6a565b90508215801561373f575061373d61ffff8216856157ee565b155b6137515761374c816130c6565b61375f565b61375f61089d600183615515565b6001600160a01b0316949350505050565b60055460009081906001600160a01b0316331461379f5760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff16156137c25760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff191660011790556001600160801b0385166138105760405162461bcd60e51b81526020600482015260086024820152670c08185b5bdd5b9d60c21b6044820152606401610cb3565b61384d60405180608001604052808a6001600160a01b031681526020018961ffff1681526020018861ffff16815260200187600f0b8152506146b1565b6000805460ff19169055909a909950975050505050505050565b6000828410156138895760405162461bcd60e51b8152600401610cb3906157cb565b6130be61389684866156b7565b8390613fe1565b6000816000036138b05750600019611ae4565b6130be826138be85876156b7565b90613fe1565b600081156138ed57826138d8856001615537565b61ffff166138e6919061574e565b9050611ae4565b6138e68361ffff861661574e565b6005546001600160a01b031633146139255760405162461bcd60e51b8152600401610cb3906157a9565b801561399457600a54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061395d9086908690600401615668565b600060405180830381600087803b15801561397757600080fd5b505af115801561398b573d6000803e3d6000fd5b50505050505050565b600b54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061395d9086908690600401615668565b60006128ef60038484614381565b6000828410156139f65760405162461bcd60e51b8152600401610cb3906157cb565b6130be6138966002613a088688615502565b613a129190615704565b6130b886886156b7565b6000808315613aa857613a3b8387612bc4612ba361089d836001615537565b600a54604051632770a7eb60e21b81529294509092506001600160a01b031690639dc29fac90613a719086908690600401615668565b600060405180830381600087803b158015613a8b57600080fd5b505af1158015613a9f573d6000803e3d6000fd5b50505050612c8a565b613abe8387612b05612ba361089d836001615537565b600b54604051632770a7eb60e21b81529294509092506001600160a01b031690639dc29fac9061165a9086908990600401615668565b60008215613b75576000613b0a838660006125c9565b600a546040516340c10f1960e01b81529192506001600160a01b0316906340c10f1990613b3d9086908590600401615668565b600060405180830381600087803b158015613b5757600080fd5b505af1158015613b6b573d6000803e3d6000fd5b5050505050611ae4565b600b546001600160a01b03166340c10f1983613bcd613b9861089d896001615537565b6001600160a01b0316613baa896130c6565b6001600160a01b0316613bbf338b600161341f565b6001600160801b0316613088565b6040518363ffffffff1660e01b8152600401613bea929190615668565b600060405180830381600087803b158015613c0457600080fd5b505af1158015613c18573d6000803e3d6000fd5b505050506130be828560016125c9565b6005546001600160a01b03163314613c525760405162461bcd60e51b8152600401610cb3906154a4565b6001805460ff60b81b198116600160b81b9182900460ff1615909102179055565b600082841015613c955760405162461bcd60e51b8152600401610cb3906157cb565b73__$7f722a1af7b4060aab6915c87e2e2208cb$__636ca35e9e613cba868686613088565b6000613cc586613ed9565b6040516001600160e01b031960e086901b16815260048101939093526024830191909152604482015260648101869052608401602060405180830381865af4158015613d15573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130be919061569e565b613d7c81604051602401613d4d9190615848565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052614974565b50565b6000613d8b82846157ee565b159392505050565b61ffff811660009081526020838152604080832081516101808101835281546001600160801b038082168352600160801b91829004600f0b95830195909552600183015493820193909352600282015460608201526003820154600681900b6080830152600160381b81046001600160a01b031660a0830152600160d81b810463ffffffff1660c0830152600160f81b900460ff16151560e08201526004820154808516610100830181905290849004851661012083015260059092015480851661014083015292909204909216610160820152901580613e8057506101208101516001600160801b0316155b613e8c57613e8c61585b565b8061012001518161010001516130be9190615552565b60008115613ebc57612571670de0b6b3a764000083614949565b611d90613eca836001615502565b670de0b6b3a764000090614949565b60008115613ef357612571670de0b6b3a764000083613fe1565b611d90613f01836001615502565b670de0b6b3a764000090613fe1565b61341b8282604051602401613f26929190615871565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052614974565b613d7c81604051602401613f6b91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052614974565b612f7e838383604051602401613fb293929190615893565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052614974565b6000611ae483670de0b6b3a764000084614995565b61ffff821660009081526020849052604090208115614092576004810180546001600160801b03191690556005810180546001600160801b031690600061403c836158b8565b91906101000a8154816001600160801b0302191690836001600160801b031602179055505061408d604051806040016040528060068152602001657469636b3f3f60d01b8152508461ffff16613f10565b613318565b6004810180546001600160801b03908116909155600582018054600160801b90049091169060106140c2836158b8565b91906101000a8154816001600160801b0302191690836001600160801b031602179055505050505050565b61ffff8316600090815260208590526040902080546001820154600160801b909104600f0b919061411e90856156b7565b6001820155600281015461413290846156b7565b600290910155949350505050565b806001600160a01b038116811461415657600080fd5b919050565b6040805160609490941b6bffffffffffffffffffffffff191660208086019190915260f093841b6001600160f01b031990811660348701529290931b909116603684015280516018818503018152603890930181528251928201929092206000908152929052902090565b81156142305760018401546141e4906001600160801b031684612509565b6001850180546001600160801b0319166001600160801b03929092169190911790556000600f84900b131561408d5783546001600160801b03808316600160801b029116178455613318565b600184015461424f90600160801b90046001600160801b031684612509565b6001850180546001600160801b03928316600160801b0292169190911790556000600f84900b13156133185783546001600160801b0319166001600160801b0391909116179092555050565b80156143045761ffff83166000908152602085905260409020600401546142cb906001600160801b031683612509565b61ffff8416600090815260208690526040902060040180546001600160801b0319166001600160801b0392909216919091179055613318565b61ffff831660009081526020859052604090206004015461433590600160801b90046001600160801b031683612509565b61ffff8416600090815260208690526040902060040180546001600160801b03928316600160801b02921691909117905550505050565b6000611ae48383670de0b6b3a76400006149b4565b6000816143b45761ffff8316600090815260208590526040902060050154600160801b90046001600160801b03166130be565b505061ffff16600090815260209190915260409020600501546001600160801b031690565b801561444857600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906144119087908790600401615668565b600060405180830381600087803b15801561442b57600080fd5b505af115801561443f573d6000803e3d6000fd5b505050506144ad565b600b546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061447a9087908790600401615668565b600060405180830381600087803b15801561449457600080fd5b505af11580156144a8573d6000803e3d6000fd5b505050505b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906144e190879030908790600401615785565b6020604051808303816000875af1158015614500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145249190615681565b5050505050565b6000611ae48383670de0b6b3a7640000614995565b6000611ae483670de0b6b3a7640000846149b4565b61455e81611d6a565b6001805461ffff92909216600160a01b0261ffff60a01b1990921691909117905561458881614140565b600180546001600160a01b0319166001600160a01b039290921691909117905550565b801561461a57600a54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906145e39087908690600401615668565b600060405180830381600087803b1580156145fd57600080fd5b505af1158015614611573d6000803e3d6000fd5b5050505061467f565b600b54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061464c9087908690600401615668565b600060405180830381600087803b15801561466657600080fd5b505af115801561467a573d6000803e3d6000fd5b505050505b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906144e19087908790600401615668565b6040805160c0810182526001546001600160a01b038116825261ffff600160a01b82048116602080850182905260ff600160b01b8504811686880152600160b81b850481161515606080880191909152600160c01b860490911615156080870152600160c81b90940490921660a08501528551918601519486015192860151600095869586959094614745949093906149d2565b93508460600151600f0b60001461494157846020015161ffff16816020015161ffff1610156147d7576147d061477e86604001516130c6565b6001600160a01b031661479487602001516130c6565b6001600160a01b031660008860600151600f0b12156147c35787606001516147bb90615642565b600f0b613088565b8760600151600f0b613088565b9150614941565b846040015161ffff16816020015161ffff1610156148e45760025460408601516001600160801b039091169061485290614810906130c6565b6001600160a01b031683600001516001600160a01b031660008960600151600f0b12156148455788606001516147bb90615642565b8860600151600f0b613088565b92506148ae82600001516001600160a01b031661487288602001516130c6565b6001600160a01b031660008960600151600f0b12156148a157886060015161489990615642565b600f0b613c73565b8860600151600f0b613c73565b93506148be818760600151612509565b600280546001600160801b0319166001600160801b039290921691909117905550614941565b61493e6148f486604001516130c6565b6001600160a01b031661490a87602001516130c6565b6001600160a01b031660008860600151600f0b121561493157876060015161489990615642565b8760600151600f0b613c73565b92505b509193909250565b6000611ae483670de0b6b3a764000084614a5e565b806001600160801b038116811461415657600080fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8282028115158415858304851417166149ad57600080fd5b0492915050565b60008260001904841183021582026149cb57600080fd5b5091020490565b60006149e1600487878761415b565b60065460075491925090600f85900b15614a2e57600654600754614a10916003918a9188918a91906000614a8c565b50600654600754614a2c91600391899188918a91906001614a8c565b505b600080614a4060038a8a898888614b98565b9092509050614a5185888484614c84565b5050505095945050505050565b828202811515841585830485141716614a7657600080fd5b6001826001830304018115150290509392505050565b61ffff8616600090815260208890526040812080546001600160801b031682614ab58289612509565b6001600160801b0380821615908416801591909114159550909150600003614b0d578861ffff168a61ffff1611614af55760018301879055600283018690555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b03821617835584614b53578254614b4e90614b4990600f8b810b91600160801b9004900b6155e4565b614e76565b614b71565b8254614b7190614b4990600f8b810b91600160801b9004900b6155c4565b83546001600160801b03918216600160801b02911617909255509098975050505050505050565b61ffff80861660008181526020899052604080822088851683529082209193849391929184918291908a1610614bd957505060018201546002830154614bfd565b6001840154614be890896156b7565b9150836002015487614bfa91906156b7565b90505b6000808b61ffff168b61ffff161015614c2157505060018301546002840154614c45565b6001850154614c30908b6156b7565b9150846002015489614c4291906156b7565b90505b81614c50858c6156b7565b614c5a91906156b7565b975080614c67848b6156b7565b614c7191906156b7565b9650505050505050965096945050505050565b604080516101208101825285546001600160801b038082168352600160801b918290048116602084015260018801548082169484019490945292048216606082015260028601549091166080820152600385015460a0820152600485015460c0820152600585015460e082015260068501546101008201526000600f85900b8103614d5657600082608001516001600160801b031611614d4b5760405162461bcd60e51b815260206004820152600260248201526104e560f41b6044820152606401610cb3565b506080810151614d67565b614d64826080015186612509565b90505b6000614d9a83608001516001600160801b0316670de0b6b3a76400008560a0015188614d9391906156b7565b9190614995565b90506000614dc884608001516001600160801b0316670de0b6b3a76400008660c0015188614d9391906156b7565b905086600f0b600014614df3576002880180546001600160801b0319166001600160801b0385161790555b60038801869055600488018590556001600160801b038216151580614e2157506000816001600160801b0316115b156135a257816001600160801b0316886005016000828254614e439190615502565b92505081905550806001600160801b0316886006016000828254614e679190615502565b90915550505050505050505050565b80600f81900b811461415657600080fd5b6001600160a01b0381168114613d7c57600080fd5b8015158114613d7c57600080fd5b60008083601f840112614ebc57600080fd5b50813567ffffffffffffffff811115614ed457600080fd5b602083019150836020828501011115614eec57600080fd5b9250929050565b60008060008060008060a08789031215614f0c57600080fd5b8635614f1781614e87565b95506020870135614f2781614e9c565b94506040870135935060608701359250608087013567ffffffffffffffff811115614f5157600080fd5b614f5d89828a01614eaa565b979a9699509497509295939492505050565b803561ffff8116811461415657600080fd5b60008060008060808587031215614f9757600080fd5b614fa085614f6f565b93506020850135614fb081614e9c565b92506040850135614fc081614e9c565b91506060850135614fd081614e87565b939692955090935050565b80356001600160801b038116811461415657600080fd5b600080600080600060a0868803121561500a57600080fd5b853561501581614e87565b945061502360208701614f6f565b935061503160408701614f6f565b925061503f60608701614fdb565b915061504d60808701614fdb565b90509295509295909350565b6000806000806080858703121561506f57600080fd5b843561507a81614e87565b935061508860208601614f6f565b925061509660408601614fdb565b91506060850135614fd081614e9c565b6000602082840312156150b857600080fd5b5035919050565b6000806000806000608086880312156150d757600080fd5b85356150e281614e9c565b94506020860135935060408601359250606086013567ffffffffffffffff81111561510c57600080fd5b61511888828901614eaa565b969995985093965092949392505050565b60008060006060848603121561513e57600080fd5b833561514981614e87565b925061515760208501614f6f565b9150604084013561516781614e9c565b809150509250925092565b6000806000806080858703121561518857600080fd5b5050823594602084013594506040840135936060013592509050565b600080604083850312156151b757600080fd5b6151c083614fdb565b9150602083013580600f0b81146151d657600080fd5b809150509250929050565b6000602082840312156151f357600080fd5b8135611ae481614e87565b60008060008060006080868803121561521657600080fd5b61521f86614f6f565b945061522d60208701614f6f565b935061523b60408701614fdb565b9250606086013567ffffffffffffffff81111561510c57600080fd5b6000806040838503121561526a57600080fd5b61527383614f6f565b915060208301356151d681614e9c565b6000806000806080858703121561529957600080fd5b6152a285614f6f565b9350602085013592506040850135614fc081614e9c565b600080604083850312156152cc57600080fd5b82356152d781614e87565b946020939093013593505050565b6000806000606084860312156152fa57600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561532757600080fd5b843561533281614e87565b935061534060208601614f6f565b925061534e60408601614f6f565b915061535c60608601614fdb565b905092959194509250565b60006020828403121561537957600080fd5b611ae482614f6f565b60008060006060848603121561539757600080fd5b6153a084614f6f565b925060208401356153b081614e9c565b9150604084013561516781614e87565b600080604083850312156153d357600080fd5b8235915060208301356151d681614e9c565b60008060008060008060a087890312156153fe57600080fd5b863561540981614e87565b955061541760208801614f6f565b945061542560408801614f6f565b935061543360608801614fdb565b9250608087013567ffffffffffffffff811115614f5157600080fd5b60008060006060848603121561546457600080fd5b61546d84614f6f565b925060208401359150604084013561516781614e9c565b60008060006060848603121561549957600080fd5b833561546d81614e87565b6020808252600990820152684e6f7420456e74727960b81b604082015260600190565b6020808252600b908201526a4552525f5245454e54525960a81b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611d9057611d906154ec565b61ffff828116828216039080821115615530576155306154ec565b5092915050565b61ffff818116838216019080821115615530576155306154ec565b6001600160801b03818116838216019080821115615530576155306154ec565b6000806000806080858703121561558857600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000600160ff1b82016155bd576155bd6154ec565b5060000390565b8181036000831280158383131683831282161715615530576155306154ec565b8082018281126000831280158216821582161715615604576156046154ec565b505092915050565b600f81810b9083900b0160016001607f1b0381136f7fffffffffffffffffffffffffffffff1982121715611d9057611d906154ec565b600081600f0b60016001607f1b0319810361565f5761565f6154ec565b60000392915050565b6001600160a01b03929092168252602082015260400190565b60006020828403121561569357600080fd5b8151611ae481614e9c565b6000602082840312156156b057600080fd5b5051919050565b81810381811115611d9057611d906154ec565b600080604083850312156156dd57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600082615713576157136156ee565b500490565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b8082028115828204841417611d9057611d906154ec565b6001600160801b03828116828216039080821115615530576155306154ec565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526008908201526732b73a393ca2a92960c11b604082015260600190565b602080825260099082015268383934b1b29022a92960b91b604082015260600190565b6000826157fd576157fd6156ee565b500690565b6000815180845260005b818110156158285760208185018101518683018201520161580c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611ae46020830184615802565b634e487b7160e01b600052600160045260246000fd5b6040815260006158846040830185615802565b90508260208301529392505050565b6060815260006158a66060830186615802565b60208301949094525060400152919050565b60006001600160801b038083168181036158d4576158d46154ec565b600101939250505056fea26469706673582212205a67c1bcf3c2a952071ed171d4c8b3931a5aee475241f455cb604c99e13cf1ee64736f6c63430008110033",
    "sourceMap": "1375:4480:3:-:0;;;1747:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1170:24:0;;;;;1205:22;;;;1929:5:3;1275:6:0;;;;1292:20;;;;1323:15;;;;1909:4:3;;1914:5;;1920:7;;1909:4;1914:5;1388:24:0;2184:4;1388:3;:24;:::i;:::-;1376:9;:36;;-1:-1:-1;;;;;;1376:36:0;-1:-1:-1;;;;;1376:36:0;;;;;;;;;;-1:-1:-1;;1432:10:0;1424:18;;1148:9:1::1;:24:::0;;-1:-1:-1;;;;;;1148:24:1;;::::1;-1:-1:-1::0;;;;;1148:24:1;;::::1;;::::0;;;1182:10:::1;:25:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1217:12:::1;:29:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1256:24:::1;;;::::0;1945:5:3::1;:14:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1970:24:::1;;::::0;-1:-1:-1;1375:4480:3;;-1:-1:-1;;1375:4480:3;14:177:81;93:13;;-1:-1:-1;;;;;135:31:81;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:550::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:50;735:3;724:9;720:19;690:50;:::i;:::-;680:60;;196:550;;;;;;;;:::o;751:356::-;-1:-1:-1;;;;;874:10:81;;;886;;;870:27;917:20;;;;823:19;956:24;;;946:155;;1023:10;1018:3;1014:20;1011:1;1004:31;1058:4;1055:1;1048:15;1086:4;1083:1;1076:15;946:155;;;751:356;;;;:::o;:::-;1375:4480:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "contracts/bonds/GBC.sol": {
        "LinearCurve": [
          {
            "start": 4827,
            "length": 20
          },
          {
            "start": 7403,
            "length": 20
          },
          {
            "start": 9716,
            "length": 20
          },
          {
            "start": 12597,
            "length": 20
          },
          {
            "start": 16155,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "$7f722a1af7b4060aab6915c87e2e2208cb$__9063324404ea9060e401608060405180830381865af4158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b59190615572565b60c085015260a08401526080830152604080860191909152805180820190915260088152675f5f5f5f5f5f5f5f60c01b60208201526110f390613d39565b61112160405180604001604052806008815260200167435552505249434560c01b8152508560400151613f10565b61116d6040518060400160405280601e81526020017f74726164696e673b206c69717569646974792c20616d6f756e746c65667400008152508560c001516001600160801b0316613f10565b83516111819061117c906155a8565b613f55565b6111cd6040518060400160405280601881526020017f6e65787470726963656c696d69742f706f696e746e65787400000000000000008152508260600151836020015161ffff16613f9a565b6111f4604051806040016040528060018152602001606160f81b8152508460000151613f10565b61122d6040518060400160405280600e81526020016d185b5bdd5b9d1a5b985b991bdd5d60921b81525082608001518360a00151613f9a565b61125b6040518060400160405280600381526020016239963160e91b81525084602001518560400151613f9a565b811561127d576080810151845185906112759083906155c4565b905250611295565b6080810151845185906112919083906155e4565b9052505b8060a00151846020018181516112ab9190615502565b90525060c08401516001600160801b0316156112f25760c080850151908201516112dd916001600160801b0316613fe1565b846080018181516112ee9190615502565b9052505b806060015184604001510361141c5760e08101516001600160801b031615611326576060840151611326906003908f613ff6565b6020810151600654600754600092611340926003926140ed565b9050866080015115801561136357508660a0015161ffff16826020015161ffff16145b156113915760208083015161ffff1660009081526008909152604090205461138e90600f0b8261560c565b90505b604080518082018252600a81526964796e616d69634c697160b01b6020808301919091528481015161ffff166000908152600890915291909120546113df9190600f90810b9084900b613f9a565b8d6113f0576113ed81615642565b90505b6113fe8560c0015182612509565b6001600160801b031660c086015250602081015161ffff1660608501525b50610e84565b61142f8360400151614140565b600180546001600160a01b0319166001600160a01b03929092169190911790556020850151606084015161ffff91821691161461148c5760608301516001805461ffff909216600160a01b0261ffff60a01b199092169190911790555b8260c001516001600160801b03168360e001516001600160801b0316146114d25760c0830151600280546001600160801b0319166001600160801b039092169190911790555b8b156114e15760808301516006555b806115125761271083602001516114f89190615502565b83516115038d6155a8565b61150d91906155e4565b61153f565b8b61152d578251611523908c6155c4565b836020015161153f565b8251611539908c6155c4565b83602001515b6000805460ff19169055909e909d509b505050505050505050505050565b600080831561158e57841561158257611578838760006120aa565b90925090506115b2565b611578838760016120aa565b84156115a057611578838760016120aa565b6115ac838760006120aa565b90925090505b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906115e49086908690600401615668565b6020604051808303816000875af1158015611603573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116279190615681565b50600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061165a9086908590600401615668565b600060405180830381600087803b15801561167457600080fd5b505af1158015611688573d6000803e3d6000fd5b5050505094509492505050565b6009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156116de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611702919061569e565b905090565b60055460009081906001600160a01b031633146117365760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff16156117595760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff19166001178155611773600433898961415b565b90508060050154856001600160801b03161161179857846001600160801b031661179e565b80600501545b92508060060154846001600160801b0316116117c357836001600160801b03166117c9565b80600601545b915082156117eb57828160050160008282546117e591906156b7565b90915550505b811561180b578181600601600082825461180591906156b7565b90915550505b506000805460ff1916905590969095509350505050565b6005546000906001600160a01b0316331461184f5760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff16156118725760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff191660019081179091555461ffff85169061189b906001600160a01b0316611d6a565b61ffff16036118f85760405162461bcd60e51b815260206004820152602360248201527f43616e277420726564756365206f7264657220666f722063757272656e74207460448201526269636b60e81b6064820152608401610cb3565b6000611914338661190a816001615537565b600492919061415b565b905061192c61192285615642565b82908560006141c6565b6119438561193986615642565b600391908661429b565b600083611970577f0000000000000000000000000000000000000000000000000000000000000000611992565b7f00000000000000000000000000000000000000000000000000000000000000005b9050836119d9576119d46119aa61089d886001615537565b6001600160a01b03166119bc886130c6565b6001600160a01b0316876001600160801b0316613c73565b611a14565b611a146119ea61089d886001615537565b6001600160a01b03166119fc886130c6565b6001600160a01b0316876001600160801b0316613088565b6000805460ff19169055979650505050505050565b600c54600d5460405163018b035160e01b8152600481018490526000602482018190526044820193909352606481019190915260016084820152819073__$7f722a1af7b4060aab6915c87e2e2208cb$__9063018b03519060a4016040805180830381865af4158015611aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac491906156ca565b50905082611ada82670de0b6b3a764000061436c565b611ae491906156b7565b9392505050565b60055460009081906001600160a01b03163314611b1a5760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff1615611b3d5760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff19166001179055828015611b7357506001546001600160a01b0316611b67866130c6565b6001600160a01b031611155b15611bb15760405162461bcd60e51b815260206004820152600e60248201526d61736b2062656c6f77207072696560901b6044820152606401610cb3565b82158015611bdb57506001546001600160a01b0316611bcf866130c6565b6001600160a01b031610155b15611c1a5760405162461bcd60e51b815260206004820152600f60248201526e626964732061626f7665207072696560881b6044820152606401610cb3565b6000611c2c878761190a816001615537565b9050611c3a60038786614381565b9150611c48818686856141c6565b611c55600387878761429b565b600084611c82577f0000000000000000000000000000000000000000000000000000000000000000611ca4565b7f00000000000000000000000000000000000000000000000000000000000000005b905084611ceb57611ce6611cbc61089d896001615537565b6001600160a01b0316611cce896130c6565b6001600160a01b0316886001600160801b0316613c73565b611d26565b611d26611cfc61089d896001615537565b6001600160a01b0316611d0e896130c6565b6001600160a01b0316886001600160801b0316613088565b9350611d5360405180604001604052806009815260200168185b5bdd5b9d189a5960ba1b81525085613f10565b50506000805460ff19169055909590945092505050565b6000670de0b6b3a7640000611d8683662386f26fc10000613fe1565b611d909190615704565b92915050565b6000808615611f0f57611dae33600188888888610c84565b90925090507f000000000000000000000000000000000000000000000000000000000000000015611deb57611de633828460016143d9565b6120a0565b6000611df5611695565b604051636d29069f60e11b8152909150339063da520d3e90611e1f90869089908990600401615718565b600060405180830381600087803b158015611e3957600080fd5b505af1158015611e4d573d6000803e3d6000fd5b505050508083611e5d9190615502565b611e65611695565b1015611e9c5760405162461bcd60e51b81526020600482015260066024820152653130b622a92960d11b6044820152606401610cb3565b600a546001600160a01b03166340c10f19611eb9868801886151e1565b846040518363ffffffff1660e01b8152600401611ed7929190615668565b600060405180830381600087803b158015611ef157600080fd5b505af1158015611f05573d6000803e3d6000fd5b50505050506120a0565b611f1e30600088888888610c84565b90925090508080611f3784670de0b6b3a764000061452b565b611f4191906156b7565b91507f000000000000000000000000000000000000000000000000000000000000000015611f7b57611f7633848460006143d9565b61209e565b6000611f85611695565b604051636d29069f60e11b8152909150339063da520d3e90611faf9086908a908a90600401615718565b600060405180830381600087803b158015611fc957600080fd5b505af1158015611fdd573d6000803e3d6000fd5b505050508083611fed9190615502565b611ff5611695565b101561202c5760405162461bcd60e51b81526020600482015260066024820152653130b622a92960d11b6044820152606401610cb3565b600b546001600160a01b03166340c10f19612049878901896151e1565b866040518363ffffffff1660e01b8152600401612067929190615668565b600060405180830381600087803b15801561208157600080fd5b505af1158015612095573d6000803e3d6000fd5b50505050819350505b505b9550959350505050565b60055460009081906001600160a01b031633146120d95760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff16156120fc5760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff1916600190811782556040805160c08101825282546001600160a01b038116825261ffff600160a01b820481166020840152600160b01b820460ff90811694840194909452600160b81b8204841615156060840152600160c01b820490931615156080830152600160c81b900490911660a0820152919061218c908890889061190a908290615537565b60015490915061ffff8716906121aa906001600160a01b0316611d6a565b61ffff16146121ef5760405162461bcd60e51b81526020600482015260116024820152704e6f742063757272656e7420707269636560781b6044820152606401610cb3565b600085612210576001820154600160801b90046001600160801b031661221f565b60018201546001600160801b03165b905061223761222d82615642565b83908860006141c6565b61224e8761224483615642565b600391908961429b565b61228561225f61089d896001615537565b6001600160a01b031684600001516001600160a01b0316836001600160801b0316613088565b93506122b983600001516001600160a01b03166122a1896130c6565b6001600160a01b0316836001600160801b0316613c73565b6000805460ff19169055989397509295505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461233a5760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b6044820152606401610cb3565b600061235a6123498587615502565b61235488600261574e565b90614540565b9050600061236c8261235488886156b7565b905073__$7f722a1af7b4060aab6915c87e2e2208cb$__63018b0351612392898761436c565b6040516001600160e01b031960e084901b16815260048101919091526000602482015260448101849052606481018990526001608482015260a4016040805180830381865af41580156123e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240d91906156ca565b50600f55600e86905586612421838761436c565b61242b898761436c565b600f54612438908961436c565b61244291906156b7565b61244c9190615502565b61245691906156b7565b925061248f61246d670de0b6b3a764000083614540565b600280546001600160801b0319166001600160801b0392909216919091179055565b61249a600e54614555565b6124d16124a686611d6a565b61ffff16600090815260086020526040902080546001600160801b03191660016001607f1b03179055565b6124ff6124dd86611d6a565b6001805461ffff909216600160c81b0261ffff60c81b19909216919091179055565b5050949350505050565b60008082600f0b1215612576576001600160801b03831661252983615642565b6125339085615765565b9150816001600160801b0316106125715760405162461bcd60e51b81526020600482015260026024820152614c5360f01b6044820152606401610cb3565b611d90565b6001600160801b03831661258a8385615552565b9150816001600160801b03161015611d905760405162461bcd60e51b81526020600482015260026024820152614c4160f01b6044820152606401610cb3565b6005546000906001600160a01b031633146125f65760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff16156126195760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff19166001908117825561263b908690869061190a908290615537565b9050600061264b60038686614381565b90506000846126645782546001600160801b0316612677565b8254600160801b90046001600160801b03165b9050806001600160801b0316826001600160801b0316116126d05760405162461bcd60e51b8152602060048201526013602482015272141bdcda5d1a5bdb881b9bdd08199a5b1b1959606a1b6044820152606401610cb3565b6000856126f1576001840154600160801b90046001600160801b0316612700565b60018401546001600160801b03165b905085156127325761272b61271961089d896001615537565b6001600160a01b03166122a1896130c6565b9450612770565b61276d61274361089d896001615537565b6001600160a01b0316612755896130c6565b6001600160a01b0316836001600160801b0316613088565b94505b61278661277c82615642565b85908860006141c6565b50506000805460ff191690555090949350505050565b6005546001600160a01b031633146127c65760405162461bcd60e51b8152600401610cb3906154a4565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000806127f9338888888888613770565b6009546040516323b872dd60e01b81529294509092506001600160a01b0316906323b872dd9061283190339030908790600401615785565b6020604051808303816000875af1158015612850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128749190615681565b50600a54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906128a79033908590600401615668565b600060405180830381600087803b1580156128c157600080fd5b505af11580156128d5573d6000803e3d6000fd5b5050505050505050505050565b60006128ef600384613d93565b6001600160801b03169392505050565b60008086156129675761291733600088888888610c84565b90925090507f00000000000000000000000000000000000000000000000000000000000000001561294f57611de633828460016145ab565b611de661295e848601866151e1565b828460016145ab565b61297633600188888888610c84565b9092509050818061298f83670de0b6b3a764000061452b565b61299991906156b7565b92507f0000000000000000000000000000000000000000000000000000000000000000156129ce57611f7633848460006145ab565b6129e66129dd858701876151e1565b848460006145ab565b809150509550959350505050565b600080612a0333888888612f83565b91509150612a1b3388886001600160801b0380611707565b505060095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90612a4f9033908690600401615668565b6020604051808303816000875af1158015612a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a929190615681565b50600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906128a79033908590600401615668565b6000808315612b8d57612b0c8387612b05612ae461089d836001615537565b6001600160a01b0316612af68b6130c6565b6001600160a01b03168a6139d4565b6000611aeb565b6009546040516323b872dd60e01b81529294509092506001600160a01b0316906323b872dd90612b4490869030908790600401615785565b6020604051808303816000875af1158015612b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b879190615681565b50612c8a565b612bcb8387612bc4612ba361089d836001615537565b6001600160a01b0316612bb58b6130c6565b6001600160a01b03168a613867565b6001611aeb565b90925090506000612c04612be361089d896001615537565b6001600160a01b0316612bf5896130c6565b6001600160a01b031688613c73565b612c0e90846156b7565b6009546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd90612c4390879030908690600401615785565b6020604051808303816000875af1158015612c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c869190615681565b5091505b94509492505050565b6005546001600160a01b03163314612cbd5760405162461bcd60e51b8152600401610cb3906157a9565b600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990612cef9085908590600401615668565b600060405180830381600087803b158015612d0957600080fd5b505af1158015612d1d573d6000803e3d6000fd5b505050508060106000828254612d339190615502565b90915550505050565b600080612d4f858561190a816001615537565b90506000612d5f60038686614381565b9050600084612d785782546001600160801b0316612d8b565b8254600160801b90046001600160801b03165b9050600085612dae576001840154600160801b90046001600160801b0316612dbd565b60018401546001600160801b03165b90506000816001600160801b0316118015612de95750816001600160801b0316836001600160801b0316115b98975050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614612e5c5760405162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b6044820152606401610cb3565b670de0b6b3a7640000612e7d612e728486615502565b61235486600261574e565b612e8791906156b7565b600d55612eac612e978385615502565b600d5461235490670de0b6b3a76400006156b7565b600c5573__$7f722a1af7b4060aab6915c87e2e2208cb$__63018b0351612ed3858461436c565b600c54600d546040516001600160e01b031960e086901b168152600481019390935260006024840152604483019190915260648201526001608482015260a4016040805180830381865af4158015612f2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5391906156ca565b600e55600f55600c54612f739061246d90670de0b6b3a764000090614540565b612f7e600e54614555565b505050565b60055460009081906001600160a01b03163314612fb25760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff1615612fd55760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff19166001178155604080516080810182526001600160a01b038916815261ffff80891660208301528716918101919091528190819061302b906060810161302189615642565b600f0b90526146b1565b92509250925060008211806130405750600081115b15613070578183600501546130559190615502565b8184600601546130659190615502565b600685015560058401555b6000805460ff19169055909890975095505050505050565b6000828410156130aa5760405162461bcd60e51b8152600401610cb3906157cb565b6130be826130b885876156b7565b9061452b565b949350505050565b6000611d906130e0662386f26fc1000061ffff851661574e565b614140565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461312d5760405162461bcd60e51b8152600401610cb3906157a9565b600280546001600160801b03191690556131556001805460ff60c01b1916600160c01b179055565b565b60006130be8261316785876156b7565b90614949565b811561321757600061319a828661319361318e612ae461089d846001615537565b61495e565b6000611822565b60095460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb906131cd9085908590600401615668565b6020604051808303816000875af11580156131ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132109190615681565b5050613318565b600061324e61318e61322d61089d886001615537565b6001600160a01b031661323f886130c6565b6001600160a01b031687613867565b905061325d8286836001611822565b506009546001600160a01b031663a9059cbb836132ab61328161089d8a6001615537565b6001600160a01b03166132938a6130c6565b6001600160a01b0316866001600160801b0316613c73565b6132b590886156b7565b6040518363ffffffff1660e01b81526004016132d2929190615668565b6020604051808303816000875af11580156132f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133159190615681565b50505b50505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146133665760405162461bcd60e51b8152600401610cb3906157a9565b60001981036133e9576009546001600160a01b031663a9059cbb83613389611695565b6040518363ffffffff1660e01b81526004016133a6929190615668565b6020604051808303816000875af11580156133c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f7e9190615681565b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906133a69085908590600401615668565b5050565b60008161344f57613436848461190a816001615537565b60010154600160801b90046001600160801b03166130be565b61345f848461190a816001615537565b600101546001600160801b0316949350505050565b811561350757600061349c828661349561318e612ba361089d846001615537565b6001611822565b600a546040516340c10f1960e01b81529192506001600160a01b0316906340c10f19906134cf9085908590600401615668565b600060405180830381600087803b1580156134e957600080fd5b505af11580156134fd573d6000803e3d6000fd5b5050505050613318565b613541818561319361318e61352061089d846001615537565b6001600160a01b03166135328a6130c6565b6001600160a01b031689613867565b50600b546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906135749084908790600401615668565b600060405180830381600087803b15801561358e57600080fd5b505af11580156135a2573d6000803e3d6000fd5b5050505050505050565b6000821561363c576135c0828560016125c9565b60095460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb906135f39085908590600401615668565b6020604051808303816000875af1158015613612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136369190615681565b50611ae4565b600061364a8386600061341f565b9050613658838660006125c9565b915061367d61366b61089d876001615537565b6001600160a01b03166122a1876130c6565b61368f83670de0b6b3a764000061452b565b61369991906156b7565b60095460405163a9059cbb60e01b81529193506001600160a01b03169063a9059cbb906136cc9086908690600401615668565b6020604051808303816000875af11580156136eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061370f9190615681565b50509392505050565b60008061372484611d6a565b90508215801561373f575061373d61ffff8216856157ee565b155b6137515761374c816130c6565b61375f565b61375f61089d600183615515565b6001600160a01b0316949350505050565b60055460009081906001600160a01b0316331461379f5760405162461bcd60e51b8152600401610cb3906154a4565b60005460ff16156137c25760405162461bcd60e51b8152600401610cb3906154c7565b6000805460ff191660011790556001600160801b0385166138105760405162461bcd60e51b81526020600482015260086024820152670c08185b5bdd5b9d60c21b6044820152606401610cb3565b61384d60405180608001604052808a6001600160a01b031681526020018961ffff1681526020018861ffff16815260200187600f0b8152506146b1565b6000805460ff19169055909a909950975050505050505050565b6000828410156138895760405162461bcd60e51b8152600401610cb3906157cb565b6130be61389684866156b7565b8390613fe1565b6000816000036138b05750600019611ae4565b6130be826138be85876156b7565b90613fe1565b600081156138ed57826138d8856001615537565b61ffff166138e6919061574e565b9050611ae4565b6138e68361ffff861661574e565b6005546001600160a01b031633146139255760405162461bcd60e51b8152600401610cb3906157a9565b801561399457600a54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061395d9086908690600401615668565b600060405180830381600087803b15801561397757600080fd5b505af115801561398b573d6000803e3d6000fd5b50505050505050565b600b54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061395d9086908690600401615668565b60006128ef60038484614381565b6000828410156139f65760405162461bcd60e51b8152600401610cb3906157cb565b6130be6138966002613a088688615502565b613a129190615704565b6130b886886156b7565b6000808315613aa857613a3b8387612bc4612ba361089d836001615537565b600a54604051632770a7eb60e21b81529294509092506001600160a01b031690639dc29fac90613a719086908690600401615668565b600060405180830381600087803b158015613a8b57600080fd5b505af1158015613a9f573d6000803e3d6000fd5b50505050612c8a565b613abe8387612b05612ba361089d836001615537565b600b54604051632770a7eb60e21b81529294509092506001600160a01b031690639dc29fac9061165a9086908990600401615668565b60008215613b75576000613b0a838660006125c9565b600a546040516340c10f1960e01b81529192506001600160a01b0316906340c10f1990613b3d9086908590600401615668565b600060405180830381600087803b158015613b5757600080fd5b505af1158015613b6b573d6000803e3d6000fd5b5050505050611ae4565b600b546001600160a01b03166340c10f1983613bcd613b9861089d896001615537565b6001600160a01b0316613baa896130c6565b6001600160a01b0316613bbf338b600161341f565b6001600160801b0316613088565b6040518363ffffffff1660e01b8152600401613bea929190615668565b600060405180830381600087803b158015613c0457600080fd5b505af1158015613c18573d6000803e3d6000fd5b505050506130be828560016125c9565b6005546001600160a01b03163314613c525760405162461bcd60e51b8152600401610cb3906154a4565b6001805460ff60b81b198116600160b81b9182900460ff1615909102179055565b600082841015613c955760405162461bcd60e51b8152600401610cb3906157cb565b73__$7f722a1af7b4060aab6915c87e2e2208cb$__636ca35e9e613cba868686613088565b6000613cc586613ed9565b6040516001600160e01b031960e086901b16815260048101939093526024830191909152604482015260648101869052608401602060405180830381865af4158015613d15573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130be919061569e565b613d7c81604051602401613d4d9190615848565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052614974565b50565b6000613d8b82846157ee565b159392505050565b61ffff811660009081526020838152604080832081516101808101835281546001600160801b038082168352600160801b91829004600f0b95830195909552600183015493820193909352600282015460608201526003820154600681900b6080830152600160381b81046001600160a01b031660a0830152600160d81b810463ffffffff1660c0830152600160f81b900460ff16151560e08201526004820154808516610100830181905290849004851661012083015260059092015480851661014083015292909204909216610160820152901580613e8057506101208101516001600160801b0316155b613e8c57613e8c61585b565b8061012001518161010001516130be9190615552565b60008115613ebc57612571670de0b6b3a764000083614949565b611d90613eca836001615502565b670de0b6b3a764000090614949565b60008115613ef357612571670de0b6b3a764000083613fe1565b611d90613f01836001615502565b670de0b6b3a764000090613fe1565b61341b8282604051602401613f26929190615871565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052614974565b613d7c81604051602401613f6b91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052614974565b612f7e838383604051602401613fb293929190615893565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052614974565b6000611ae483670de0b6b3a764000084614995565b61ffff821660009081526020849052604090208115614092576004810180546001600160801b03191690556005810180546001600160801b031690600061403c836158b8565b91906101000a8154816001600160801b0302191690836001600160801b031602179055505061408d604051806040016040528060068152602001657469636b3f3f60d01b8152508461ffff16613f10565b613318565b6004810180546001600160801b03908116909155600582018054600160801b90049091169060106140c2836158b8565b91906101000a8154816001600160801b0302191690836001600160801b031602179055505050505050565b61ffff8316600090815260208590526040902080546001820154600160801b909104600f0b919061411e90856156b7565b6001820155600281015461413290846156b7565b600290910155949350505050565b806001600160a01b038116811461415657600080fd5b919050565b6040805160609490941b6bffffffffffffffffffffffff191660208086019190915260f093841b6001600160f01b031990811660348701529290931b909116603684015280516018818503018152603890930181528251928201929092206000908152929052902090565b81156142305760018401546141e4906001600160801b031684612509565b6001850180546001600160801b0319166001600160801b03929092169190911790556000600f84900b131561408d5783546001600160801b03808316600160801b029116178455613318565b600184015461424f90600160801b90046001600160801b031684612509565b6001850180546001600160801b03928316600160801b0292169190911790556000600f84900b13156133185783546001600160801b0319166001600160801b0391909116179092555050565b80156143045761ffff83166000908152602085905260409020600401546142cb906001600160801b031683612509565b61ffff8416600090815260208690526040902060040180546001600160801b0319166001600160801b0392909216919091179055613318565b61ffff831660009081526020859052604090206004015461433590600160801b90046001600160801b031683612509565b61ffff8416600090815260208690526040902060040180546001600160801b03928316600160801b02921691909117905550505050565b6000611ae48383670de0b6b3a76400006149b4565b6000816143b45761ffff8316600090815260208590526040902060050154600160801b90046001600160801b03166130be565b505061ffff16600090815260209190915260409020600501546001600160801b031690565b801561444857600a546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906144119087908790600401615668565b600060405180830381600087803b15801561442b57600080fd5b505af115801561443f573d6000803e3d6000fd5b505050506144ad565b600b546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061447a9087908790600401615668565b600060405180830381600087803b15801561449457600080fd5b505af11580156144a8573d6000803e3d6000fd5b505050505b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906144e190879030908790600401615785565b6020604051808303816000875af1158015614500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145249190615681565b5050505050565b6000611ae48383670de0b6b3a7640000614995565b6000611ae483670de0b6b3a7640000846149b4565b61455e81611d6a565b6001805461ffff92909216600160a01b0261ffff60a01b1990921691909117905561458881614140565b600180546001600160a01b0319166001600160a01b039290921691909117905550565b801561461a57600a54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906145e39087908690600401615668565b600060405180830381600087803b1580156145fd57600080fd5b505af1158015614611573d6000803e3d6000fd5b5050505061467f565b600b54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061464c9087908690600401615668565b600060405180830381600087803b15801561466657600080fd5b505af115801561467a573d6000803e3d6000fd5b505050505b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906144e19087908790600401615668565b6040805160c0810182526001546001600160a01b038116825261ffff600160a01b82048116602080850182905260ff600160b01b8504811686880152600160b81b850481161515606080880191909152600160c01b860490911615156080870152600160c81b90940490921660a08501528551918601519486015192860151600095869586959094614745949093906149d2565b93508460600151600f0b60001461494157846020015161ffff16816020015161ffff1610156147d7576147d061477e86604001516130c6565b6001600160a01b031661479487602001516130c6565b6001600160a01b031660008860600151600f0b12156147c35787606001516147bb90615642565b600f0b613088565b8760600151600f0b613088565b9150614941565b846040015161ffff16816020015161ffff1610156148e45760025460408601516001600160801b039091169061485290614810906130c6565b6001600160a01b031683600001516001600160a01b031660008960600151600f0b12156148455788606001516147bb90615642565b8860600151600f0b613088565b92506148ae82600001516001600160a01b031661487288602001516130c6565b6001600160a01b031660008960600151600f0b12156148a157886060015161489990615642565b600f0b613c73565b8860600151600f0b613c73565b93506148be818760600151612509565b600280546001600160801b0319166001600160801b039290921691909117905550614941565b61493e6148f486604001516130c6565b6001600160a01b031661490a87602001516130c6565b6001600160a01b031660008860600151600f0b121561493157876060015161489990615642565b8760600151600f0b613c73565b92505b509193909250565b6000611ae483670de0b6b3a764000084614a5e565b806001600160801b038116811461415657600080fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8282028115158415858304851417166149ad57600080fd5b0492915050565b60008260001904841183021582026149cb57600080fd5b5091020490565b60006149e1600487878761415b565b60065460075491925090600f85900b15614a2e57600654600754614a10916003918a9188918a91906000614a8c565b50600654600754614a2c91600391899188918a91906001614a8c565b505b600080614a4060038a8a898888614b98565b9092509050614a5185888484614c84565b5050505095945050505050565b828202811515841585830485141716614a7657600080fd5b6001826001830304018115150290509392505050565b61ffff8616600090815260208890526040812080546001600160801b031682614ab58289612509565b6001600160801b0380821615908416801591909114159550909150600003614b0d578861ffff168a61ffff1611614af55760018301879055600283018690555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b03821617835584614b53578254614b4e90614b4990600f8b810b91600160801b9004900b6155e4565b614e76565b614b71565b8254614b7190614b4990600f8b810b91600160801b9004900b6155c4565b83546001600160801b03918216600160801b02911617909255509098975050505050505050565b61ffff80861660008181526020899052604080822088851683529082209193849391929184918291908a1610614bd957505060018201546002830154614bfd565b6001840154614be890896156b7565b9150836002015487614bfa91906156b7565b90505b6000808b61ffff168b61ffff161015614c2157505060018301546002840154614c45565b6001850154614c30908b6156b7565b9150846002015489614c4291906156b7565b90505b81614c50858c6156b7565b614c5a91906156b7565b975080614c67848b6156b7565b614c7191906156b7565b9650505050505050965096945050505050565b604080516101208101825285546001600160801b038082168352600160801b918290048116602084015260018801548082169484019490945292048216606082015260028601549091166080820152600385015460a0820152600485015460c0820152600585015460e082015260068501546101008201526000600f85900b8103614d5657600082608001516001600160801b031611614d4b5760405162461bcd60e51b815260206004820152600260248201526104e560f41b6044820152606401610cb3565b506080810151614d67565b614d64826080015186612509565b90505b6000614d9a83608001516001600160801b0316670de0b6b3a76400008560a0015188614d9391906156b7565b9190614995565b90506000614dc884608001516001600160801b0316670de0b6b3a76400008660c0015188614d9391906156b7565b905086600f0b600014614df3576002880180546001600160801b0319166001600160801b0385161790555b60038801869055600488018590556001600160801b038216151580614e2157506000816001600160801b0316115b156135a257816001600160801b0316886005016000828254614e439190615502565b92505081905550806001600160801b0316886006016000828254614e679190615502565b90915550505050505050505050565b80600f81900b811461415657600080fd5b6001600160a01b0381168114613d7c57600080fd5b8015158114613d7c57600080fd5b60008083601f840112614ebc57600080fd5b50813567ffffffffffffffff811115614ed457600080fd5b602083019150836020828501011115614eec57600080fd5b9250929050565b60008060008060008060a08789031215614f0c57600080fd5b8635614f1781614e87565b95506020870135614f2781614e9c565b94506040870135935060608701359250608087013567ffffffffffffffff811115614f5157600080fd5b614f5d89828a01614eaa565b979a9699509497509295939492505050565b803561ffff8116811461415657600080fd5b60008060008060808587031215614f9757600080fd5b614fa085614f6f565b93506020850135614fb081614e9c565b92506040850135614fc081614e9c565b91506060850135614fd081614e87565b939692955090935050565b80356001600160801b038116811461415657600080fd5b600080600080600060a0868803121561500a57600080fd5b853561501581614e87565b945061502360208701614f6f565b935061503160408701614f6f565b925061503f60608701614fdb565b915061504d60808701614fdb565b90509295509295909350565b6000806000806080858703121561506f57600080fd5b843561507a81614e87565b935061508860208601614f6f565b925061509660408601614fdb565b91506060850135614fd081614e9c565b6000602082840312156150b857600080fd5b5035919050565b6000806000806000608086880312156150d757600080fd5b85356150e281614e9c565b94506020860135935060408601359250606086013567ffffffffffffffff81111561510c57600080fd5b61511888828901614eaa565b969995985093965092949392505050565b60008060006060848603121561513e57600080fd5b833561514981614e87565b925061515760208501614f6f565b9150604084013561516781614e9c565b809150509250925092565b6000806000806080858703121561518857600080fd5b5050823594602084013594506040840135936060013592509050565b600080604083850312156151b757600080fd5b6151c083614fdb565b9150602083013580600f0b81146151d657600080fd5b809150509250929050565b6000602082840312156151f357600080fd5b8135611ae481614e87565b60008060008060006080868803121561521657600080fd5b61521f86614f6f565b945061522d60208701614f6f565b935061523b60408701614fdb565b9250606086013567ffffffffffffffff81111561510c57600080fd5b6000806040838503121561526a57600080fd5b61527383614f6f565b915060208301356151d681614e9c565b6000806000806080858703121561529957600080fd5b6152a285614f6f565b9350602085013592506040850135614fc081614e9c565b600080604083850312156152cc57600080fd5b82356152d781614e87565b946020939093013593505050565b6000806000606084860312156152fa57600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561532757600080fd5b843561533281614e87565b935061534060208601614f6f565b925061534e60408601614f6f565b915061535c60608601614fdb565b905092959194509250565b60006020828403121561537957600080fd5b611ae482614f6f565b60008060006060848603121561539757600080fd5b6153a084614f6f565b925060208401356153b081614e9c565b9150604084013561516781614e87565b600080604083850312156153d357600080fd5b8235915060208301356151d681614e9c565b60008060008060008060a087890312156153fe57600080fd5b863561540981614e87565b955061541760208801614f6f565b945061542560408801614f6f565b935061543360608801614fdb565b9250608087013567ffffffffffffffff811115614f5157600080fd5b60008060006060848603121561546457600080fd5b61546d84614f6f565b925060208401359150604084013561516781614e9c565b60008060006060848603121561549957600080fd5b833561546d81614e87565b6020808252600990820152684e6f7420456e74727960b81b604082015260600190565b6020808252600b908201526a4552525f5245454e54525960a81b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611d9057611d906154ec565b61ffff828116828216039080821115615530576155306154ec565b5092915050565b61ffff818116838216019080821115615530576155306154ec565b6001600160801b03818116838216019080821115615530576155306154ec565b6000806000806080858703121561558857600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000600160ff1b82016155bd576155bd6154ec565b5060000390565b8181036000831280158383131683831282161715615530576155306154ec565b8082018281126000831280158216821582161715615604576156046154ec565b505092915050565b600f81810b9083900b0160016001607f1b0381136f7fffffffffffffffffffffffffffffff1982121715611d9057611d906154ec565b600081600f0b60016001607f1b0319810361565f5761565f6154ec565b60000392915050565b6001600160a01b03929092168252602082015260400190565b60006020828403121561569357600080fd5b8151611ae481614e9c565b6000602082840312156156b057600080fd5b5051919050565b81810381811115611d9057611d906154ec565b600080604083850312156156dd57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600082615713576157136156ee565b500490565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b8082028115828204841417611d9057611d906154ec565b6001600160801b03828116828216039080821115615530576155306154ec565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526008908201526732b73a393ca2a92960c11b604082015260600190565b602080825260099082015268383934b1b29022a92960b91b604082015260600190565b6000826157fd576157fd6156ee565b500690565b6000815180845260005b818110156158285760208185018101518683018201520161580c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611ae46020830184615802565b634e487b7160e01b600052600160045260246000fd5b6040815260006158846040830185615802565b90508260208301529392505050565b6060815260006158a66060830186615802565b60208301949094525060400152919050565b60006001600160801b038083168181036158d4576158d46154ec565b600101939250505056fea26469706673582212205a67c1bcf3c2a952071ed171d4c8b3931a5aee475241f455cb604c99e13cf1ee64736f6c63430008110033",
    "sourceMapi;:::-;;:::i;:::-;;;;1620:25:81;;;1676:2;1661:18;;1654:34;;;;1593:18;5938:5782:0;;;;;;;;11090:758:1;;;;;;:::i;:::-;;:::i;2028:106::-;;;:::i;:::-;;;2604:25:81;;;2592:2;2577:18;2028:106:1;2458:177:81;18352:815:0;;;;;;:::i;:::-;;:::i;846:26:1:-;;;;;-1:-1:-1;;;;;846:26:1;;;;;;-1:-1:-1;;;;;3557:32:81;;;3539:51;;3527:2;3512:18;846:26:1;3379:217:81;3291:92:0;3361:5;:14;-1:-1:-1;;;;;3361:14:0;3291:92;;13097:958;;;;;;:::i;:::-;;:::i;4432:246:3:-;;;;;;:::i;:::-;;:::i;2101:40:0:-;;2138:3;2101:40;;1617:33:3;;;;;;1804:24:0;;;;;-1:-1:-1;;;;;1804:24:0;;;;;;-1:-1:-1;;;;;4608:47:81;;;4590:66;;4578:2;4563:18;1804:24:0;4444:218:81;21841:35:0;;;;;;11726:1365;;;;;;:::i;:::-;;:::i;:::-;;;;4841:25:81;;;-1:-1:-1;;;;;4902:47:81;;;4897:2;4882:18;;4875:75;4814:18;11726:1365:0;4667:289:81;24397:137:0;;;;;;:::i;:::-;;:::i;:::-;;;5135:6:81;5123:19;;;5105:38;;5093:2;5078:18;24397:137:0;4961:188:81;2304:2354:1;;;;;;:::i;:::-;;:::i;14177:1093:0:-;;;;;;:::i;:::-;;:::i;3203:1132:3:-;;;;;;:::i;:::-;;:::i;1527:18:0:-;;;;;-1:-1:-1;;;;;1527:18:0;;;;-1:-1:-1;;;1527:18:0;;;;;;-1:-1:-1;;;1527:18:0;;;;;-1:-1:-1;;;1527:18:0;;;;;-1:-1:-1;;;1527:18:0;;;;;;-1:-1:-1;;;1527:18:0;;;;;;;;;-1:-1:-1;;;;;7063:32:81;;;7045:51;;7115:6;7157:15;;;7152:2;7137:18;;7130:43;7221:4;7209:17;;;7189:18;;;7182:45;;;;7270:14;;7263:22;7258:2;7243:18;;7236:50;7330:14;7323:22;7317:3;7302:19;;7295:51;7383:15;7083:3;7362:19;;7355:44;7032:3;7017:19;1527:18:0;6778:627:81;26245:234:0;;;;;;:::i;:::-;;:::i;15482:1078::-;;;;;;:::i;:::-;;:::i;2446:84::-;;;;;;:::i;:::-;;:::i;:::-;;14157:529:1;;;;;;:::i;:::-;;:::i;3389:149:0:-;;;;;;:::i;:::-;;:::i;1561:16:3:-;;;;;;1884:51:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1884:51:0;;;;-1:-1:-1;;;1884:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9594:15:81;;;9576:34;;9646:15;;;9641:2;9626:18;;9619:43;9698:15;;;9678:18;;;9671:43;;;;9750:15;;;9745:2;9730:18;;9723:43;9803:15;;;;9797:3;9782:19;;9775:44;9850:3;9835:19;;9828:35;9894:3;9879:19;;9872:35;;;;9938:3;9923:19;;9916:35;;;;9982:3;9967:19;;9960:35;;;;9510:3;9495:19;1884:51:0;9152:849:81;4757:1657:1;;;;;;:::i;:::-;;:::i;1504:24:3:-;;;;;;14692:603:1;;;;;;:::i;:::-;;:::i;1988:42:0:-;;2026:4;1988:42;;21801:34;;;;;;2195:20;;;;;-1:-1:-1;;;;;2195:20:0;;;6553:1454:1;;;;;;:::i;:::-;;:::i;4716:243:3:-;;;;;;:::i;:::-;;:::i;1474:24::-;;;;;;2625:478:0;;;;;;:::i;:::-;;:::i;:::-;;;11227:14:81;;11220:22;11202:41;;11190:2;11175:18;2625:478:0;11062:187:81;1583:27:3;;;;;;2380:654;;;;;;:::i;:::-;;:::i;17554:792:0:-;;;;;;:::i;:::-;;:::i;23408:177::-;;;;;;:::i;:::-;;:::i;24210:129::-;;;;;;:::i;:::-;;:::i;5601:141:3:-;;;:::i;1456:30:0:-;;;;;785:23:1;;;;;-1:-1:-1;;;;;785:23:1;;;24722:138:0;;;;;;:::i;:::-;;:::i;11913:1168:1:-;;;;;;:::i;:::-;;:::i;5240:253:3:-;;;;;;:::i;:::-;;:::i;26484:231:0:-;;;;;;:::i;:::-;;:::i;13152:999:1:-;;;;;;:::i;:::-;;:::i;10145:935::-;;;;;;:::i;:::-;;:::i;24989:293:0:-;;;;;;:::i;:::-;;:::i;2148:40::-;;2184:4;2148:40;;16943:605;;;;;;:::i;:::-;;:::i;23826:175::-;;;;;;:::i;:::-;;:::i;24540:177::-;;;;;;:::i;:::-;;:::i;25288:206::-;;;;;;:::i;:::-;;:::i;1835:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1835:42:0;;;;-1:-1:-1;;;1835:42:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1835:42:0;;-1:-1:-1;;;;;1835:42:0;;-1:-1:-1;;;1835:42:0;;;;;-1:-1:-1;;;1835:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14832:47:81;;;14814:66;;14927:2;14916:22;;;;14911:2;14896:18;;14889:50;14955:18;;14948:34;;;;15013:2;14998:18;;14991:34;;;;15073:1;15062:21;;;;15056:3;15041:19;;15034:50;-1:-1:-1;;;;;15121:32:81;;;15141:3;15100:19;;15093:61;15203:10;15191:23;;;15185:3;15170:19;;15163:52;6752:13;6745:21;15263:3;15248:19;;6733:34;4386:46;;15319:3;15304:19;;4374:59;4386:46;;15375:3;15360:19;;4374:59;4386:46;;15432:3;15417:19;;4374:59;4386:46;;;;15489:3;15474:19;;4374:59;14801:3;14786:19;1835:42:0;14371:1129:81;1568:33:0;;;;;1649:35;;;;;4966:268:3;;;;;;:::i;:::-;;:::i;1690:35:0:-;;;;;;;;16131:1:81;16120:21;;;;16102:40;;16090:2;16075:18;1690:35:0;15960:188:81;1607:36:0;;;;;1493:28;;;;;;;;16327:8:81;16315:21;;;16297:40;;16285:2;16270:18;1493:28:0;16153:190:81;815:24:1;;;;;-1:-1:-1;;;;;815:24:1;;;3548:135:0;;;;;;:::i;:::-;;:::i;24006:198::-;;;;;;:::i;:::-;;:::i;9088:1051:1:-;;;;;;:::i;:::-;;:::i;8013:934::-;;;;;;:::i;:::-;;:::i;1658:35:3:-;;;;;2535:84:0;;;:::i;23591:229::-;;;;;;:::i;:::-;;:::i;5938:5782::-;833:5;;6136:16;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;;;;;;;;;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13;::::0;;6182:36:::2;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;6182:36:0::2;::::0;::::2;::::0;::::2;::::0;:17:::2;:36::i;:::-;6230:31;::::0;;::::2;::::0;::::2;::::0;;6256:5:::2;6230:31:::0;-1:-1:-1;;;;;6230:31:0;;::::2;::::0;;::::2;-1:-1:-1::0;;;6230:31:0;::::2;::::0;::::2;;::::0;;::::2;::::0;;;::::2;-1:-1:-1::0;;;6230:31:0;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;6230:31:0;::::2;::::0;::::2;;;::::0;;;;;;;;-1:-1:-1;;;6230:31:0;::::2;::::0;;::::2;;;::::0;;;;;;;;-1:-1:-1;;;6230:31:0;;::::2;::::0;;::::2;::::0;;;;6336:415;;6230:31:::2;6336:415:::0;::::2;::::0;;;;;6230:23:::2;6336:415:::0;;::::2;::::0;;;6468:19;;6460:28;;::::2;6336:415:::0;;;;;;;;;;;6230:31;;2026:4:::2;::::0;6230:23;;6336:415;;6519:6;:49:::2;;6548:20;;6519:49;;;6527:19;;6519:49;6336:415:::0;;6628:1:::2;6336:415;::::0;;::::2;::::0;;;6655:9:::2;::::0;-1:-1:-1;;;;;6655:9:0::2;6336:415:::0;;;;;;;;;;;;;;;6785:75;;;;::::2;::::0;;;;;;;::::2;::::0;;;;;;;;;7060:14;::::2;::::0;6311:440;;-1:-1:-1;6785:75:0;;6889:19;;::::2;::::0;7055:28:::2;::::0;7076:6;7055:4:::2;:28::i;:::-;:39;;;;;7088:6;7087:7;7055:39;7051:231;;;7128:1;7110:5;:14;;:19;;;;;;;:::i;:::-;::::0;;-1:-1:-1;7171:14:0::2;::::0;::::2;::::0;7158:28:::2;::::0;:12:::2;:28::i;:::-;7144:42;;:11;::::0;::::2;:42:::0;;;7200:5:::2;:25:::0;;-1:-1:-1;;;;7200:25:0::2;-1:-1:-1::0;;;7200:25:0;::::2;;::::0;;7240:16:::2;::::0;::::2;:30:::0;7051:231:::2;7299:30:::0;;:34;;::::2;::::0;:66:::2;;;7355:10;7337:5;:14;;;:28;;7299:66;7292:3203;;;7380:28;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7380:28:0::2;7442:14;::::0;::::2;::::0;7424:32;;7511:11:::2;::::0;::::2;::::0;7493:46:::2;::::0;7524:6;7532;7493:17:::2;:46::i;:::-;7471:19;::::0;::::2;:68:::0;7571:6;:39:::2;;7609:1;7597:5;:11;;;:13;;;;:::i;:::-;7571:39;;;7579:11;::::0;::::2;::::0;:15:::2;::::0;7593:1:::2;7579:15;:::i;:::-;7554:56;;:14;::::0;::::2;:56:::0;7822:11:::2;::::0;::::2;::::0;7799:35:::2;::::0;:5:::2;::::0;:22:::2;:35::i;:::-;-1:-1:-1::0;;;;;7785:49:0::2;:11;::::0;::::2;:49:::0;7857:10;:124:::2;;7940:41;7969:4;:11;;;7951:5;:15;;;:29;;;;:::i;:::-;-1:-1:-1::0;;;;;7940:41:0::2;:10;:41::i;:::-;7857:124;;;7887:34;7909:4;:11;;;7891:5;:15;;;:29;;;;:::i;:::-;-1:-1:-1::0;;;;;7887:34:0::2;:3;:34::i;:::-;7848:133:::0;;8010:14:::2;::::0;::::2;::::0;8005:28:::2;::::0;8026:6;8005:4:::2;:28::i;:::-;7996:6;::::0;;::::2;:37:::0;;;8062:14;::::2;::::0;8086:6;;8057:36:::2;::::0;7996:37;8057:4:::2;:36::i;:::-;8048:6;::::0;::::2;:45:::0;;;8294:14:::2;::::0;;::::2;::::0;8327:19:::2;::::0;::::2;::::0;8368:30;;8256:220;;-1:-1:-1;;;8256:220:0;;::::2;::::0;::::2;18151:25:81::0;;;;18192:18;;;18185:34;;;;18235:18;;;18228:34;18310:8;8417:3:0::2;18298:21:81::0;18278:18;;;18271:49;18357:13;;18336:19;;;18329:42;18408:22;;18387:19;;;18380:51;18474:15;;18468:22;18447:19;;;18440:51;8256:11:0::2;::::0;:20:::2;::::0;18123:19:81;;8256:220:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8238:14;::::0;::::2;8190:286:::0;8222:14:::2;::::0;::::2;8190:286:::0;8207:13:::2;::::0;::::2;8190:286:::0;8191:14:::2;::::0;;::::2;8190:286:::0;;;;8493:23;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;;8493:23:0;::::2;::::0;::::2;::::0;:11:::2;:23::i;:::-;8531:39;;;;;;;;;;;;;;-1:-1:-1::0;;;8531:39:0::2;;::::0;8555:5:::2;:14;;;8531:11;:39::i;:::-;8585:62;;;;;;;;;;;;;;;;;::::0;8631:5:::2;:15;;;-1:-1:-1::0;;;;;8585:62:0::2;:11;:62::i;:::-;8683:30:::0;;8662:53:::2;::::0;8682:31:::2;::::0;::::2;:::i;:::-;8662:11;:53::i;:::-;8729:76;;;;;;;;;;;;;;;;;::::0;8769:4:::2;:19;;;8790:4;:14;;;8729:76;;:11;:76::i;:::-;8830:24;;;;;;;;;;;;;;-1:-1:-1::0;;;8830:24:0::2;;::::0;8847:4:::2;:6;;;8830:11;:24::i;:::-;8870:60;;;;;;;;;;;;;;-1:-1:-1::0;;;8870:60:0::2;;::::0;8900:4:::2;:13;;;8915:4;:14;;;8870:11;:60::i;:::-;8945:34;;;;;;;;;;;;;;-1:-1:-1::0;;;8945:34:0::2;;::::0;8964:4:::2;:6;;;8972:4;:6;;;8945:11;:34::i;:::-;8999:10;8995:210;;;9069:13;::::0;::::2;::::0;9028:55;;:5;;:55:::2;::::0;9069:13;;9028:55:::2;:::i;:::-;::::0;;-1:-1:-1;8995:210:0::2;;;9175:13;::::0;::::2;::::0;9134:55;;:5;;:55:::2;::::0;9175:13;;9134:55:::2;:::i;:::-;::::0;;-1:-1:-1;8995:210:0::2;9244:4;:14;;;9218:5;:22;;:40;;;;;;;:::i;:::-;::::0;;-1:-1:-1;9278:15:0::2;::::0;::::2;::::0;-1:-1:-1;;;;;9278:17:0::2;::::0;9274:115:::2;;9372:15;::::0;;::::2;::::0;9338:14;;::::2;::::0;:51:::2;::::0;-1:-1:-1;;;;;9364:24:0::2;9338:25;:51::i;:::-;9313:5;:21;;:76;;;;;;;:::i;:::-;::::0;;-1:-1:-1;9274:115:0::2;9511:4;:19;;;9493:5;:14;;;:37:::0;9489:996:::2;;9728:11;::::0;::::2;::::0;-1:-1:-1;;;;;9728:14:0::2;::::0;9724:69:::2;;9773:11;::::0;::::2;::::0;9744:49:::2;::::0;:5:::2;::::0;9786:6;9744:28:::2;:49::i;:::-;9868:14;::::0;::::2;::::0;9905:19:::2;::::0;9946:20:::2;::::0;9813:19:::2;::::0;9835:153:::2;::::0;:5:::2;::::0;:11:::2;:153::i;:::-;9813:175;;10013:10;:20;;;10012:21;:68;;;;;10055:10;:25;;;10037:43;;:4;:14;;;:43;;;10012:68;10008:151;;;10144:14;::::0;;::::2;::::0;10133:26:::2;;;::::0;;;:10:::2;:26:::0;;;;;;;10117:42:::2;::::0;10133:26:::2;;10117:42:::0;::::2;:::i;:::-;;;10008:151;10182:101;::::0;;;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;10182:101:0::2;::::0;;::::2;::::0;;;;10234:14;;::::2;::::0;10223:26:::2;;-1:-1:-1::0;10223:26:0;;;:10:::2;:26:::0;;;;;;;;10182:101:::2;::::0;;10223:26:::2;::::0;;::::2;::::0;10261:20;;::::2;10182:11;:101::i;:::-;10308:6;10303:41;;10331:13;10332:12:::0;10331:13:::2;:::i;:::-;10316:28;;10303:41;10383:38;10392:5;:15;;;10408:12;10383:8;:38::i;:::-;-1:-1:-1::0;;;;;10365:56:0::2;:15;::::0;::::2;:56:::0;-1:-1:-1;10454:14:0::2;::::0;::::2;::::0;10440:28:::2;;:11;::::0;::::2;:28:::0;9489:996:::2;7366:3129;7292:3203;;;10522:26;:5;:14;;;:24;:26::i;:::-;10505:5;:43:::0;;-1:-1:-1;;;;;;10505:43:0::2;-1:-1:-1::0;;;;;10505:43:0;;;::::2;::::0;;;::::2;::::0;;10577:16:::2;::::0;::::2;::::0;10562:11:::2;::::0;::::2;::::0;:31:::2;::::0;;::::2;::::0;::::2;;10559:61;;10609:11;::::0;::::2;::::0;10595:5:::2;:25:::0;;::::2;::::0;;::::2;-1:-1:-1::0;;;10595:25:0::2;-1:-1:-1::0;;;;10595:25:0;;::::2;::::0;;;::::2;::::0;;10559:61:::2;10672:5;:15;;;-1:-1:-1::0;;;;;10648:39:0::2;:5;:20;;;-1:-1:-1::0;;;;;10648:39:0::2;;10644:72;;10701:15;::::0;::::2;::::0;10689:9:::2;:27:::0;;-1:-1:-1;;;;;;10689:27:0::2;-1:-1:-1::0;;;;;10689:27:0;;::::2;::::0;;;::::2;::::0;;10644:72:::2;10731:6;10727:55;;;10761:21;::::0;::::2;::::0;10739:19:::2;:43:::0;10727:55:::2;11301:10;:411;;2138:3;11617:5;:22;;;:35;;;;:::i;:::-;11679:30:::0;;11662:16:::2;11663:15:::0;11662:16:::2;:::i;:::-;:47;;;;:::i;:::-;11301:411;;;11346:6;:235;;11524:30:::0;;11508:46:::2;::::0;:15;:46:::2;:::i;:::-;11558:5;:22;;;11346:235;;;11380:30:::0;;11364:46:::2;::::0;:15;:46:::2;:::i;:::-;11415:5;:22;;;11346:235;1033:5:::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;11277:435;;;;-1:-1:-1;5938:5782:0;-1:-1:-1;;;;;;;;;;;;5938:5782:0:o;11090:758:1:-;11237:18;11257:19;11294:4;11291:441;;;11316:6;11313:185;;;11351:50;11377:9;11388:5;11395;11351:25;:50::i;:::-;11323:78;;-1:-1:-1;11323:78:1;-1:-1:-1;11291:441:1;;11313:185;11449:49;11475:9;11486:5;11493:4;11449:25;:49::i;11291:441::-;11539:6;11536:185;;;11574:49;11600:9;11611:5;11618:4;11574:25;:49::i;11536:185::-;11671:50;11697:9;11708:5;11715;11671:25;:50::i;:::-;11643:78;;-1:-1:-1;11643:78:1;-1:-1:-1;11536:185:1;11750:9;;:41;;-1:-1:-1;;;11750:41:1;;-1:-1:-1;;;;;11750:9:1;;;;:18;;:41;;11769:9;;11780:10;;11750:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11801:10:1;;:39;;-1:-1:-1;;;11801:39:1;;-1:-1:-1;;;;;11801:10:1;;;;:15;;:39;;11817:9;;11828:11;;11801:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11090:758;;;;;;;:::o;2028:106::-;2092:9;;:34;;-1:-1:-1;;;2092:34:1;;2120:4;2092:34;;;3539:51:81;2067:7:1;;-1:-1:-1;;;;;2092:9:1;;:19;;3512:18:81;;2092:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2085:41;;2028:106;:::o;18352:815:0:-;833:5;;18556:15;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13;::::0;;18745:47:::2;:9;18759:10;18771:9:::0;18782;18745:13:::2;:47::i;:::-;18712:80;;18832:8;:20;;;18813:16;-1:-1:-1::0;;;;;18813:39:0::2;;:81;;18878:16;-1:-1:-1::0;;;;;18813:81:0::2;;;;18855:8;:20;;;18813:81;18803:91;;18933:8;:20;;;18914:16;-1:-1:-1::0;;;;;18914:39:0::2;;:81;;18979:16;-1:-1:-1::0;;;;;18914:81:0::2;;;;18956:8;:20;;;18914:81;18904:91:::0;-1:-1:-1;19010:11:0;;19006:73:::2;;19061:7;19037:8;:20;;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;19006:73:0::2;19092:11:::0;;19088:73:::2;;19143:7;19119:8;:20;;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;19088:73:0::2;-1:-1:-1::0;1033:5:0::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;18352:815;;;;-1:-1:-1;18352:815:0;-1:-1:-1;;;;18352:815:0:o;13097:958::-;833:5;;13262:22;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13:::0;;::::1;::::0;;;13325:14;13304:46:::2;::::0;::::2;::::0;:37:::2;::::0;-1:-1:-1;;;;;13325:14:0::2;13304:12;:37::i;:::-;:46;;::::0;13296:94:::2;;;::::0;-1:-1:-1;;;13296:94:0;;20963:2:81;13296:94:0::2;::::0;::::2;20945:21:81::0;21002:2;20982:18;;;20975:30;21041:34;21021:18;;;21014:62;-1:-1:-1;;;21092:18:81;;;21085:33;21135:19;;13296:94:0::2;20761:399:81::0;13296:94:0::2;13402:30;13435:41;13449:10;13461:5:::0;13468:7:::2;13461:5:::0;13474:1:::2;13468:7;:::i;:::-;13435:9;::::0;:41;;:13:::2;:41::i;:::-;13402:74:::0;-1:-1:-1;13487:47:0::2;13508:15;13516:6:::0;13508:15:::2;:::i;:::-;13487:8:::0;;13525:5;13532:1:::2;13487:20;:47::i;:::-;13546:59;13575:5:::0;13582:15:::2;13590:6:::0;13582:15:::2;:::i;:::-;13546:5;::::0;:59;13599:5;13546:28:::2;:59::i;:::-;13617:21;13641:5;:29;;13661:9;13641:29;;;13648:10;13641:29;13617:53;;13706:5;:342;;13900:148;13936:21;13949:7;:5:::0;13955:1:::2;13949:7;:::i;13936:21::-;-1:-1:-1::0;;;;;13900:148:0::2;13976:19;13989:5;13976:12;:19::i;:::-;-1:-1:-1::0;;;;;13900:148:0::2;14022:6;-1:-1:-1::0;;;;;14014:15:0::2;13900:18;:148::i;:::-;13706:342;;;13726:149;13763:21;13776:7;:5:::0;13782:1:::2;13776:7;:::i;13763:21::-;-1:-1:-1::0;;;;;13726:149:0::2;13803:19;13816:5;13803:12;:19::i;:::-;-1:-1:-1::0;;;;;13726:149:0::2;13849:6;-1:-1:-1::0;;;;;13841:15:0::2;13726:19;:149::i;:::-;1033:5:::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;13689:359;13097:958;-1:-1:-1;;;;;;;13097:958:0:o;4432:246:3:-;4584:9;;4595;;4544:67;;-1:-1:-1;;;4544:67:3;;;;;21434:25:81;;;4500:7:3;21475:18:81;;;21468:34;;;21518:18;;;21511:34;;;;21561:18;;;21554:34;;;;4606:4:3;21604:19:81;;;21597:51;4500:7:3;;4544:11;;:28;;21406:19:81;;4544:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4518:93:3;-1:-1:-1;4664:6:3;4629:32;4518:93;914:4:1;4629:22:3;:32::i;:::-;:41;;;;:::i;:::-;4622:48;4432:246;-1:-1:-1;;;4432:246:3:o;11726:1365:0:-;833:5;;11890:22;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13;::::0;;12048:5;:46;::::2;;;-1:-1:-1::0;12080:5:0::2;:14:::0;-1:-1:-1;;;;;12080:14:0::2;12057:19;12070:5:::0;12057:12:::2;:19::i;:::-;-1:-1:-1::0;;;;;12057:37:0::2;;;12048:46;12045:168;;;12096:24;::::0;-1:-1:-1;;;12096:24:0;;22111:2:81;12096:24:0::2;::::0;::::2;22093:21:81::0;22150:2;22130:18;;;22123:30;-1:-1:-1;;;22169:18:81;;;22162:44;22223:18;;12096:24:0::2;21909:338:81::0;12045:168:0::2;12140:5;12139:6;:47;;;;-1:-1:-1::0;12172:5:0::2;:14:::0;-1:-1:-1;;;;;12172:14:0::2;12149:19;12162:5:::0;12149:12:::2;:19::i;:::-;-1:-1:-1::0;;;;;12149:37:0::2;;;12139:47;12136:77;;;12188:25;::::0;-1:-1:-1;;;12188:25:0;;22454:2:81;12188:25:0::2;::::0;::::2;22436:21:81::0;22493:2;22473:18;;;22466:30;-1:-1:-1;;;22512:18:81;;;22505:45;22567:18;;12188:25:0::2;22252:339:81::0;12136:77:0::2;12225:30;12258:40;12272:9:::0;12283:5;12290:7:::2;12283:5:::0;12296:1:::2;12290:7;:::i;12258:40::-;12225:73:::0;-1:-1:-1;12320:31:0::2;:5;12338::::0;12345;12320:17:::2;:31::i;:::-;12309:42:::0;-1:-1:-1;12362:53:0::2;:8:::0;12390:6;12399:5;12309:42;12362:20:::2;:53::i;:::-;12427:59;:5;12457::::0;12471:6;12480:5;12427:28:::2;:59::i;:::-;12564:21;12588:5;:29;;12608:9;12588:29;;;12595:10;12588:29;12564:53;;12645:5;:385;;12866:164;12906:21;12919:7;:5:::0;12925:1:::2;12919:7;:::i;12906:21::-;-1:-1:-1::0;;;;;12866:164:0::2;12950:19;12963:5;12950:12;:19::i;:::-;-1:-1:-1::0;;;;;12866:164:0::2;13000:6;-1:-1:-1::0;;;;;12992:15:0::2;12866:18;:164::i;:::-;12645:385;;;12669:165;12710:21;12723:7;:5:::0;12729:1:::2;12723:7;:::i;12710:21::-;-1:-1:-1::0;;;;;12669:165:0::2;12754:19;12767:5;12754:12;:19::i;:::-;-1:-1:-1::0;;;;;12669:165:0::2;12804:6;-1:-1:-1::0;;;;;12796:15:0::2;12669:19;:165::i;:::-;12628:402;;13042:40;;;;;;;;;;;;;;-1:-1:-1::0;;;13042:40:0::2;;::::0;13067:14:::2;13042:11;:40::i;:::-;-1:-1:-1::0;;1033:5:0::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;11726:1365;;;;-1:-1:-1;11726:1365:0;-1:-1:-1;;;11726:1365:0:o;24397:137::-;24454:6;2184:4;24486:28;:5;2026:4;24486:16;:28::i;:::-;24485:40;;;;:::i;:::-;24471:55;24397:137;-1:-1:-1;;24397:137:0:o;2304:2354:1:-;2456:20;2478:21;2514:6;2511:2140;;;2590:149;2613:10;2642:4;2665:8;2692:10;2721:4;;2590:5;:149::i;:::-;2558:181;;-1:-1:-1;2558:181:1;-1:-1:-1;2758:10:1;2754:377;;;2770:58;2782:10;2794:13;2809:12;2823:4;2770:11;:58::i;:::-;2511:2140;;2754:377;2866:11;2880:9;:7;:9::i;:::-;2908:60;;-1:-1:-1;;;2908:60:1;;2866:23;;-1:-1:-1;2923:10:1;;2908:40;;:60;;2949:12;;2963:4;;;;2908:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3023:3;3008:12;:18;;;;:::i;:::-;2995:9;:7;:9::i;:::-;:31;;2987:50;;;;-1:-1:-1;;;2987:50:1;;23519:2:81;2987:50:1;;;23501:21:81;23558:1;23538:18;;;23531:29;-1:-1:-1;;;23576:18:81;;;23569:36;23622:18;;2987:50:1;23317:329:81;2987:50:1;3056:10;;-1:-1:-1;;;;;3056:10:1;:15;3072:27;;;;3083:4;3072:27;:::i;:::-;3101:13;3056:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2848:283;2511:2140;;;3238:153;3269:4;3293:5;3317:8;3344:10;3373:4;;3238:5;:153::i;:::-;3206:185;;-1:-1:-1;3206:185:1;-1:-1:-1;3206:185:1;;3614:33;3206:185;914:4;3614:23;:33::i;:::-;:49;;;;:::i;:::-;3598:65;;3918:10;3914:542;;;3930:59;3942:10;3954:12;3968:13;3983:5;3930:11;:59::i;:::-;3914:542;;;4026:11;4040:9;:7;:9::i;:::-;4068:61;;-1:-1:-1;;;4068:61:1;;4026:23;;-1:-1:-1;4083:10:1;;4068:40;;:61;;4109:13;;4124:4;;;;4068:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4185:3;4169:13;:19;;;;:::i;:::-;4156:9;:7;:9::i;:::-;:32;;4148:51;;;;-1:-1:-1;;;4148:51:1;;23519:2:81;4148:51:1;;;23501:21:81;23558:1;23538:18;;;23531:29;-1:-1:-1;;;23576:18:81;;;23569:36;23622:18;;4148:51:1;23317:329:81;4148:51:1;4218:12;;-1:-1:-1;;;;;4218:12:1;:17;4236:26;;;;4247:4;4236:26;:::i;:::-;4264:12;4218:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4420:20;4405:35;;4008:448;3914:542;3155:1496;2511:2140;2304:2354;;;;;;;;:::o;14177:1093:0:-;833:5;;14324:18;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13:::0;;::::1;::::0;;14374:27:::2;::::0;;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;;;14374:27:0;::::2;::::0;;::::2;-1:-1:-1::0;;;14374:27:0;::::2;::::0;::::2;;::::0;::::2;::::0;-1:-1:-1;;;14374:27:0;::::2;990:13:::1;14374:27:::0;;::::2;::::0;;;;;;;-1:-1:-1;;;14374:27:0;::::2;::::0;::::2;;;::::0;;;;-1:-1:-1;;;14374:27:0;::::2;::::0;;::::2;;;::::0;;;;-1:-1:-1;;;14374:27:0;::::2;::::0;;::::2;::::0;;;;;990:6;14446:40:::2;::::0;14460:9;;14471:5;;14478:7:::2;::::0;14471:5;;14478:7:::2;:::i;14446:40::-;14525:5;:14:::0;14413:73;;-1:-1:-1;14504:46:0::2;::::0;::::2;::::0;:37:::2;::::0;-1:-1:-1;;;;;14525:14:0::2;14504:12;:37::i;:::-;:46;;;14496:76;;;::::0;-1:-1:-1;;;14496:76:0;;24400:2:81;14496:76:0::2;::::0;::::2;24382:21:81::0;24439:2;24419:18;;;24412:30;-1:-1:-1;;;24458:18:81;;;24451:47;24515:18;;14496:76:0::2;24198:341:81::0;14496:76:0::2;14645:21;14669:5;:41;;14695:15;::::0;::::2;::::0;-1:-1:-1;;;14695:15:0;::::2;-1:-1:-1::0;;;;;14695:15:0::2;14669:41;;;14677:15;::::0;::::2;::::0;-1:-1:-1;;;;;14677:15:0::2;14669:41;14645:65:::0;-1:-1:-1;14729:54:0::2;14750:22;14645:65:::0;14750:22:::2;:::i;:::-;14729:8:::0;;14774:5;14781:1:::2;14729:20;:54::i;:::-;14795:66;14824:5:::0;14831:22:::2;14839:13:::0;14831:22:::2;:::i;:::-;14795:5;::::0;:66;14855:5;14795:28:::2;:66::i;:::-;14934:121;14967:21;14980:7;:5:::0;14986:1:::2;14980:7;:::i;14967:21::-;-1:-1:-1::0;;;;;14934:121:0::2;15002:6;:15;;;-1:-1:-1::0;;;;;14934:121:0::2;15032:13;-1:-1:-1::0;;;;;14934:121:0::2;:19;:121::i;:::-;14920:135;;15138:123;15170:6;:15;;;-1:-1:-1::0;;;;;15138:123:0::2;15200:19;15213:5;15200:12;:19::i;:::-;-1:-1:-1::0;;;;;15138:123:0::2;15234:13;-1:-1:-1::0;;;;;15138:123:0::2;:18;:123::i;:::-;1033:5:::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;15125:136;14177:1093;;-1:-1:-1;14177:1093:0;;-1:-1:-1;;;;;;14177:1093:0:o;3203:1132:3:-;3375:21;3415:10;-1:-1:-1;;;;;3429:10:3;3415:24;;3407:49;;;;-1:-1:-1;;;3407:49:3;;24746:2:81;3407:49:3;;;24728:21:81;24785:2;24765:18;;;24758:30;-1:-1:-1;;;24804:18:81;;;24797:42;24856:18;;3407:49:3;24544:336:81;3407:49:3;3509:21;3533:46;3559:19;3570:8;3559:9;:19;:::i;:::-;3534:12;3536:10;3534:1;:12;:::i;:::-;3533:25;;:46::i;:::-;3509:70;-1:-1:-1;3590:9:3;3602:48;3509:70;3603:20;3614:9;3603:8;:20;:::i;3602:48::-;3590:60;-1:-1:-1;3739:11:3;:28;3768;:10;3790:5;3768:21;:28::i;:::-;3739:80;;-1:-1:-1;;;;;;3739:80:3;;;;;;;;;;21434:25:81;;;;3797:1:3;21475:18:81;;;21468:34;21518:18;;;21511:34;;;21561:18;;;21554:34;;;3813:4:3;21604:19:81;;;21597:51;21406:19;;3739:80:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3721:12:3;3720:99;3830:1;:13;;;4060:10;4023:34;:13;4048:8;4023:24;:34::i;:::-;3992:28;:10;4014:5;3992:21;:28::i;:::-;3943:12;;:33;;3967:8;3943:23;:33::i;:::-;:77;;;;:::i;:::-;:114;;;;:::i;:::-;:127;;;;:::i;:::-;3927:143;-1:-1:-1;4127:46:3;4148:23;1736:4;4169:1;4148:20;:23::i;:::-;2417:9:0;:15;;-1:-1:-1;;;;;;2417:15:0;-1:-1:-1;;;;;2417:15:0;;;;;;;;;;2341:99;4127:46:3;4184:19;4201:1;;4184:16;:19::i;:::-;4214:61;4234:22;4247:8;4234:12;:22::i;:::-;23194:17:0;;;;;;:10;:17;;;;;:23;;-1:-1:-1;;;;;;23194:23:0;-1:-1:-1;;;;;23194:23:0;;;23120:105;4214:61:3;4286:41;4304:22;4317:8;4304:12;:22::i;:::-;23289:5:0;:28;;;;;;-1:-1:-1;;;23289:28:0;-1:-1:-1;;;;23289:28:0;;;;;;;;;23230:96;4286:41:3;3397:938;;3203:1132;;;;;;:::o;26245:234:0:-;26305:9;26334:1;26330;:5;;;26326:147;;;-1:-1:-1;;;;;26359:25:0;;26376:2;26377:1;26376:2;:::i;:::-;26364:15;;:1;:15;:::i;:::-;26360:19;;;-1:-1:-1;;;;;26359:25:0;;26351:40;;;;-1:-1:-1;;;26351:40:0;;25465:2:81;26351:40:0;;;25447:21:81;25504:1;25484:18;;;25477:29;-1:-1:-1;;;25522:18:81;;;25515:32;25564:18;;26351:40:0;25263:325:81;26351:40:0;26326:147;;;-1:-1:-1;;;;;26430:25:0;;26435:14;26447:1;26454;26435:14;:::i;:::-;26431:18;;;-1:-1:-1;;;;;26430:25:0;;;26422:40;;;;-1:-1:-1;;;26422:40:0;;25795:2:81;26422:40:0;;;25777:21:81;25834:1;25814:18;;;25807:29;-1:-1:-1;;;25852:18:81;;;25845:32;25894:18;;26422:40:0;25593:325:81;15482:1078:0;833:5;;15623:21;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13:::0;;::::1;::::0;;15688:40:::2;::::0;15702:9;;15713:5;;15720:7:::2;::::0;15713:5;;15720:7:::2;:::i;15688:40::-;15655:73:::0;-1:-1:-1;15739:16:0::2;15758:31;:5;15776::::0;15783;15758:17:::2;:31::i;:::-;15739:50;;15800:15;15818:5;:48;;15847:19:::0;;-1:-1:-1;;;;;15847:19:0::2;15818:48;;;15825:19:::0;;-1:-1:-1;;;15825:19:0;::::2;-1:-1:-1::0;;;;;15825:19:0::2;15818:48;15800:66;;15896:7;-1:-1:-1::0;;;;;15885:18:0::2;:8;-1:-1:-1::0;;;;;15885:18:0::2;;15877:50;;;::::0;-1:-1:-1;;;15877:50:0;;26125:2:81;15877:50:0::2;::::0;::::2;26107:21:81::0;26164:2;26144:18;;;26137:30;-1:-1:-1;;;26183:18:81;;;26176:49;26242:18;;15877:50:0::2;25923:343:81::0;15877:50:0::2;15938:11;15952:5;:40;;15977:15;::::0;::::2;::::0;-1:-1:-1;;;15977:15:0;::::2;-1:-1:-1::0;;;;;15977:15:0::2;15952:40;;;15959:15;::::0;::::2;::::0;-1:-1:-1;;;;;15959:15:0::2;15952:40;15938:54;;16051:5;16048:409;;;16074:145;16110:21;16123:7;:5:::0;16129:1:::2;16123:7;:::i;16110:21::-;-1:-1:-1::0;;;;;16074:145:0::2;16150:19;16163:5;16150:12;:19::i;16074:145::-;16058:161;;16048:409;;;16311:146;16348:21;16361:7;:5:::0;16367:1:::2;16361:7;:::i;16348:21::-;-1:-1:-1::0;;;;;16311:146:0::2;16388:19;16401:5;16388:12;:19::i;:::-;-1:-1:-1::0;;;;;16311:146:0::2;16434:3;-1:-1:-1::0;;;;;16426:12:0::2;16311:19;:146::i;:::-;16295:162;;16048:409;16469:44;16490:12;16498:3:::0;16490:12:::2;:::i;:::-;16469:8:::0;;16504:5;16511:1:::2;16469:20;:44::i;:::-;-1:-1:-1::0;;1033:5:0::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;-1:-1:-1;15482:1078:0;;;-1:-1:-1;;;;15482:1078:0:o;2446:84::-;833:5;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;2508:5:::1;:14:::0;;-1:-1:-1;;;;;;2508:14:0::1;-1:-1:-1::0;;;;;2508:14:0;;;::::1;::::0;;;::::1;::::0;;2446:84::o;14157:529:1:-;14323:15;14340;14359:132;14380:10;14405;14430;14455:6;14476:4;;14359:7;:132::i;:::-;14502:9;;:58;;-1:-1:-1;;;14502:58:1;;14322:169;;-1:-1:-1;14322:169:1;;-1:-1:-1;;;;;;14502:9:1;;:22;;:58;;14525:10;;14545:4;;14322:169;;14502:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14643:10:1;;:36;;-1:-1:-1;;;14643:36:1;;-1:-1:-1;;;;;14643:10:1;;;;:15;;:36;;14659:10;;14671:7;;14643:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14311:375;;14157:529;;;;;:::o;3389:149:0:-;3467:7;3500:29;:5;3523;3500:22;:29::i;:::-;-1:-1:-1;;;;;3492:38:0;;3389:149;-1:-1:-1;;;3389:149:0:o;4757:1657:1:-;4909:20;4931:21;4988:6;4985:1423;;;5041:178;5064:10;5092:5;5116:8;5172:10;5201:4;;5041:5;:178::i;:::-;5009:210;;-1:-1:-1;5009:210:1;-1:-1:-1;5239:10:1;5235:170;;;5251:58;5263:10;5275:13;5290:12;5304:4;5251:11;:58::i;5235:170::-;5329:76;5341:27;;;;5352:4;5341:27;:::i;:::-;5370:13;5385:12;5399:4;5329:11;:76::i;4985:1423::-;5633:149;5656:10;5685:4;5708:8;5735:10;5764:4;;5633:5;:149::i;:::-;5601:181;;-1:-1:-1;5601:181:1;-1:-1:-1;5601:181:1;;5915:34;5601:181;914:4;5915:24;:34::i;:::-;:49;;;;:::i;:::-;5900:64;;5984:10;5980:257;;;5996:58;6008:10;6020:12;6033:13;6048:5;5996:11;:58::i;5980:257::-;6091:76;6103:27;;;;6114:4;6103:27;:::i;:::-;6132:12;6146:13;6160:5;6091:11;:76::i;:::-;6202:19;6186:35;;5459:949;4757:1657;;;;;;;;:::o;14692:603::-;14857:18;14877:19;14900:111;14920:10;14945;14970;14995:6;14900;:111::i;:::-;14856:155;;;;15029:152;15050:10;15075;15099;-1:-1:-1;;;;;15154:17:1;15029:7;:152::i;:::-;-1:-1:-1;;15193:9:1;;:43;;-1:-1:-1;;;15193:43:1;;-1:-1:-1;;;;;15193:9:1;;;;:18;;:43;;15212:10;;15225;;15193:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15247:10:1;;:40;;-1:-1:-1;;;15247:40:1;;-1:-1:-1;;;;;15247:10:1;;;;:15;;:40;;15263:10;;15275:11;;15247:40;;;:::i;6553:1454::-;6694:22;6718:15;6748:6;6745:1255;;;6834:205;6867:9;6894:5;6926:70;6945:21;6958:7;6894:5;6964:1;6958:7;:::i;6945:21::-;-1:-1:-1;;;;;6926:70:1;6968:19;6981:5;6968:12;:19::i;:::-;-1:-1:-1;;;;;6926:70:1;6989:6;6926:18;:70::i;:::-;7016:5;6834:15;:205::i;:::-;7054:9;;:64;;-1:-1:-1;;;7054:64:1;;6806:233;;-1:-1:-1;6806:233:1;;-1:-1:-1;;;;;;7054:9:1;;:22;;:64;;7077:9;;7096:4;;6806:233;;7054:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6745:1255;;;7318:205;7351:9;7379:5;7410:70;7430:21;7443:7;7379:5;7449:1;7443:7;:::i;7430:21::-;-1:-1:-1;;;;;7410:70:1;7453:19;7466:5;7453:12;:19::i;:::-;-1:-1:-1;;;;;7410:70:1;7473:6;7410:19;:70::i;:::-;7501:4;7318:15;:205::i;:::-;7290:233;;-1:-1:-1;7290:233:1;-1:-1:-1;7605:24:1;7649:210;7689:21;7702:7;:5;7708:1;7702:7;:::i;7689:21::-;-1:-1:-1;;;;;7649:210:1;7733:19;7746:5;7733:12;:19::i;:::-;-1:-1:-1;;;;;7649:210:1;7783:6;7649:18;:210::i;:::-;7632:227;;:14;:227;:::i;:::-;7874:9;;:66;;-1:-1:-1;;;7874:66:1;;7605:254;;-1:-1:-1;;;;;;7874:9:1;;:22;;:66;;7897:9;;7916:4;;7605:254;;7874:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7972:16:1;-1:-1:-1;6745:1255:1;6553:1454;;;;;;;:::o;4716:243:3:-;4849:5;;-1:-1:-1;;;;;4849:5:3;4835:10;:19;4827:40;;;;-1:-1:-1;;;4827:40:3;;;;;;;:::i;:::-;4879:10;;:33;;-1:-1:-1;;;4879:33:3;;-1:-1:-1;;;;;4879:10:3;;;;:15;;:33;;4895:8;;4905:6;;4879:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4944:6;4922:18;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;4716:243:3:o;2625:478:0:-;2757:4;;2805:40;2819:9;2830:5;2837:7;2830:5;2843:1;2837:7;:::i;2805:40::-;2772:73;-1:-1:-1;2856:16:0;2875:31;:5;2893;2900;2875:17;:31::i;:::-;2856:50;;2917:15;2935:5;:48;;2964:19;;-1:-1:-1;;;;;2964:19:0;2935:48;;;2942:19;;-1:-1:-1;;;2942:19:0;;-1:-1:-1;;;;;2942:19:0;2935:48;2917:66;;2994:11;3008:5;:40;;3033:15;;;;-1:-1:-1;;;3033:15:0;;-1:-1:-1;;;;;3033:15:0;3008:40;;;3015:15;;;;-1:-1:-1;;;;;3015:15:0;3008:40;2994:54;;3071:1;3067:3;-1:-1:-1;;;;;3067:5:0;;:27;;;;;3087:7;-1:-1:-1;;;;;3076:18:0;:8;-1:-1:-1;;;;;3076:18:0;;3067:27;3059:36;2625:478;-1:-1:-1;;;;;;;;2625:478:0:o;2380:654:3:-;2505:10;-1:-1:-1;;;;;2519:10:3;2505:24;;2497:49;;;;-1:-1:-1;;;2497:49:3;;24746:2:81;2497:49:3;;;24728:21:81;24785:2;24765:18;;;24758:30;-1:-1:-1;;;24804:18:81;;;24797:42;24856:18;;2497:49:3;24544:336:81;2497:49:3;1736:4;2569:21;2586:3;2588:1;2586;:3;:::i;:::-;2570;2572:1;2570;:3;:::i;2569:21::-;:33;;;;:::i;:::-;2557:9;:45;2625:37;2658:3;2660:1;2658;:3;:::i;:::-;2636:9;;2626:19;;1736:4;2626:19;:::i;2625:37::-;2613:9;:49;2808:11;:28;2837:19;:1;2850:5;2837:12;:19::i;:::-;2861:9;;2872;;2808:80;;-1:-1:-1;;;;;;2808:80:3;;;;;;;;;;21434:25:81;;;;2858:1:3;21475:18:81;;;21468:34;21518:18;;;21511:34;;;;21561:18;;;21554:34;2883:4:3;21604:19:81;;;21597:51;21406:19;;2808:80:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2803:1;2788:100;2789:12;2788:100;2985:9;;2943:54;;2964:31;;1736:4;;2964:20;:31::i;2943:54::-;3008:19;3025:1;;3008:16;:19::i;:::-;2380:654;;;:::o;17554:792:0:-;833:5;;17720:7;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13;::::0;;17849:220:::2;::::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;17849:220:0;::::2;::::0;;::::2;::::0;;::::2;;::::0;::::2;::::0;;::::2;::::0;;;;;;;990:6;;;;17820:263:::2;::::0;17849:220;;;18022:15:::2;18030:6:::0;18022:15:::2;:::i;:::-;17849:220;;::::0;;17820:15:::2;:263::i;:::-;17750:333;;;;;;18106:1;18098:7;:9;:23;;;;18120:1;18111:7;:10;18098:23;18095:209;;;18224:7;18201:8;:20;;;:30;;;;:::i;:::-;18272:7;18249:8;:20;;;:30;;;;:::i;:::-;18159:20;::::0;::::2;18136:157:::0;18137:20:::2;::::0;::::2;18136:157:::0;18095:209:::2;1033:5:::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;18321:7;;;;-1:-1:-1;17554:792:0;-1:-1:-1;;;;;;17554:792:0:o;23408:177::-;23492:7;23522:2;23518;:6;;23510:28;;;;-1:-1:-1;;;23510:28:0;;;;;;;:::i;:::-;23556:21;23575:1;23557:5;23560:2;23557;:5;:::i;:::-;23556:18;;:21::i;:::-;23549:28;23408:177;-1:-1:-1;;;;23408:177:0:o;24210:129::-;24266:7;24290:41;24291:27;2026:4;24291:14;;;:27;:::i;:::-;24290:39;:41::i;5601:141:3:-;5647:10;-1:-1:-1;;;;;5661:10:3;5647:24;;5639:45;;;;-1:-1:-1;;;5639:45:3;;;;;;;:::i;:::-;2417:9:0;:15;;-1:-1:-1;;;;;;2417:15:0;;;5721:13:3;23390:4:0;23372:22;;-1:-1:-1;;;;23372:22:0;-1:-1:-1;;;23372:22:0;;;23331:71;5721:13:3;5601:141::o;24722:138:0:-;24803:7;24828:24;24850:1;24829:10;24838:1;24829:8;:10;:::i;:::-;24828:21;;:24::i;11913:1168:1:-;12071:6;12068:1007;;;12092:23;12117:293;12151:9;12179:5;12203:165;:153;12243:21;12256:7;12179:5;12262:1;12256:7;:::i;12203:153::-;:163;:165::i;:::-;12387:5;12117:16;:293::i;:::-;12464:9;;:46;;-1:-1:-1;;;12464:46:1;;12092:318;;-1:-1:-1;;;;;;12464:9:1;;:18;;:46;;12483:9;;12092:318;;12464:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12078:444;12068:1007;;;12550:11;12564:83;:71;12584:21;12597:7;:5;12603:1;12597:7;:::i;12584:21::-;-1:-1:-1;;;;;12564:71:1;12607:19;12620:5;12607:12;:19::i;:::-;-1:-1:-1;;;;;12564:71:1;12628:6;12564:19;:71::i;:83::-;12550:97;;12690:130;12724:9;12752:5;12776:3;12798:4;12690:16;:130::i;:::-;-1:-1:-1;12940:9:1;;-1:-1:-1;;;;;12940:9:1;:18;12959:9;12996:67;13015:21;13028:7;:5;12940:9;13028:7;:::i;13015:21::-;-1:-1:-1;;;;;12996:67:1;13038:19;13051:5;13038:12;:19::i;:::-;-1:-1:-1;;;;;12996:67:1;13059:3;-1:-1:-1;;;;;12996:67:1;:18;:67::i;:::-;12987:76;;:6;:76;:::i;:::-;12940:124;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12536:539;12068:1007;11913:1168;;;;:::o;5240:253:3:-;5315:10;-1:-1:-1;;;;;5329:10:3;5315:24;;5307:45;;;;-1:-1:-1;;;5307:45:3;;;;;;;:::i;:::-;-1:-1:-1;;5367:6:3;:27;5363:122;;5396:9;;-1:-1:-1;;;;;5396:9:3;:18;5415:7;5424:9;:7;:9::i;:::-;5396:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5363:122::-;5450:9;;:35;;-1:-1:-1;;;5450:35:3;;-1:-1:-1;;;;;5450:9:3;;;;:18;;:35;;5469:7;;5478:6;;5450:35;;;:::i;5363:122::-;5240:253;;:::o;26484:231:0:-;26558:7;26584:5;:123;;26667:33;26681:2;26685:5;26692:7;26685:5;26698:1;26692:7;:::i;26667:33::-;:40;;;-1:-1:-1;;;26667:40:0;;-1:-1:-1;;;;;26667:40:0;26584:123;;;26608:33;26622:2;26626:5;26633:7;26626:5;26639:1;26633:7;:::i;26608:33::-;:40;;;-1:-1:-1;;;;;26608:40:0;;26484:231;-1:-1:-1;;;;26484:231:0:o;13152:999:1:-;13312:6;13309:836;;;13333:23;13359:270;13393:9;13421:5;13445:143;:131;13494:21;13507:7;13421:5;13513:1;13507:7;:::i;13445:143::-;13607:4;13359:16;:270::i;:::-;13684:10;;:43;;-1:-1:-1;;;13684:43:1;;13333:296;;-1:-1:-1;;;;;;13684:10:1;;:15;;:43;;13700:9;;13333:296;;13684:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13319:420;13309:836;;;13801:267;13835:9;13863:5;13887:143;:131;13936:21;13949:7;13863:5;13955:1;13949:7;:::i;13936:21::-;-1:-1:-1;;;;;13928:30:1;13989:19;14002:5;13989:12;:19::i;:::-;-1:-1:-1;;;;;13981:28:1;14011:6;13887:19;:131::i;13801:267::-;-1:-1:-1;14097:12:1;;:36;;-1:-1:-1;;;14097:36:1;;-1:-1:-1;;;;;14097:12:1;;;;:17;;:36;;14115:9;;14126:6;;14097:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13152:999;;;;:::o;10145:935::-;10269:21;10305:6;10302:772;;;10404:41;10421:9;10432:5;10439:4;10404:16;:41::i;:::-;10460:9;;:44;;-1:-1:-1;;;10460:44:1;;10388:57;;-1:-1:-1;;;;;;10460:9:1;;:18;;:44;;10479:9;;10388:57;;10460:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10302:772;;;10543:11;10557:31;10564:9;10575:5;10582;10557:6;:31::i;:::-;10543:45;;10713:41;10730:9;10741:5;10748;10713:16;:41::i;:::-;10697:57;-1:-1:-1;10850:154:1;10898:21;10911:7;:5;10917:1;10911:7;:::i;10898:21::-;-1:-1:-1;;;;;10850:154:1;10950:19;10963:5;10950:12;:19::i;10850:154::-;10784:34;:13;914:4;10784:24;:34::i;:::-;:220;;;;:::i;:::-;11019:9;;:44;;-1:-1:-1;;;11019:44:1;;10768:236;;-1:-1:-1;;;;;;11019:9:1;;:18;;:44;;11038:9;;10768:236;;11019:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10529:545;10145:935;;;;;:::o;24989:293:0:-;25054:7;25072:12;25087:22;25100:8;25087:12;:22::i;:::-;25072:37;;25197:6;25196:7;:32;;;;-1:-1:-1;25208:14:0;;;;:8;:14;:::i;:::-;:19;25196:32;25195:79;;25255:19;25268:5;25255:12;:19::i;:::-;25195:79;;;25231:21;25244:7;25250:1;25244:5;:7;:::i;25231:21::-;-1:-1:-1;;;;;25188:86:0;;24989:293;-1:-1:-1;;;;24989:293:0:o;16943:605::-;833:5;;17141:15;;;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;958:6:::1;::::0;::::1;;957:7;949:31;;;;-1:-1:-1::0;;;949:31:0::1;;;;;;;:::i;:::-;990:6;:13:::0;;-1:-1:-1;;990:13:0::1;999:4;990:13;::::0;;-1:-1:-1;;;;;17193:10:0;::::2;17185:31;;;::::0;-1:-1:-1;;;17185:31:0;;27643:2:81;17185:31:0::2;::::0;::::2;27625:21:81::0;27682:1;27662:18;;;27655:29;-1:-1:-1;;;27700:18:81;;;27693:38;27748:18;;17185:31:0::2;27441:331:81::0;17185:31:0::2;17253:262;17282:219;;;;;;;;17328:9;-1:-1:-1::0;;;;;17282:219:0::2;;;;;17369:10;17282:219;;;;;;17410:10;17282:219;;;;;;17462:6;17282:219;;;;::::0;17253:15:::2;:262::i;:::-;1033:5:::1;1024:14:::0;;-1:-1:-1;;1024:14:0::1;::::0;;17228:287;;;;-1:-1:-1;16943:605:0;-1:-1:-1;;;;;;;;16943:605:0:o;23826:175::-;23910:7;23940:2;23936;:6;;23928:28;;;;-1:-1:-1;;;23928:28:0;;;;;;;:::i;:::-;23974:19;23987:5;23990:2;23987;:5;:::i;:::-;23974:1;;:12;:19::i;24540:177::-;24614:7;24635:1;24638;24635:4;24632:33;;-1:-1:-1;;;24641:24:0;;24632:33;24683:26;24707:1;24684:10;24693:1;24684:8;:10;:::i;:::-;24683:23;;:26::i;25288:206::-;25378:7;25400:6;25396:90;;;25434:6;25423:7;:5;25429:1;25423:7;:::i;:::-;25415:16;;:25;;;;:::i;:::-;25408:32;;;;25396:90;25463:23;25480:6;25463:14;;;:23;:::i;4966:268:3:-;5107:5;;-1:-1:-1;;;;;5107:5:3;5093:10;:19;5085:40;;;;-1:-1:-1;;;5085:40:3;;;;;;;:::i;:::-;5141:4;5137:90;;;5147:10;;:31;;-1:-1:-1;;;5147:31:3;;-1:-1:-1;;;;;5147:10:3;;;;:15;;:31;;5163:6;;5171;;5147:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2380:654;;;:::o;5137:90::-;5194:12;;:33;;-1:-1:-1;;;5194:33:3;;-1:-1:-1;;;;;5194:12:3;;;;:17;;:33;;5212:6;;5220;;5194:33;;;:::i;3548:135:0:-;3618:7;3643:32;:5;3661;3668:6;3643:17;:32::i;24006:198::-;24089:7;24119:2;24115;:6;;24107:28;;;;-1:-1:-1;;;24107:28:0;;;;;;;:::i;:::-;24153:43;24166:29;24193:1;24186:5;24189:2;24186;:5;:::i;:::-;24185:9;;;;:::i;:::-;24167:5;24170:2;24167;:5;:::i;9088:1051:1:-;9230:22;9254:15;9284:6;9281:852;;;9392:205;9425:9;9453:5;9485:70;9505:21;9518:7;9453:5;9524:1;9518:7;:::i;9392:205::-;9673:10;;:42;;-1:-1:-1;;;9673:42:1;;9364:233;;-1:-1:-1;9364:233:1;;-1:-1:-1;;;;;;9673:10:1;;:15;;:42;;9689:9;;9364:233;;9673:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9281:852;;;9827:205;9860:9;9888:5;9919:70;9939:21;9952:7;9888:5;9958:1;9952:7;:::i;9827:205::-;10084:12;;:36;;-1:-1:-1;;;10084:36:1;;9799:233;;-1:-1:-1;9799:233:1;;-1:-1:-1;;;;;;10084:12:1;;:17;;:36;;10102:9;;10113:6;;10084:36;;;:::i;8013:934::-;8135:21;8171:6;8168:772;;;8192:21;8216:42;8233:9;8244:5;8251;8216:16;:42::i;:::-;8351:10;;:41;;-1:-1:-1;;;8351:41:1;;8192:66;;-1:-1:-1;;;;;;8351:10:1;;:15;;:41;;8367:9;;8192:66;;8351:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8178:235;8168:772;;;8452:12;;-1:-1:-1;;;;;8452:12:1;:17;8470:9;8498:180;8539:21;8552:7;:5;8452:12;8552:7;:::i;8539:21::-;-1:-1:-1;;;;;8498:180:1;8583:19;8596:5;8583:12;:19::i;:::-;-1:-1:-1;;;;;8498:180:1;8625:31;8632:10;8644:5;8651:4;8625:6;:31::i;:::-;-1:-1:-1;;;;;8498:180:1;:19;:180::i;:::-;8452:244;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8887:41;8904:9;8915:5;8922:4;8887:16;:41::i;2535:84:0:-;833:5;;-1:-1:-1;;;;;833:5:0;842:10;833:19;825:42;;;;-1:-1:-1;;;825:42:0;;;;;;;:::i;:::-;2597:5:::1;:14:::0;;-1:-1:-1;;;;2579:32:0;::::1;-1:-1:-1::0;;;2597:14:0;;;::::1;;;2596:15;2579:32:::0;;::::1;;::::0;;2535:84::o;23591:229::-;23674:7;23705:2;23701;:6;;23693:28;;;;-1:-1:-1;;;23693:28:0;;;;;;;:::i;:::-;23739:11;:26;23766:30;23786:2;23790;23794:1;23766:19;:30::i;:::-;23798:1;23801:6;23805:1;23801:3;:6::i;:::-;23739:73;;-1:-1:-1;;;;;;23739:73:0;;;;;;;;;;28024:25:81;;;;28065:18;;;28058:34;;;;28108:18;;;28101:34;28151:18;;;28144:34;;;27996:19;;23739:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;901:127:45:-;962:59;1017:2;978:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;978:42:45;;;;;;;;;;;;;;-1:-1:-1;;;;;978:42:45;-1:-1:-1;;;978:42:45;;;962:15;:59::i;:::-;901:127;:::o;25897:97:0:-;25955:4;25978:3;25980:1;25978;:3;:::i;:::-;:7;;25897:97;-1:-1:-1;;;25897:97:0:o;38886:329::-;39059:10;;;39017:7;39059:10;;;;;;;;;;;39035:34;;;;;;;;;-1:-1:-1;;;;;39035:34:0;;;;;-1:-1:-1;;;39035:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39035:34:0;;-1:-1:-1;;;;;39035:34:0;;;;;-1:-1:-1;;;39035:34:0;;;;;;;;-1:-1:-1;;;39035:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39087:25;;:54;;-1:-1:-1;39116:22:0;;;;-1:-1:-1;;;;;39116:25:0;;39087:54;39080:62;;;;:::i;:::-;39185:4;:22;;;39160:4;:22;;;:47;;;;:::i;25642:140::-;25695:7;25720:4;;:53;;25752:21;2184:4;25771:1;25752:18;:21::i;25720:53::-;25726:23;25745:3;:1;25747;25745:3;:::i;:::-;2184:4;;25726:18;:23::i;25500:137::-;25546:7;25571:4;;:57;;25605:23;2184:4;25626:1;25605:20;:23::i;25571:57::-;25577:25;25598:3;:1;25600;25598:3;:::i;:::-;2184:4;;25577:20;:25::i;6548:139:45:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:45;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:45;-1:-1:-1;;;6628:51:45;;;6612:15;:68::i;5514:110::-;5560:57;5613:2;5576:40;;;;;;2604:25:81;;2592:2;2577:18;;2458:177;5576:40:45;;;;-1:-1:-1;;5576:40:45;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:40:45;-1:-1:-1;;;5576:40:45;;;5560:15;:57::i;10843:157::-;10916:77;10981:2;10985;10989;10932:60;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10932:60:45;;;;;;;;;;;;;;-1:-1:-1;;;;;10932:60:45;-1:-1:-1;;;10932:60:45;;;10916:15;:77::i;937:164:2:-;1002:7;1028:21;1039:1;554:4;1047:1;1028:10;:21::i;39221:441:0:-;39400:10;;;39375:22;39400:10;;;;;;;;;;39421:235;;;;39445:22;;;:26;;-1:-1:-1;;;;;;39445:26:0;;;39485:16;;;:18;;-1:-1:-1;;;;;39485:18:0;;39470:1;39485:18;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;39485:18:0;;;;;-1:-1:-1;;;;;39485:18:0;;;;;;;39518:27;;;;;;;;;;;;;;-1:-1:-1;;;39518:27:0;;;39540:4;39518:27;;:11;:27::i;:::-;39421:235;;;39585:22;;;:26;;-1:-1:-1;;;;;39585:26:0;;;;;;39626:16;;;:18;;-1:-1:-1;;;39626:18:0;;;;;;39585:22;39626:18;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;39626:18:0;;;;;-1:-1:-1;;;;;39626:18:0;;;;;;;39365:297;39221:441;;;:::o;41260:479::-;41503:10;;;41447:19;41503:10;;;;;;;;;;41540:17;;41618:25;;;;-1:-1:-1;;;41540:17:0;;;;;;41503:10;41596:47;;:19;:47;:::i;:::-;41568:25;;;:75;41706:26;;;;41683:49;;:20;:49;:::i;:::-;41654:26;;;;:78;41260:479;;-1:-1:-1;;;;41260:479:0:o;8460:111:2:-;8562:1;-1:-1:-1;;;;;8542:21:2;;;;8534:30;;;;;;8460:111;;;:::o;34479:286:0:-;34711:45;;;30069:2:81;30065:15;;;;-1:-1:-1;;30061:53:81;34711:45:0;;;;30049:66:81;;;;30138:3;30183:16;;;-1:-1:-1;;;;;;30179:25:81;;;30165:12;;;30158:47;30239:16;;;;30235:25;;;30221:12;;;30214:47;34711:45:0;;;;;;;;;30277:12:81;;;;34711:45:0;;34701:56;;;;;;;;;-1:-1:-1;34696:62:0;;;;;;;;;34479:286::o;33562:490::-;33726:5;33722:324;;;33770:11;;;;33761:41;;-1:-1:-1;;;;;33770:11:0;33783:18;33761:8;:41::i;:::-;33747:11;;;:55;;-1:-1:-1;;;;;;33747:55:0;-1:-1:-1;;;;;33747:55:0;;;;;;;;;;-1:-1:-1;33820:22:0;;;;;33816:53;;;33844:25;;-1:-1:-1;;;;;33844:25:0;;;-1:-1:-1;;;33844:25:0;;;;;;33722:324;;;33934:11;;;;33925:41;;-1:-1:-1;;;33934:11:0;;-1:-1:-1;;;;;33934:11:0;33947:18;33925:8;:41::i;:::-;33911:11;;;:55;;-1:-1:-1;;;;;33911:55:0;;;-1:-1:-1;;;33911:55:0;;;;;;;;;-1:-1:-1;33985:22:0;;;;;33981:53;;;34009:25;;-1:-1:-1;;;;;;34009:25:0;-1:-1:-1;;;;;34009:25:0;;;;;;;;-1:-1:-1;;33562:490:0:o;39668:410::-;39864:5;39860:211;;;39911:10;;;;;;;;;;;;;;:28;;;39902:61;;-1:-1:-1;;;;;39911:28:0;39941:21;39902:8;:61::i;:::-;39871:10;;;;;;;;;;;;;;:28;;:92;;-1:-1:-1;;;;;;39871:92:0;-1:-1:-1;;;;;39871:92:0;;;;;;;;;;39860:211;;;40019:10;;;;;;;;;;;;;;:28;;;40010:61;;-1:-1:-1;;;40019:28:0;;-1:-1:-1;;;;;40019:28:0;40049:21;40010:8;:61::i;:::-;39979:10;;;;;;;;;;;;;;:28;;:92;;-1:-1:-1;;;;;39979:92:0;;;-1:-1:-1;;;39979:92:0;;;;;;;;;39668:410;;;;:::o;704:164:67:-;769:7;795:21;806:1;809;655:4;795:10;:21::i;38647:233:0:-;38793:7;38818:5;:54;;38850:10;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;38850:22:0;;-1:-1:-1;;;;;38850:22:0;38818:54;;;-1:-1:-1;;38825:10:0;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;;;38825:22:0;;38647:233::o;1392:324:1:-;1540:6;1537:103;;;1548:10;;:37;;-1:-1:-1;;;1548:37:1;;-1:-1:-1;;;;;1548:10:1;;;;:15;;:37;;1564:9;;1575;;1548:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:103;;;1601:12;;:39;;-1:-1:-1;;;1601:39:1;;-1:-1:-1;;;;;1601:12:1;;;;:17;;:39;;1619:9;;1630;;1601:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:103;1651:9;;:57;;-1:-1:-1;;;1651:57:1;;-1:-1:-1;;;;;1651:9:1;;;;:22;;:57;;1674:9;;1692:4;;1699:8;;1651:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1392:324;;;;:::o;603:164:2:-;668:7;694:21;705:1;708;554:4;694:10;:21::i;1038:164:67:-;1103:7;1129:21;1140:1;655:4;1148:1;1129:10;:21::i;3109:176:0:-;3205:19;3218:5;3205:12;:19::i;:::-;3191:5;:33;;;;;;;-1:-1:-1;;;3191:33:0;-1:-1:-1;;;;3191:33:0;;;;;;;;;3260:17;:5;:15;:17::i;:::-;3243:5;:34;;-1:-1:-1;;;;;;3243:34:0;-1:-1:-1;;;;;3243:34:0;;;;;;;;;;-1:-1:-1;3109:176:0:o;1722:300:1:-;1861:6;1858:101;;;1869:10;;:36;;-1:-1:-1;;;1869:36:1;;-1:-1:-1;;;;;1869:10:1;;;;:15;;:36;;1885:9;;1896:8;;1869:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:101;;;1921:12;;:38;;-1:-1:-1;;;1921:38:1;;-1:-1:-1;;;;;1921:12:1;;;;:17;;:38;;1939:9;;1950:8;;1921:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:101;1974:9;;:40;;-1:-1:-1;;;1974:40:1;;-1:-1:-1;;;;;1974:9:1;;;;:18;;:40;;1993:9;;2004;;1974:40;;;:::i;19174:2621:0:-;19383:27;;;;;;;;19405:5;19383:27;-1:-1:-1;;;;;19383:27:0;;;;;-1:-1:-1;;;19383:27:0;;;;;;;;;;;;-1:-1:-1;;;19383:27:0;;;;;;;;-1:-1:-1;;;19383:27:0;;;;;;;;;;;;;;-1:-1:-1;;;19383:27:0;;;;;;;;;;;-1:-1:-1;;;19383:27:0;;;;;;;;;;19491:12;;19517:17;;;;19548;;;;19579:21;;;;19269:30;;;;;;19383:27;;19462:174;;19491:12;;19579:21;19462:15;:174::i;:::-;19451:185;;19651:6;:21;;;:26;;19676:1;19651:26;19647:2142;;19711:6;:17;;;19696:32;;:6;:12;;;:32;;;19692:2087;;;19898:328;19939:31;19952:6;:17;;;19939:12;:31::i;:::-;-1:-1:-1;;;;;19898:328:0;19993:31;20006:6;:17;;;19993:12;:31::i;:::-;-1:-1:-1;;;;;19898:328:0;20072:1;20047:6;:21;;;:26;;;;:157;;20181:6;:21;;;20180:22;;;:::i;:::-;20173:30;;23408:177;:::i;20047:157::-;20115:6;:21;;;20108:29;;19898:19;:328::i;:::-;19884:342;;19692:2087;;;20267:6;:17;;;20252:32;;:6;:12;;;:32;;;20248:1531;;;20329:9;;20496:17;;;;-1:-1:-1;;;;;20329:9:0;;;;20442:311;;20483:31;;:12;:31::i;:::-;-1:-1:-1;;;;;20442:311:0;20536:6;:15;;;-1:-1:-1;;;;;20442:311:0;20599:1;20574:6;:21;;;:26;;;;:157;;20708:6;:21;;;20707:22;;;:::i;20574:157::-;20642:6;:21;;;20635:29;;20442:19;:311::i;:::-;20428:325;;20857:311;20897:6;:15;;;-1:-1:-1;;;;;20857:311:0;20935:31;20948:6;:17;;;20935:12;:31::i;:::-;-1:-1:-1;;;;;20857:311:0;21014:1;20989:6;:21;;;:26;;;;:157;;21123:6;:21;;;21122:22;;;:::i;:::-;21115:30;;23591:229;:::i;20989:157::-;21057:6;:21;;;21050:29;;20857:18;:311::i;:::-;20844:324;;21271:48;21280:15;21297:6;:21;;;21271:8;:48::i;:::-;21259:9;:60;;-1:-1:-1;;;;;;21259:60:0;-1:-1:-1;;;;;21259:60:0;;;;;;;;;;-1:-1:-1;20248:1531:0;;;21440:323;21480:31;21493:6;:17;;;21480:12;:31::i;:::-;-1:-1:-1;;;;;21440:323:0;21534:31;21547:6;:17;;;21534:12;:31::i;:::-;-1:-1:-1;;;;;21440:323:0;21613:1;21588:6;:21;;;:26;;;;:157;;21722:6;:21;;;21721:22;;;:::i;21588:157::-;21656:6;:21;;;21649:29;;21440:18;:323::i;:::-;21427:336;;20248:1531;19373:2422;19174:2621;;;;;:::o;1107:158:2:-;1170:7;1196:19;1205:1;554:4;1213:1;1196:8;:19::i;8176:110::-;8277:1;-1:-1:-1;;;;;8257:21:2;;;;8249:30;;;;;181:376:45;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;1463:535:2:-;1669:9;;;1800:19;;1793:27;1825:9;;1839;;;1836:16;;1822:31;1789:65;1779:121;;1884:1;1881;1874:12;1779:121;1963:19;;1463:535;-1:-1:-1;;1463:535:2:o;1564:526:67:-;1680:9;1928:1;-1:-1:-1;;1911:19:67;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:67;;2047:27;;1564:526::o;21883:1188:0:-;22069:30;22122:44;:9;22136:5;22143:10;22155;22122:13;:44::i;:::-;22209:19;;22271:20;;22111:55;;-1:-1:-1;22209:19:0;22306;;;;;22303:493;;22457:19;;22494:20;;22341:214;;:5;;22371:10;;22400:5;;22424:14;;22457:19;22532:5;22341:12;:214::i;:::-;-1:-1:-1;22687:19:0;;22724:20;;22571:213;;:5;;22601:10;;22630:5;;22654:14;;22687:19;22762:4;22571:12;:213::i;:::-;;22303:493;22807:27;;22880:100;:5;22905:10;22917;22929:5;22936:20;22958:21;22880:24;:100::i;:::-;22806:174;;-1:-1:-1;22806:174:0;-1:-1:-1;22990:73:0;:8;23006:14;22806:174;;22990:15;:73::i;:::-;22100:971;;;;21883:1188;;;;;;;:::o;2004:752:2:-;2208:9;;;2339:19;;2332:27;2364:9;;2378;;;2375:16;;2361:31;2328:65;2318:121;;2423:1;2420;2413:12;2318:121;2737:1;2723:11;2719:1;2716;2712:9;2708:27;2704:35;2699:1;2692:9;2685:17;2681:59;2676:64;;2004:752;;;;;:::o;40084:1050:0:-;40401:10;;;40352:12;40401:10;;;;;;;;;;40453:19;;-1:-1:-1;;;;;40453:19:0;40352:12;40513:46;40453:19;40544:14;40513:8;:46::i;:::-;-1:-1:-1;;;;;40582:24:0;;;;40612:25;;;;;40581:57;;;;;;-1:-1:-1;40483:76:0;;-1:-1:-1;40636:1:0;40652:25;40649:254;;40702:11;40696:17;;:4;:17;;;40693:162;;40728:25;;;:47;;;40790:26;;;:49;;;40693:162;40868:16;;;:23;;-1:-1:-1;;;;;40868:23:0;-1:-1:-1;;;40868:23:0;;;40649:254;40912:41;;-1:-1:-1;;;;;;40912:41:0;-1:-1:-1;;;;;40912:41:0;;;;;40984:5;:142;;41081:17;;41073:53;;41074:40;;;;;;;-1:-1:-1;;;41081:17:0;;;;41074:40;:::i;:::-;41073:51;:53::i;:::-;40984:142;;;41013:17;;41005:53;;41006:40;;;;;;;-1:-1:-1;;;41013:17:0;;;;41006:40;:::i;41005:53::-;40964:162;;-1:-1:-1;;;;;40964:162:0;;;-1:-1:-1;;;40964:162:0;;;;;;;-1:-1:-1;40084:1050:0;;;-1:-1:-1;;;;;;;;40084:1050:0:o;41987:1555::-;42340:15;;;;42250:27;42340:15;;;;;;;;;;;42386;;;;;;;;42250:27;;;;42340:15;;42386;42250:27;;;;42527:24;;;;42523:351;;-1:-1:-1;;42588:26:0;;;;42650:27;;;;42523:351;;;42751:26;;;;42729:48;;:19;:48;:::i;:::-;42708:69;;42836:5;:27;;;42813:20;:50;;;;:::i;:::-;42791:72;;42523:351;42922:26;42958:27;43013:9;42999:23;;:11;:23;;;42995:350;;;-1:-1:-1;;43059:26:0;;;;43121:27;;;;42995:350;;;43222:26;;;;43200:48;;:19;:48;:::i;:::-;43179:69;;43307:5;:27;;;43284:20;:50;;;;:::i;:::-;43262:72;;42995:350;43420:18;43377:40;43399:18;43377:19;:40;:::i;:::-;:61;;;;:::i;:::-;43355:83;-1:-1:-1;43516:19:0;43471:42;43494:19;43471:20;:42;:::i;:::-;:64;;;;:::i;:::-;43448:87;;42309:1233;;;;;;41987:1555;;;;;;;;;:::o;35245:1391::-;35420:24;;;;;;;;;;-1:-1:-1;;;;;35420:24:0;;;;;-1:-1:-1;;;35420:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;35490:19;;;;;;35486:261;;35551:1;35533:5;:15;;;-1:-1:-1;;;;;35533:19:0;;35525:34;;;;-1:-1:-1;;;35525:34:0;;30502:2:81;35525:34:0;;;30484:21:81;30541:1;30521:18;;;30514:29;-1:-1:-1;;;30559:18:81;;;30552:32;30601:18;;35525:34:0;30300:325:81;35525:34:0;-1:-1:-1;35633:15:0;;;;35486:261;;;35695:41;35704:5;:15;;;35721:14;35695:8;:41::i;:::-;35679:57;;35486:261;35795:19;35842:113;35932:5;:15;;;-1:-1:-1;;;;;35924:24:0;35950:4;35864:5;:30;;;35843:20;:51;;;;:::i;:::-;35842:81;:113;:81;:113::i;:::-;35795:174;;35979:19;36025:113;36115:5;:15;;;-1:-1:-1;;;;;36107:24:0;36133:4;36047:5;:30;;;36026:20;:51;;;;:::i;36025:113::-;35979:173;;36210:14;:19;;36228:1;36210:19;36206:55;;36231:14;;;:30;;-1:-1:-1;;;;;;36231:30:0;-1:-1:-1;;;;;36231:30:0;;;;;36206:55;36271:29;;;:52;;;36333:29;;;:52;;;-1:-1:-1;;;;;36399:15:0;;;;;:34;;;36432:1;36418:11;-1:-1:-1;;;;;36418:15:0;;36399:34;36395:235;;;36563:11;-1:-1:-1;;;;;36543:31:0;:4;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;36608:11;-1:-1:-1;;;;;36588:31:0;:4;:16;;;:31;;;;;;;:::i;:::-;;;;-1:-1:-1;;35410:1226:0;;;;35245:1391;;;;:::o;8755:107:2:-;8853:1;8834:20;;;;;;8826:29;;;;;14:131:81;-1:-1:-1;;;;;89:31:81;;79:42;;69:70;;135:1;132;125:12;150:118;236:5;229:13;222:21;215:5;212:32;202:60;;258:1;255;248:12;273:347;324:8;334:6;388:3;381:4;373:6;369:17;365:27;355:55;;406:1;403;396:12;355:55;-1:-1:-1;429:20:81;;472:18;461:30;;458:50;;;504:1;501;494:12;458:50;541:4;533:6;529:17;517:29;;593:3;586:4;577:6;569;565:19;561:30;558:39;555:59;;;610:1;607;600:12;555:59;273:347;;;;;:::o;625:816::-;727:6;735;743;751;759;767;820:3;808:9;799:7;795:23;791:33;788:53;;;837:1;834;827:12;788:53;876:9;863:23;895:31;920:5;895:31;:::i;:::-;945:5;-1:-1:-1;1002:2:81;987:18;;974:32;1015:30;974:32;1015:30;:::i;:::-;1064:7;-1:-1:-1;1118:2:81;1103:18;;1090:32;;-1:-1:-1;1169:2:81;1154:18;;1141:32;;-1:-1:-1;1224:3:81;1209:19;;1196:33;1252:18;1241:30;;1238:50;;;1284:1;1281;1274:12;1238:50;1323:58;1373:7;1364:6;1353:9;1349:22;1323:58;:::i;:::-;625:816;;;;-1:-1:-1;625:816:81;;-1:-1:-1;625:816:81;;1400:8;;625:816;-1:-1:-1;;;625:816:81:o;1699:159::-;1766:20;;1826:6;1815:18;;1805:29;;1795:57;;1848:1;1845;1838:12;1863:590;1942:6;1950;1958;1966;2019:3;2007:9;1998:7;1994:23;1990:33;1987:53;;;2036:1;2033;2026:12;1987:53;2059:28;2077:9;2059:28;:::i;:::-;2049:38;;2137:2;2126:9;2122:18;2109:32;2150:28;2172:5;2150:28;:::i;:::-;2197:5;-1:-1:-1;2254:2:81;2239:18;;2226:32;2267:30;2226:32;2267:30;:::i;:::-;2316:7;-1:-1:-1;2375:2:81;2360:18;;2347:32;2388:33;2347:32;2388:33;:::i;:::-;1863:590;;;;-1:-1:-1;1863:590:81;;-1:-1:-1;;1863:590:81:o;2640:188::-;2708:20;;-1:-1:-1;;;;;2757:46:81;;2747:57;;2737:85;;2818:1;2815;2808:12;2833:541;2926:6;2934;2942;2950;2958;3011:3;2999:9;2990:7;2986:23;2982:33;2979:53;;;3028:1;3025;3018:12;2979:53;3067:9;3054:23;3086:31;3111:5;3086:31;:::i;:::-;3136:5;-1:-1:-1;3160:37:81;3193:2;3178:18;;3160:37;:::i;:::-;3150:47;;3216:37;3249:2;3238:9;3234:18;3216:37;:::i;:::-;3206:47;;3272:38;3306:2;3295:9;3291:18;3272:38;:::i;:::-;3262:48;;3329:39;3363:3;3352:9;3348:19;3329:39;:::i;:::-;3319:49;;2833:541;;;;;;;;:::o;3601:529::-;3683:6;3691;3699;3707;3760:3;3748:9;3739:7;3735:23;3731:33;3728:53;;;3777:1;3774;3767:12;3728:53;3816:9;3803:23;3835:31;3860:5;3835:31;:::i;:::-;3885:5;-1:-1:-1;3909:37:81;3942:2;3927:18;;3909:37;:::i;:::-;3899:47;;3965:38;3999:2;3988:9;3984:18;3965:38;:::i;:::-;3955:48;;4055:2;4044:9;4040:18;4027:32;4068:30;4090:7;4068:30;:::i;4135:180::-;4194:6;4247:2;4235:9;4226:7;4222:23;4218:32;4215:52;;;4263:1;4260;4253:12;4215:52;-1:-1:-1;4286:23:81;;4135:180;-1:-1:-1;4135:180:81:o;5154:674::-;5247:6;5255;5263;5271;5279;5332:3;5320:9;5311:7;5307:23;5303:33;5300:53;;;5349:1;5346;5339:12;5300:53;5388:9;5375:23;5407:28;5429:5;5407:28;:::i;:::-;5454:5;-1:-1:-1;5506:2:81;5491:18;;5478:32;;-1:-1:-1;5557:2:81;5542:18;;5529:32;;-1:-1:-1;5612:2:81;5597:18;;5584:32;5639:18;5628:30;;5625:50;;;5671:1;5668;5661:12;5625:50;5710:58;5760:7;5751:6;5740:9;5736:22;5710:58;:::i;:::-;5154:674;;;;-1:-1:-1;5154:674:81;;-1:-1:-1;5787:8:81;;5684:84;5154:674;-1:-1:-1;;;5154:674:81:o;5833:454::-;5906:6;5914;5922;5975:2;5963:9;5954:7;5950:23;5946:32;5943:52;;;5991:1;5988;5981:12;5943:52;6030:9;6017:23;6049:31;6074:5;6049:31;:::i;:::-;6099:5;-1:-1:-1;6123:37:81;6156:2;6141:18;;6123:37;:::i;:::-;6113:47;;6212:2;6201:9;6197:18;6184:32;6225:30;6247:7;6225:30;:::i;:::-;6274:7;6264:17;;;5833:454;;;;;:::o;6292:385::-;6378:6;6386;6394;6402;6455:3;6443:9;6434:7;6430:23;6426:33;6423:53;;;6472:1;6469;6462:12;6423:53;-1:-1:-1;;6495:23:81;;;6565:2;6550:18;;6537:32;;-1:-1:-1;6616:2:81;6601:18;;6588:32;;6667:2;6652:18;6639:32;;-1:-1:-1;6292:385:81;-1:-1:-1;6292:385:81:o;7410:349::-;7477:6;7485;7538:2;7526:9;7517:7;7513:23;7509:32;7506:52;;;7554:1;7551;7544:12;7506:52;7577:29;7596:9;7577:29;:::i;:::-;7567:39;;7656:2;7645:9;7641:18;7628:32;7704:5;7700:2;7689:21;7682:5;7679:32;7669:60;;7725:1;7722;7715:12;7669:60;7748:5;7738:15;;;7410:349;;;;;:::o;7764:247::-;7823:6;7876:2;7864:9;7855:7;7851:23;7847:32;7844:52;;;7892:1;7889;7882:12;7844:52;7931:9;7918:23;7950:31;7975:5;7950:31;:::i;8016:628::-;8111:6;8119;8127;8135;8143;8196:3;8184:9;8175:7;8171:23;8167:33;8164:53;;;8213:1;8210;8203:12;8164:53;8236:28;8254:9;8236:28;:::i;:::-;8226:38;;8283:37;8316:2;8305:9;8301:18;8283:37;:::i;:::-;8273:47;;8339:38;8373:2;8362:9;8358:18;8339:38;:::i;:::-;8329:48;;8428:2;8417:9;8413:18;8400:32;8455:18;8447:6;8444:30;8441:50;;;8487:1;8484;8477:12;8649:313;8713:6;8721;8774:2;8762:9;8753:7;8749:23;8745:32;8742:52;;;8790:1;8787;8780:12;8742:52;8813:28;8831:9;8813:28;:::i;:::-;8803:38;;8891:2;8880:9;8876:18;8863:32;8904:28;8926:5;8904:28;:::i;10214:523::-;10296:6;10304;10312;10320;10373:3;10361:9;10352:7;10348:23;10344:33;10341:53;;;10390:1;10387;10380:12;10341:53;10413:28;10431:9;10413:28;:::i;:::-;10403:38;;10488:2;10477:9;10473:18;10460:32;10450:42;;10542:2;10531:9;10527:18;10514:32;10555:28;10577:5;10555:28;:::i;10742:315::-;10810:6;10818;10871:2;10859:9;10850:7;10846:23;10842:32;10839:52;;;10887:1;10884;10877:12;10839:52;10926:9;10913:23;10945:31;10970:5;10945:31;:::i;:::-;10995:5;11047:2;11032:18;;;;11019:32;;-1:-1:-1;;;10742:315:81:o;11254:316::-;11331:6;11339;11347;11400:2;11388:9;11379:7;11375:23;11371:32;11368:52;;;11416:1;11413;11406:12;11368:52;-1:-1:-1;;11439:23:81;;;11509:2;11494:18;;11481:32;;-1:-1:-1;11560:2:81;11545:18;;;11532:32;;11254:316;-1:-1:-1;11254:316:81:o;11575:466::-;11659:6;11667;11675;11683;11736:3;11724:9;11715:7;11711:23;11707:33;11704:53;;;11753:1;11750;11743:12;11704:53;11792:9;11779:23;11811:31;11836:5;11811:31;:::i;:::-;11861:5;-1:-1:-1;11885:37:81;11918:2;11903:18;;11885:37;:::i;:::-;11875:47;;11941:37;11974:2;11963:9;11959:18;11941:37;:::i;:::-;11931:47;;11997:38;12031:2;12020:9;12016:18;11997:38;:::i;:::-;11987:48;;11575:466;;;;;;;:::o;12046:184::-;12104:6;12157:2;12145:9;12136:7;12132:23;12128:32;12125:52;;;12173:1;12170;12163:12;12125:52;12196:28;12214:9;12196:28;:::i;12443:454::-;12516:6;12524;12532;12585:2;12573:9;12564:7;12560:23;12556:32;12553:52;;;12601:1;12598;12591:12;12553:52;12624:28;12642:9;12624:28;:::i;:::-;12614:38;;12702:2;12691:9;12687:18;12674:32;12715:28;12737:5;12715:28;:::i;:::-;12762:5;-1:-1:-1;12819:2:81;12804:18;;12791:32;12832:33;12791:32;12832:33;:::i;12902:309::-;12967:6;12975;13028:2;13016:9;13007:7;13003:23;12999:32;12996:52;;;13044:1;13041;13034:12;12996:52;13080:9;13067:23;13057:33;;13140:2;13129:9;13125:18;13112:32;13153:28;13175:5;13153:28;:::i;13216:764::-;13320:6;13328;13336;13344;13352;13360;13413:3;13401:9;13392:7;13388:23;13384:33;13381:53;;;13430:1;13427;13420:12;13381:53;13469:9;13456:23;13488:31;13513:5;13488:31;:::i;:::-;13538:5;-1:-1:-1;13562:37:81;13595:2;13580:18;;13562:37;:::i;:::-;13552:47;;13618:37;13651:2;13640:9;13636:18;13618:37;:::i;:::-;13608:47;;13674:38;13708:2;13697:9;13693:18;13674:38;:::i;:::-;13664:48;;13763:3;13752:9;13748:19;13735:33;13791:18;13783:6;13780:30;13777:50;;;13823:1;13820;13813:12;13985:381;14058:6;14066;14074;14127:2;14115:9;14106:7;14102:23;14098:32;14095:52;;;14143:1;14140;14133:12;14095:52;14166:28;14184:9;14166:28;:::i;:::-;14156:38;;14241:2;14230:9;14226:18;14213:32;14203:42;;14295:2;14284:9;14280:18;14267:32;14308:28;14330:5;14308:28;:::i;15505:450::-;15579:6;15587;15595;15648:2;15636:9;15627:7;15623:23;15619:32;15616:52;;;15664:1;15661;15654:12;15616:52;15703:9;15690:23;15722:31;15747:5;15722:31;:::i;16348:332::-;16550:2;16532:21;;;16589:1;16569:18;;;16562:29;-1:-1:-1;;;16622:2:81;16607:18;;16600:39;16671:2;16656:18;;16348:332::o;16685:335::-;16887:2;16869:21;;;16926:2;16906:18;;;16899:30;-1:-1:-1;;;16960:2:81;16945:18;;16938:41;17011:2;16996:18;;16685:335::o;17025:127::-;17086:10;17081:3;17077:20;17074:1;17067:31;17117:4;17114:1;17107:15;17141:4;17138:1;17131:15;17157:125;17222:9;;;17243:10;;;17240:36;;;17256:18;;:::i;17287:171::-;17355:6;17394:10;;;17382;;;17378:27;;17417:12;;;17414:38;;;17432:18;;:::i;:::-;17414:38;17287:171;;;;:::o;17463:168::-;17530:6;17556:10;;;17568;;;17552:27;;17591:11;;;17588:37;;;17605:18;;:::i;17636:197::-;-1:-1:-1;;;;;17758:10:81;;;17770;;;17754:27;;17793:11;;;17790:37;;;17807:18;;:::i;18502:368::-;18599:6;18607;18615;18623;18676:3;18664:9;18655:7;18651:23;18647:33;18644:53;;;18693:1;18690;18683:12;18644:53;-1:-1:-1;;18716:16:81;;18772:2;18757:18;;18751:25;18816:2;18801:18;;18795:25;18860:2;18845:18;;;18839:25;18716:16;;18751:25;;-1:-1:-1;18839:25:81;;-1:-1:-1;18502:368:81;-1:-1:-1;18502:368:81:o;18875:136::-;18910:3;-1:-1:-1;;;18931:22:81;;18928:48;;18956:18;;:::i;:::-;-1:-1:-1;18996:1:81;18992:13;;18875:136::o;19016:200::-;19082:9;;;19055:4;19110:9;;19138:10;;19150:12;;;19134:29;19173:12;;;19165:21;;19131:56;19128:82;;;19190:18;;:::i;19221:216::-;19285:9;;;19313:11;;;19260:3;19343:9;;19371:10;;19367:19;;19396:10;;19388:19;;19364:44;19361:70;;;19411:18;;:::i;:::-;19361:70;;19221:216;;;;:::o;19442:245::-;19540:2;19510:17;;;19529;;;;19506:41;-1:-1:-1;;;;;19562:44:81;;-1:-1:-1;;19608:49:81;;19559:99;19556:125;;;19661:18;;:::i;19692:213::-;19727:3;19775:5;19771:2;19760:21;-1:-1:-1;;;;;19805:39:81;19796:7;19793:52;19790:78;;19848:18;;:::i;:::-;19888:1;19884:15;;19692:213;-1:-1:-1;;19692:213:81:o;19910:274::-;-1:-1:-1;;;;;20102:32:81;;;;20084:51;;20166:2;20151:18;;20144:34;20072:2;20057:18;;19910:274::o;20189:245::-;20256:6;20309:2;20297:9;20288:7;20284:23;20280:32;20277:52;;;20325:1;20322;20315:12;20277:52;20357:9;20351:16;20376:28;20398:5;20376:28;:::i;20439:184::-;20509:6;20562:2;20550:9;20541:7;20537:23;20533:32;20530:52;;;20578:1;20575;20568:12;20530:52;-1:-1:-1;20601:16:81;;20439:184;-1:-1:-1;20439:184:81:o;20628:128::-;20695:9;;;20716:11;;;20713:37;;;20730:18;;:::i;21659:245::-;21738:6;21746;21799:2;21787:9;21778:7;21774:23;21770:32;21767:52;;;21815:1;21812;21805:12;21767:52;-1:-1:-1;;21838:16:81;;21894:2;21879:18;;;21873:25;21838:16;;21873:25;;-1:-1:-1;21659:245:81:o;22596:127::-;22657:10;22652:3;22648:20;22645:1;22638:31;22688:4;22685:1;22678:15;22712:4;22709:1;22702:15;22728:120;22768:1;22794;22784:35;;22799:18;;:::i;:::-;-1:-1:-1;22833:9:81;;22728:120::o;22853:459::-;23038:6;23027:9;23020:25;23081:2;23076;23065:9;23061:18;23054:30;23120:6;23115:2;23104:9;23100:18;23093:34;23177:6;23169;23164:2;23153:9;23149:18;23136:48;23233:1;23204:22;;;23228:2;23200:31;;;23193:42;;;;23296:2;23275:15;;;-1:-1:-1;;23271:29:81;23256:45;23252:54;;22853:459;-1:-1:-1;;22853:459:81:o;24885:168::-;24958:9;;;24989;;25006:15;;;25000:22;;24986:37;24976:71;;25027:18;;:::i;25058:200::-;-1:-1:-1;;;;;25194:10:81;;;25182;;;25178:27;;25217:12;;;25214:38;;;25232:18;;:::i;26271:375::-;-1:-1:-1;;;;;26529:15:81;;;26511:34;;26581:15;;;;26576:2;26561:18;;26554:43;26628:2;26613:18;;26606:34;;;;26461:2;26446:18;;26271:375::o;26651:331::-;26853:2;26835:21;;;26892:1;26872:18;;;26865:29;-1:-1:-1;;;26925:2:81;26910:18;;26903:38;26973:2;26958:18;;26651:331::o;26987:332::-;27189:2;27171:21;;;27228:1;27208:18;;;27201:29;-1:-1:-1;;;27261:2:81;27246:18;;27239:39;27310:2;27295:18;;26987:332::o;27324:112::-;27356:1;27382;27372:35;;27387:18;;:::i;:::-;-1:-1:-1;27421:9:81;;27324:112::o;28189:423::-;28231:3;28269:5;28263:12;28296:6;28291:3;28284:19;28321:1;28331:162;28345:6;28342:1;28339:13;28331:162;;;28407:4;28463:13;;;28459:22;;28453:29;28435:11;;;28431:20;;28424:59;28360:12;28331:162;;;28335:3;28538:1;28531:4;28522:6;28517:3;28513:16;28509:27;28502:38;28601:4;28594:2;28590:7;28585:2;28577:6;28573:15;28569:29;28564:3;28560:39;28556:50;28549:57;;;28189:423;;;;:::o;28617:220::-;28766:2;28755:9;28748:21;28729:4;28786:45;28827:2;28816:9;28812:18;28804:6;28786:45;:::i;28842:127::-;28903:10;28898:3;28894:20;28891:1;28884:31;28934:4;28931:1;28924:15;28958:4;28955:1;28948:15;28974:291;29151:2;29140:9;29133:21;29114:4;29171:45;29212:2;29201:9;29197:18;29189:6;29171:45;:::i;:::-;29163:53;;29252:6;29247:2;29236:9;29232:18;29225:34;28974:291;;;;;:::o;29270:362::-;29475:2;29464:9;29457:21;29438:4;29495:45;29536:2;29525:9;29521:18;29513:6;29495:45;:::i;:::-;29571:2;29556:18;;29549:34;;;;-1:-1:-1;29614:2:81;29599:18;29592:34;29487:53;29270:362;-1:-1:-1;29270:362:81:o;29637:226::-;29676:3;-1:-1:-1;;;;;29773:2:81;29766:5;29762:14;29800:2;29791:7;29788:15;29785:41;;29806:18;;:::i;:::-;29855:1;29842:15;;29637:226;-1:-1:-1;;;29637:226:81:o",
    "linkReferences": {
      "contracts/bonds/GBC.sol": {
        "LinearCurve": [
          {
            "start": 4183,
            "length": 20
          },
          {
            "start": 6759,
            "length": 20
          },
          {
            "start": 9072,
            "length": 20
          },
          {
            "start": 11953,
            "length": 20
          },
          {
            "start": 15511,
            "length": 20
          }
        ]
      }
    },
    "immutableReferences": {
      "108": [
        {
          "start": 2223,
          "length": 32
        }
      ],
      "110": [
        {
          "start": 2989,
          "length": 32
        },
        {
          "start": 4122,
          "length": 32
        }
      ],
      "115": [
        {
          "start": 2795,
          "length": 32
        }
      ],
      "117": [
        {
          "start": 2950,
          "length": 32
        },
        {
          "start": 6514,
          "length": 32
        },
        {
          "start": 7300,
          "length": 32
        }
      ],
      "119": [
        {
          "start": 2834,
          "length": 32
        },
        {
          "start": 6476,
          "length": 32
        },
        {
          "start": 7262,
          "length": 32
        }
      ],
      "121": [
        {
          "start": 2892,
          "length": 32
        }
      ],
      "4033": [
        {
          "start": 7605,
          "length": 32
        },
        {
          "start": 8005,
          "length": 32
        },
        {
          "start": 10526,
          "length": 32
        },
        {
          "start": 10653,
          "length": 32
        }
      ],
      "5886": [
        {
          "start": 3143,
          "length": 32
        },
        {
          "start": 8926,
          "length": 32
        },
        {
          "start": 11776,
          "length": 32
        },
        {
          "start": 12528,
          "length": 32
        },
        {
          "start": 13097,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BaseToken()": "90f81702",
    "PRECISION()": "aaf5eb68",
    "ROUNDLIMIT()": "159054ea",
    "TradeToken()": "df99f8bf",
    "a_initial()": "6e2f7ad3",
    "addDelta(uint128,int128)": "402d44fb",
    "areaBetweenCurveAndMax(uint256)": "14e2b929",
    "b()": "4df7e3d0",
    "b_initial()": "558bdb29",
    "baseBal()": "08ef2b4c",
    "baseGivenLiquidity(uint256,uint256,uint256)": "f9734a24",
    "baseToken()": "c55dae63",
    "cBal()": "48af7132",
    "calculateInitCurveParams(uint256,uint256,uint256)": "75e2d946",
    "calculateInitCurveParamsPool(uint256,uint256,uint256,uint256)": "34327d8b",
    "claimFilledOrder(address,uint16,bool)": "42b6c9fb",
    "claimPartiallyFilledOrder(address,uint16,bool)": "32530d7f",
    "collect(address,uint16,uint16,uint128,uint128)": "098bcc56",
    "controller()": "f77c4791",
    "discount_cap()": "7063b06c",
    "discountedReserves()": "1816eb13",
    "entry()": "67f239dd",
    "factory()": "c45a0155",
    "fee()": "ddca3f43",
    "feeGrowthGlobalBase()": "659a544a",
    "feeGrowthGlobalTrade()": "1d2637ab",
    "flush(address,uint256)": "96fd1c42",
    "getCurPrice()": "11e715d6",
    "getLiq(address,uint16,bool)": "9b608089",
    "getNextPriceLimit(uint16,uint256,bool)": "b501c284",
    "getNumCross(uint16,bool)": "e37699c9",
    "getOneTimeLiquidity(uint16,bool)": "4a3ca717",
    "getTraderPosition()": "ba52fe61",
    "liquidity()": "1a686502",
    "liquidityGivenBase(uint256,uint256,uint256)": "e7c3614f",
    "liquidityGivenTrade(uint256,uint256,uint256)": "b04a69fd",
    "lock()": "f83d08ba",
    "makerClaimClose(uint16,bool,address)": "a1217e7d",
    "makerClaimOpen(uint16,bool,address)": "f0bb81b3",
    "makerClose(uint16,uint256,bool,address)": "e7ca189a",
    "makerOpen(uint16,uint256,bool,address)": "68087cc3",
    "makerPartiallyClaim(uint16,bool,bool,address)": "08216712",
    "makerReduceClose(uint16,uint256,bool,address)": "9c9d7d3f",
    "makerReduceOpen(uint16,uint256,bool,address)": "957343f0",
    "maxPrice()": "e38d6b5c",
    "owner()": "8da5cb5b",
    "placeLimitOrder(address,uint16,uint128,bool)": "2130ce0d",
    "pointToPrice(uint16)": "8ce26999",
    "positionIsFilled(address,uint16,bool)": "6ed75596",
    "positions(bytes32)": "514ea4bf",
    "precision()": "d3b5dc3b",
    "priceDelta()": "5bfa896a",
    "priceToPoint(uint256)": "2353b18e",
    "provide(address,uint16,uint16,uint128,bytes)": "af0d37bc",
    "provideLiquidity(uint16,uint16,uint128,bytes)": "4970aa88",
    "reduceLimitOrder(address,uint16,uint128,bool)": "1376ff3e",
    "remove(address,uint16,uint16,uint128)": "7f1d9ae6",
    "resetLiq()": "8d01450f",
    "s_tradeToken()": "10f22221",
    "setEntry(address)": "42bc5292",
    "slot0()": "3850c7bd",
    "takerClose(bool,int256,uint256,bytes)": "556769ba",
    "takerOpen(bool,int256,uint256,bytes)": "244d59cb",
    "tickSpacing()": "d0c93a7c",
    "ticks(uint16)": "b9033a39",
    "trade(address,bool,int256,uint256,bytes)": "004b2045",
    "tradeGivenLiquidity(uint256,uint256,uint256)": "80c0c3e7",
    "tradeToken()": "d83678ac",
    "trustedBurn(address,uint256,bool)": "c93ac3ed",
    "trustedDiscountedMint(address,uint256)": "681504cd",
    "withdrawLiquidity(uint16,uint16,uint128,bytes)": "578c8579",
    "xMax(uint256,uint256,uint256)": "b29d9b6e",
    "xMaxRoundUp(uint256,uint256,uint256)": "9314b03f",
    "yInt(uint256,bool)": "a74d74d4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trade\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"s_trade\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_entry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BaseToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUNDLIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TradeToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"a_initial\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"x\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"y\",\"type\":\"int128\"}],\"name\":\"addDelta\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"areaBetweenCurveAndMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"b_initial\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"p2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"p1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"L\",\"type\":\"uint256\"}],\"name\":\"baseGivenLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"P\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"I\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sigma\",\"type\":\"uint256\"}],\"name\":\"calculateInitCurveParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"saleAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sigma\",\"type\":\"uint256\"}],\"name\":\"calculateInitCurveParamsPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"managementFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"claimFilledOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"claimPartiallyFilledOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"tickLower\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tickUpper\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discount_cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountedReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobalBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobalTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flushTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"getLiq\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"pDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moveUp\",\"type\":\"bool\"}],\"name\":\"getNextPriceLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"moveUp\",\"type\":\"bool\"}],\"name\":\"getNumCross\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"moveUp\",\"type\":\"bool\"}],\"name\":\"getOneTimeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTraderPosition\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"p2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"p1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B\",\"type\":\"uint256\"}],\"name\":\"liquidityGivenBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"p2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"p1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"}],\"name\":\"liquidityGivenTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerClaimClose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerClaimOpen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerClose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toEscrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"crossId\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerOpen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toEscrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"crossId\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerPartiallyClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerReduceClose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makerReduceOpen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"placeLimitOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToEscrow\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"numCross\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"}],\"name\":\"pointToPrice\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"positionIsFilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"bidCrossId\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"askCrossId\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"askLiq\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bidLiq\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensOwed0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensOwed1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDelta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"priceToPoint\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"pointLower\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"pointUpper\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"provide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"pointLower\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"pointUpper\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isAsk\",\"type\":\"bool\"}],\"name\":\"reduceLimitOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToReturn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"pointLower\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"pointUpper\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"remove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetLiq\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_tradeToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entry\",\"type\":\"address\"}],\"name\":\"setEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"curPrice\",\"type\":\"uint160\"},{\"internalType\":\"uint16\",\"name\":\"point\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"amortized\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"modifyLiqPoint\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountIn\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"priceLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"takerClose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolamountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolamountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountIn\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"priceLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"takerOpen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolamountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolamountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutsideBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutsideTrade\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"askLiquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bidLiquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"askNumCross\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"bidNumCross\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"moveUp\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"priceLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"trade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"p2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"p1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"L\",\"type\":\"uint256\"}],\"name\":\"tradeGivenLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"long\",\"type\":\"bool\"}],\"name\":\"trustedBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"trustedDiscountedMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"pointLower\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"pointUpper\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdrawLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"curPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"xMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"curPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"xMaxRoundUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"curPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moveUp\",\"type\":\"bool\"}],\"name\":\"yInt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addDelta(uint128,int128)\":{\"params\":{\"x\":\"The liquidity before change\",\"y\":\"The delta by which liquidity should be changed\"},\"returns\":{\"z\":\"The liquidity delta\"}},\"calculateInitCurveParams(uint256,uint256,uint256)\":{\"params\":{\"sigma\":\"is the proportion of P that is going to be bought at a discount  \"}},\"makerOpen(uint16,uint256,bool,address)\":{\"params\":{\"amount\":\"is in base if long, trade if in short  \"}},\"takerClose(bool,int256,uint256,bytes)\":{\"params\":{\"amountIn\":\"is trade if long, ALSO trade if short, since getting rid of s_trade \"}},\"takerOpen(bool,int256,uint256,bytes)\":{\"params\":{\"amountIn\":\"is base if long, trade if short\",\"priceLimit\":\"is slippage tolerance\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDelta(uint128,int128)\":{\"notice\":\"Add a signed liquidity delta to liquidity and revert if it overflows or underflows\"},\"areaBetweenCurveAndMax(uint256)\":{\"notice\":\"computes area between the curve and max price for given storage parameters\"},\"calculateInitCurveParams(uint256,uint256,uint256)\":{\"notice\":\"calculate and store initial curve params that takes into account validator rewards(from discounted zcb). For validator rewards, just skew up the initial price These params are used for utilizer bond issuance, but a is set to 0 after issuance phase \"},\"calculateInitCurveParamsPool(uint256,uint256,uint256,uint256)\":{\"notice\":\"calculates initparams for pool based instruments  param endPrice is the inception Price of longZCB, or its price when there is no discount\"},\"claimFilledOrder(address,uint16,bool)\":{\"notice\":\"Need to check if the ask/bids were actually filled, which is equivalent to the condition that numCross > crossId, because numCross only increases when crossUp  or crossDown \"},\"claimPartiallyFilledOrder(address,uint16,bool)\":{\"notice\":\"called when maker wants to claim when the the price is at the  point he submitted the order\"},\"makerClose(uint16,uint256,bool,address)\":{\"notice\":\"amount is trade if long, but ALSO trade if short(since trade quantity also coincides with shortTrade quantity )\"},\"makerOpen(uint16,uint256,bool,address)\":{\"notice\":\"provides oneTimeliquidity in the range (point,point+1)\"},\"makerReduceClose(uint16,uint256,bool,address)\":{\"notice\":\"amount is in trade if long, ALSO trade if short \"},\"makerReduceOpen(uint16,uint256,bool,address)\":{\"notice\":\"amount is in base if long, trade if short \"},\"priceToPoint(uint256)\":{\"notice\":\"will round down to nearest integer \"},\"provide(address,uint16,uint16,uint128,bytes)\":{\"notice\":\"provides liquidity in range or adds limit order if pointUpper = pointLower + 1\"},\"resetLiq()\":{\"notice\":\"resets AMM liquidity to 0 and make it ready to be liq provisioned  by anyone \"},\"takerOpen(bool,int256,uint256,bytes)\":{\"notice\":\"Long up the curve, or short down the curve \"},\"trade(address,bool,int256,uint256,bytes)\":{\"notice\":\"param +amountSpecified is in base if moveUp, else is in trade (+ if input asset, - if output asset) -amountSpecified is in trade if moveUp, else is in base  returns amountIn if moveUp, cash, else token returns amountOut if moveUp, token, else cash \"},\"trustedDiscountedMint(address,uint256)\":{\"notice\":\"mints new zcbs \"},\"yInt(uint256,bool)\":{\"notice\":\"get the lower bound of the given price range, or the y intercept of the curve of the current point\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bonds/synthetic.sol\":\"SyntheticZCBPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@prb/math/=lib/prb-math/src/\",\":@prb/test/=lib/prb-math/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-math/lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=lib/prb-math/src/\"]},\"sources\":{\"contracts/bonds/GBC.sol\":{\"keccak256\":\"0xd60ae507ab0f7f25d88a6973e43c8e33c42209465e603e746b8b7a69f364b840\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0583c40221479c5c3d9d926cd141e61f50064a548085593a9cf245a70cbf8982\",\"dweb:/ipfs/QmSqGEhRm6y9woa4G3BFxKynjUzWUVLFvEJAPyZjxArQpG\"]},\"contracts/bonds/boundedDerivatives.sol\":{\"keccak256\":\"0x686e27932ae544f3cab022c28a33e727dd0ce758d745945570a48faf683fe367\",\"urls\":[\"bzz-raw://6ffdd5de15be22c55ae8dd2809d40bf9dae6367dbb1ada49a20338e21121cae0\",\"dweb:/ipfs/QmNqDVaEwPZfQpFXdfZFJ4kYT6AGSLEiLC8B6MAkDqReYp\"]},\"contracts/bonds/libraries.sol\":{\"keccak256\":\"0x6f4b41b0a3a677144ec92ae040f756a7af61ffe54f497f92d7f20a729b3cb091\",\"urls\":[\"bzz-raw://b23494b2834b411d3e09f3f0e776d8c74b6d4e0c312bc535af4aeaa3e5339e7e\",\"dweb:/ipfs/QmeGHY6QVuRBQCmQXqxWwem4xjm7m7UK5wA85D8WrJujVV\"]},\"contracts/bonds/synthetic.sol\":{\"keccak256\":\"0x4807e695ca210eaa0822edd8843a0e1e64f29ea32a98e1f76be98c3d5375f37f\",\"urls\":[\"bzz-raw://071afcf4ff9b6888ec0030e55f7148035e11c24da6e7f7704812a21926af2163\",\"dweb:/ipfs/QmbsxFpoyU1d2LuZWx7dmrTqSnCMCHnFPNLaBvA2TjjEnb\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "trade",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "s_trade",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_entry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_controller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BaseToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROUNDLIMIT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TradeToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "a_initial",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "x",
              "type": "uint128"
            },
            {
              "internalType": "int128",
              "name": "y",
              "type": "int128"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "addDelta",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "areaBetweenCurveAndMax",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "b",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "b_initial",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseBal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "p2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "p1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "L",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "baseGivenLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cBal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "P",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "I",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sigma",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "calculateInitCurveParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "saleAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sigma",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "calculateInitCurveParamsPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "managementFee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFilledOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimPartiallyFilledOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tradeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "tickLower",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "tickUpper",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount0Requested",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount1Requested",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collect",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "controller",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "discount_cap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "discountedReserves",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fee",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeGrowthGlobalBase",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeGrowthGlobalTrade",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flushTo",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flush"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLiq",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "pDelta",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moveUp",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getNextPriceLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "moveUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumCross",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "moveUp",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOneTimeLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTraderPosition"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidity",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "p2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "p1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "B",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "liquidityGivenBase",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "p2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "p1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "T",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "liquidityGivenTrade",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lock"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerClaimClose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerClaimOpen",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerClose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "toEscrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "crossId",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerOpen",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "toEscrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "crossId",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerPartiallyClaim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tradeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerReduceClose"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerReduceOpen"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "placeLimitOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountToEscrow",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "numCross",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "pointToPrice",
          "outputs": [
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "positionIsFilled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "positions",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "bidCrossId",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "askCrossId",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "askLiq",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "bidLiq",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthInside0LastX128",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthInside1LastX128",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensOwed0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensOwed1",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "precision",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "priceDelta",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "priceToPoint",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "pointLower",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "pointUpper",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "provide",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "pointLower",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "pointUpper",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "provideLiquidity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isAsk",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reduceLimitOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountToReturn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "pointLower",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "pointUpper",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetLiq"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "s_tradeToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_entry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntry"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slot0",
          "outputs": [
            {
              "internalType": "uint160",
              "name": "curPrice",
              "type": "uint160"
            },
            {
              "internalType": "uint16",
              "name": "point",
              "type": "uint16"
            },
            {
              "internalType": "uint8",
              "name": "feeProtocol",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "unlocked",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "amortized",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "modifyLiqPoint",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountIn",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "priceLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "takerClose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "poolamountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "poolamountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isLong",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountIn",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "priceLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "takerOpen",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "poolamountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "poolamountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tickSpacing",
          "outputs": [
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ticks",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "liquidityGross",
              "type": "uint128"
            },
            {
              "internalType": "int128",
              "name": "liquidityNet",
              "type": "int128"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthOutsideBase",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthOutsideTrade",
              "type": "uint256"
            },
            {
              "internalType": "int56",
              "name": "tickCumulativeOutside",
              "type": "int56"
            },
            {
              "internalType": "uint160",
              "name": "secondsPerLiquidityOutsideX128",
              "type": "uint160"
            },
            {
              "internalType": "uint32",
              "name": "secondsOutside",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "askLiquidityGross",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "bidLiquidityGross",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "askNumCross",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "bidNumCross",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "moveUp",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "priceLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "trade",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "p2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "p1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "L",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "tradeGivenLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tradeToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "long",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "trustedBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "trustedDiscountedMint"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "pointLower",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "pointUpper",
              "type": "uint16"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawLiquidity"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "curPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "b",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "xMax",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "curPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "b",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "a",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "xMaxRoundUp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "curPrice",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moveUp",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "yInt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addDelta(uint128,int128)": {
            "params": {
              "x": "The liquidity before change",
              "y": "The delta by which liquidity should be changed"
            },
            "returns": {
              "z": "The liquidity delta"
            }
          },
          "calculateInitCurveParams(uint256,uint256,uint256)": {
            "params": {
              "sigma": "is the proportion of P that is going to be bought at a discount  "
            }
          },
          "makerOpen(uint16,uint256,bool,address)": {
            "params": {
              "amount": "is in base if long, trade if in short  "
            }
          },
          "takerClose(bool,int256,uint256,bytes)": {
            "params": {
              "amountIn": "is trade if long, ALSO trade if short, since getting rid of s_trade "
            }
          },
          "takerOpen(bool,int256,uint256,bytes)": {
            "params": {
              "amountIn": "is base if long, trade if short",
              "priceLimit": "is slippage tolerance"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addDelta(uint128,int128)": {
            "notice": "Add a signed liquidity delta to liquidity and revert if it overflows or underflows"
          },
          "areaBetweenCurveAndMax(uint256)": {
            "notice": "computes area between the curve and max price for given storage parameters"
          },
          "calculateInitCurveParams(uint256,uint256,uint256)": {
            "notice": "calculate and store initial curve params that takes into account validator rewards(from discounted zcb). For validator rewards, just skew up the initial price These params are used for utilizer bond issuance, but a is set to 0 after issuance phase "
          },
          "calculateInitCurveParamsPool(uint256,uint256,uint256,uint256)": {
            "notice": "calculates initparams for pool based instruments  param endPrice is the inception Price of longZCB, or its price when there is no discount"
          },
          "claimFilledOrder(address,uint16,bool)": {
            "notice": "Need to check if the ask/bids were actually filled, which is equivalent to the condition that numCross > crossId, because numCross only increases when crossUp  or crossDown "
          },
          "claimPartiallyFilledOrder(address,uint16,bool)": {
            "notice": "called when maker wants to claim when the the price is at the  point he submitted the order"
          },
          "makerClose(uint16,uint256,bool,address)": {
            "notice": "amount is trade if long, but ALSO trade if short(since trade quantity also coincides with shortTrade quantity )"
          },
          "makerOpen(uint16,uint256,bool,address)": {
            "notice": "provides oneTimeliquidity in the range (point,point+1)"
          },
          "makerReduceClose(uint16,uint256,bool,address)": {
            "notice": "amount is in trade if long, ALSO trade if short "
          },
          "makerReduceOpen(uint16,uint256,bool,address)": {
            "notice": "amount is in base if long, trade if short "
          },
          "priceToPoint(uint256)": {
            "notice": "will round down to nearest integer "
          },
          "provide(address,uint16,uint16,uint128,bytes)": {
            "notice": "provides liquidity in range or adds limit order if pointUpper = pointLower + 1"
          },
          "resetLiq()": {
            "notice": "resets AMM liquidity to 0 and make it ready to be liq provisioned  by anyone "
          },
          "takerOpen(bool,int256,uint256,bytes)": {
            "notice": "Long up the curve, or short down the curve "
          },
          "trade(address,bool,int256,uint256,bytes)": {
            "notice": "param +amountSpecified is in base if moveUp, else is in trade (+ if input asset, - if output asset) -amountSpecified is in trade if moveUp, else is in base  returns amountIn if moveUp, cash, else token returns amountOut if moveUp, token, else cash "
          },
          "trustedDiscountedMint(address,uint256)": {
            "notice": "mints new zcbs "
          },
          "yInt(uint256,bool)": {
            "notice": "get the lower bound of the given price range, or the y intercept of the curve of the current point"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/math/=lib/prb-math/src/",
        ":@prb/test/=lib/prb-math/lib/prb-test/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":prb-math/=lib/prb-math/src/",
        ":prb-test/=lib/prb-math/lib/prb-test/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=lib/prb-math/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/bonds/synthetic.sol": "SyntheticZCBPool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/bonds/GBC.sol": {
        "keccak256": "0xd60ae507ab0f7f25d88a6973e43c8e33c42209465e603e746b8b7a69f364b840",
        "urls": [
          "bzz-raw://0583c40221479c5c3d9d926cd141e61f50064a548085593a9cf245a70cbf8982",
          "dweb:/ipfs/QmSqGEhRm6y9woa4G3BFxKynjUzWUVLFvEJAPyZjxArQpG"
        ],
        "license": "UNLICENSED"
      },
      "contracts/bonds/boundedDerivatives.sol": {
        "keccak256": "0x686e27932ae544f3cab022c28a33e727dd0ce758d745945570a48faf683fe367",
        "urls": [
          "bzz-raw://6ffdd5de15be22c55ae8dd2809d40bf9dae6367dbb1ada49a20338e21121cae0",
          "dweb:/ipfs/QmNqDVaEwPZfQpFXdfZFJ4kYT6AGSLEiLC8B6MAkDqReYp"
        ],
        "license": null
      },
      "contracts/bonds/libraries.sol": {
        "keccak256": "0x6f4b41b0a3a677144ec92ae040f756a7af61ffe54f497f92d7f20a729b3cb091",
        "urls": [
          "bzz-raw://b23494b2834b411d3e09f3f0e776d8c74b6d4e0c312bc535af4aeaa3e5339e7e",
          "dweb:/ipfs/QmeGHY6QVuRBQCmQXqxWwem4xjm7m7UK5wA85D8WrJujVV"
        ],
        "license": null
      },
      "contracts/bonds/synthetic.sol": {
        "keccak256": "0x4807e695ca210eaa0822edd8843a0e1e64f29ea32a98e1f76be98c3d5375f37f",
        "urls": [
          "bzz-raw://071afcf4ff9b6888ec0030e55f7148035e11c24da6e7f7704812a21926af2163",
          "dweb:/ipfs/QmbsxFpoyU1d2LuZWx7dmrTqSnCMCHnFPNLaBvA2TjjEnb"
        ],
        "license": null
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/bonds/synthetic.sol",
    "id": 6270,
    "exportedSymbols": {
      "BoundedDerivativesPool": [
        5119
      ],
      "ERC20": [
        5745
      ],
      "FixedPointMathLib": [
        57590
      ],
      "LinearCurve": [
        2898
      ],
      "SyntheticZCBPool": [
        6269
      ],
      "SyntheticZCBPoolFactory": [
        5869
      ],
      "ZCBFactory": [
        5783
      ],
      "console": [
        43832
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:5856:3",
    "nodes": [
      {
        "id": 5747,
        "nodeType": "PragmaDirective",
        "src": "0:23:3",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 5749,
        "nodeType": "ImportDirective",
        "src": "24:39:3",
        "absolutePath": "contracts/bonds/GBC.sol",
        "file": "./GBC.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6270,
        "sourceUnit": 4003,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5748,
              "name": "LinearCurve",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2898,
              "src": "33:11:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5751,
        "nodeType": "ImportDirective",
        "src": "65:64:3",
        "absolutePath": "contracts/bonds/boundedDerivatives.sol",
        "file": "./boundedDerivatives.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6270,
        "sourceUnit": 5128,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5750,
              "name": "BoundedDerivativesPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5119,
              "src": "73:22:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5753,
        "nodeType": "ImportDirective",
        "src": "131:70:3",
        "absolutePath": "lib/solmate/src/utils/FixedPointMathLib.sol",
        "file": "solmate/utils/FixedPointMathLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6270,
        "sourceUnit": 57591,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5752,
              "name": "FixedPointMathLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57590,
              "src": "139:17:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5755,
        "nodeType": "ImportDirective",
        "src": "202:38:3",
        "absolutePath": "contracts/bonds/libraries.sol",
        "file": "./libraries.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6270,
        "sourceUnit": 5746,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5754,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5745,
              "src": "210:5:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5756,
        "nodeType": "ImportDirective",
        "src": "242:31:3",
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6270,
        "sourceUnit": 43833,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5783,
        "nodeType": "ContractDefinition",
        "src": "275:246:3",
        "nodes": [
          {
            "id": 5782,
            "nodeType": "FunctionDefinition",
            "src": "300:218:3",
            "body": {
              "id": 5781,
              "nodeType": "Block",
              "src": "416:102:3",
              "statements": [
                {
                  "assignments": [
                    5767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5767,
                      "mutability": "mutable",
                      "name": "bondToken",
                      "nameLocation": "432:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 5781,
                      "src": "426:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$5745",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 5766,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5765,
                          "name": "ERC20",
                          "nameLocations": [
                            "426:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5745,
                          "src": "426:5:3"
                        },
                        "referencedDeclaration": 5745,
                        "src": "426:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5745",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5775,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5771,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5758,
                        "src": "454:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 5772,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5760,
                        "src": "459:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 5773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "472:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 5770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "444:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20_$5745_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ERC20)"
                      },
                      "typeName": {
                        "id": 5769,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5768,
                          "name": "ERC20",
                          "nameLocations": [
                            "448:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5745,
                          "src": "448:5:3"
                        },
                        "referencedDeclaration": 5745,
                        "src": "448:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5745",
                          "typeString": "contract ERC20"
                        }
                      }
                    },
                    "id": 5774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "444:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$5745",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "426:49:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5778,
                        "name": "bondToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5767,
                        "src": "500:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5745",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$5745",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 5777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "492:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 5776,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "492:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5764,
                  "id": 5780,
                  "nodeType": "Return",
                  "src": "485:25:3"
                }
              ]
            },
            "functionSelector": "c1558302",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newBond",
            "nameLocation": "309:7:3",
            "parameters": {
              "id": 5761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5758,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "340:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5782,
                  "src": "326:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5757,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5760,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "369:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5782,
                  "src": "355:25:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5759,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "316:75:3"
            },
            "returnParameters": {
              "id": 5764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5782,
                  "src": "407:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "406:9:3"
            },
            "scope": 5783,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ZCBFactory",
        "contractDependencies": [
          5745
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5783
        ],
        "name": "ZCBFactory",
        "nameLocation": "284:10:3",
        "scope": 6270,
        "usedErrors": []
      },
      {
        "id": 5869,
        "nodeType": "ContractDefinition",
        "src": "522:851:3",
        "nodes": [
          {
            "id": 5785,
            "nodeType": "VariableDeclaration",
            "src": "560:35:3",
            "constant": false,
            "functionSelector": "f77c4791",
            "mutability": "immutable",
            "name": "controller",
            "nameLocation": "585:10:3",
            "scope": 5869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5784,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "560:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5787,
            "nodeType": "VariableDeclaration",
            "src": "601:35:3",
            "constant": false,
            "functionSelector": "a1a76dc0",
            "mutability": "immutable",
            "name": "zcbFactory",
            "nameLocation": "626:10:3",
            "scope": 5869,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5786,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "601:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5803,
            "nodeType": "FunctionDefinition",
            "src": "643:130:3",
            "body": {
              "id": 5802,
              "nodeType": "Block",
              "src": "696:77:3",
              "statements": [
                {
                  "expression": {
                    "id": 5796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5794,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5785,
                      "src": "706:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5795,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5789,
                      "src": "719:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "706:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5797,
                  "nodeType": "ExpressionStatement",
                  "src": "706:24:3"
                },
                {
                  "expression": {
                    "id": 5800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5798,
                      "name": "zcbFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5787,
                      "src": "741:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5799,
                      "name": "_zcbFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5791,
                      "src": "754:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "741:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5801,
                  "nodeType": "ExpressionStatement",
                  "src": "741:24:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5789,
                  "mutability": "mutable",
                  "name": "_controller",
                  "nameLocation": "663:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5803,
                  "src": "655:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5791,
                  "mutability": "mutable",
                  "name": "_zcbFactory",
                  "nameLocation": "684:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5803,
                  "src": "676:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:42:3"
            },
            "returnParameters": {
              "id": 5793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "696:0:3"
            },
            "scope": 5869,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5811,
            "nodeType": "EventDefinition",
            "src": "779:67:3",
            "anonymous": false,
            "eventSelector": "9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b",
            "name": "PoolCreated",
            "nameLocation": "785:11:3",
            "parameters": {
              "id": 5810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5805,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "805:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5811,
                  "src": "797:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5807,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "longZCB",
                  "nameLocation": "819:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5811,
                  "src": "811:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5809,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shortZCB",
                  "nameLocation": "836:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5811,
                  "src": "828:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:49:3"
            }
          },
          {
            "id": 5868,
            "nodeType": "FunctionDefinition",
            "src": "911:460:3",
            "body": {
              "id": 5867,
              "nodeType": "Block",
              "src": "1058:313:3",
              "statements": [
                {
                  "expression": {
                    "id": 5834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5826,
                      "name": "longZCB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5819,
                      "src": "1068:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6c6f6e675a4342",
                          "id": 5831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1109:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1d4118dbcc6f36781802b2ce59c32b219c0312ebdd142571924c91dea39cb97c",
                            "typeString": "literal_string \"longZCB\""
                          },
                          "value": "longZCB"
                        },
                        {
                          "hexValue": "6c6f6e67",
                          "id": 5832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_aa063063977143f6be4b49a41e26e13f452feaaf1e52e4794516f0c2e72126c5",
                            "typeString": "literal_string \"long\""
                          },
                          "value": "long"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_1d4118dbcc6f36781802b2ce59c32b219c0312ebdd142571924c91dea39cb97c",
                            "typeString": "literal_string \"longZCB\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_aa063063977143f6be4b49a41e26e13f452feaaf1e52e4794516f0c2e72126c5",
                            "typeString": "literal_string \"long\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5828,
                              "name": "zcbFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5787,
                              "src": "1089:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5827,
                            "name": "ZCBFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5783,
                            "src": "1078:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ZCBFactory_$5783_$",
                              "typeString": "type(contract ZCBFactory)"
                            }
                          },
                          "id": 5829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1078:22:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZCBFactory_$5783",
                            "typeString": "contract ZCBFactory"
                          }
                        },
                        "id": 5830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1101:7:3",
                        "memberName": "newBond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5782,
                        "src": "1078:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory,string memory) external returns (address)"
                        }
                      },
                      "id": 5833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1078:49:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1068:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5835,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:59:3"
                },
                {
                  "expression": {
                    "id": 5844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5836,
                      "name": "shortZCB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5821,
                      "src": "1137:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "73686f72745a4342",
                          "id": 5841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1179:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_759da99598a73174594124040ab84582cf72859b4bad76e2b89dec937f8d2bfc",
                            "typeString": "literal_string \"shortZCB\""
                          },
                          "value": "shortZCB"
                        },
                        {
                          "hexValue": "73686f7274",
                          "id": 5842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1191:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2c1e422d971fccc51c25056cba97f61e0a4ad399e1ac87d9ec96553211c674e3",
                            "typeString": "literal_string \"short\""
                          },
                          "value": "short"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_759da99598a73174594124040ab84582cf72859b4bad76e2b89dec937f8d2bfc",
                            "typeString": "literal_string \"shortZCB\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_2c1e422d971fccc51c25056cba97f61e0a4ad399e1ac87d9ec96553211c674e3",
                            "typeString": "literal_string \"short\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5838,
                              "name": "zcbFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5787,
                              "src": "1159:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5837,
                            "name": "ZCBFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5783,
                            "src": "1148:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ZCBFactory_$5783_$",
                              "typeString": "type(contract ZCBFactory)"
                            }
                          },
                          "id": 5839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1148:22:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZCBFactory_$5783",
                            "typeString": "contract ZCBFactory"
                          }
                        },
                        "id": 5840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1171:7:3",
                        "memberName": "newBond",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5782,
                        "src": "1148:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory,string memory) external returns (address)"
                        }
                      },
                      "id": 5843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1148:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1137:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5845,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:62:3"
                },
                {
                  "expression": {
                    "id": 5856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5846,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5824,
                      "src": "1210:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SyntheticZCBPool_$6269",
                        "typeString": "contract SyntheticZCBPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5850,
                          "name": "base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5814,
                          "src": "1251:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5851,
                          "name": "longZCB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5819,
                          "src": "1257:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5852,
                          "name": "shortZCB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5821,
                          "src": "1266:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5853,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5816,
                          "src": "1276:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5854,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5785,
                          "src": "1283:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1217:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_SyntheticZCBPool_$6269_$",
                          "typeString": "function (address,address,address,address,address) returns (contract SyntheticZCBPool)"
                        },
                        "typeName": {
                          "id": 5848,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 5847,
                            "name": "SyntheticZCBPool",
                            "nameLocations": [
                              "1221:16:3"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6269,
                            "src": "1221:16:3"
                          },
                          "referencedDeclaration": 6269,
                          "src": "1221:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SyntheticZCBPool_$6269",
                            "typeString": "contract SyntheticZCBPool"
                          }
                        }
                      },
                      "id": 5855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1217:86:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SyntheticZCBPool_$6269",
                        "typeString": "contract SyntheticZCBPool"
                      }
                    },
                    "src": "1210:93:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SyntheticZCBPool_$6269",
                      "typeString": "contract SyntheticZCBPool"
                    }
                  },
                  "id": 5857,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:93:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5861,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5824,
                            "src": "1339:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SyntheticZCBPool_$6269",
                              "typeString": "contract SyntheticZCBPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SyntheticZCBPool_$6269",
                              "typeString": "contract SyntheticZCBPool"
                            }
                          ],
                          "id": 5860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1331:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5859,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1331:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1331:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5863,
                        "name": "longZCB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5819,
                        "src": "1346:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5864,
                        "name": "shortZCB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5821,
                        "src": "1355:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5858,
                      "name": "PoolCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5811,
                      "src": "1319:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 5865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5866,
                  "nodeType": "EmitStatement",
                  "src": "1314:50:3"
                }
              ]
            },
            "documentation": {
              "id": 5812,
              "nodeType": "StructuredDocumentation",
              "src": "852:54:3",
              "text": "@notice param base is the collateral used in pool "
            },
            "functionSelector": "981f5136",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newPool",
            "nameLocation": "920:7:3",
            "parameters": {
              "id": 5817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5814,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "945:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5868,
                  "src": "937:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5816,
                  "mutability": "mutable",
                  "name": "entry",
                  "nameLocation": "968:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5868,
                  "src": "960:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "927:56:3"
            },
            "returnParameters": {
              "id": 5825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5819,
                  "mutability": "mutable",
                  "name": "longZCB",
                  "nameLocation": "1009:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5868,
                  "src": "1001:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5821,
                  "mutability": "mutable",
                  "name": "shortZCB",
                  "nameLocation": "1026:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5868,
                  "src": "1018:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5824,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "1053:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5868,
                  "src": "1036:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SyntheticZCBPool_$6269",
                    "typeString": "contract SyntheticZCBPool"
                  },
                  "typeName": {
                    "id": 5823,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5822,
                      "name": "SyntheticZCBPool",
                      "nameLocations": [
                        "1036:16:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6269,
                      "src": "1036:16:3"
                    },
                    "referencedDeclaration": 6269,
                    "src": "1036:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SyntheticZCBPool_$6269",
                      "typeString": "contract SyntheticZCBPool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1000:58:3"
            },
            "scope": 5869,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SyntheticZCBPoolFactory",
        "contractDependencies": [
          6269
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5869
        ],
        "name": "SyntheticZCBPoolFactory",
        "nameLocation": "531:23:3",
        "scope": 6270,
        "usedErrors": []
      },
      {
        "id": 6269,
        "nodeType": "ContractDefinition",
        "src": "1375:4480:3",
        "nodes": [
          {
            "id": 5874,
            "nodeType": "UsingForDirective",
            "src": "1432:36:3",
            "global": false,
            "libraryName": {
              "id": 5872,
              "name": "FixedPointMathLib",
              "nameLocations": [
                "1438:17:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57590,
              "src": "1438:17:3"
            },
            "typeName": {
              "id": 5873,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1460:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5876,
            "nodeType": "VariableDeclaration",
            "src": "1474:24:3",
            "constant": false,
            "functionSelector": "6e2f7ad3",
            "mutability": "mutable",
            "name": "a_initial",
            "nameLocation": "1489:9:3",
            "scope": 6269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5875,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1474:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5878,
            "nodeType": "VariableDeclaration",
            "src": "1504:24:3",
            "constant": false,
            "functionSelector": "558bdb29",
            "mutability": "mutable",
            "name": "b_initial",
            "nameLocation": "1519:9:3",
            "scope": 6269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5877,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1504:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5880,
            "nodeType": "VariableDeclaration",
            "src": "1561:16:3",
            "constant": false,
            "functionSelector": "4df7e3d0",
            "mutability": "mutable",
            "name": "b",
            "nameLocation": "1576:1:3",
            "scope": 6269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5879,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1561:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5882,
            "nodeType": "VariableDeclaration",
            "src": "1583:27:3",
            "constant": false,
            "functionSelector": "7063b06c",
            "mutability": "mutable",
            "name": "discount_cap",
            "nameLocation": "1598:12:3",
            "scope": 6269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5881,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1583:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5884,
            "nodeType": "VariableDeclaration",
            "src": "1617:33:3",
            "constant": false,
            "functionSelector": "1816eb13",
            "mutability": "mutable",
            "name": "discountedReserves",
            "nameLocation": "1632:18:3",
            "scope": 6269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5883,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1617:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5886,
            "nodeType": "VariableDeclaration",
            "src": "1658:35:3",
            "constant": false,
            "functionSelector": "f77c4791",
            "mutability": "immutable",
            "name": "controller",
            "nameLocation": "1683:10:3",
            "scope": 6269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5885,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1658:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5889,
            "nodeType": "VariableDeclaration",
            "src": "1700:40:3",
            "constant": true,
            "functionSelector": "d3b5dc3b",
            "mutability": "constant",
            "name": "precision",
            "nameLocation": "1724:9:3",
            "scope": 6269,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5887,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1700:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 5888,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1736:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 5917,
            "nodeType": "FunctionDefinition",
            "src": "1747:259:3",
            "body": {
              "id": 5916,
              "nodeType": "Block",
              "src": "1935:71:3",
              "statements": [
                {
                  "expression": {
                    "id": 5910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5908,
                      "name": "entry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1945:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5909,
                      "name": "_entry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5897,
                      "src": "1953:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1945:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5911,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:14:3"
                },
                {
                  "expression": {
                    "id": 5914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5912,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5886,
                      "src": "1970:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5913,
                      "name": "_controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5899,
                      "src": "1983:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1970:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5915,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:24:3"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5902,
                    "name": "base",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5891,
                    "src": "1909:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 5903,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5893,
                    "src": "1914:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 5904,
                    "name": "s_trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5895,
                    "src": "1920:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "66616c7365",
                    "id": 5905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1929:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  }
                ],
                "id": 5906,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5901,
                  "name": "BoundedDerivativesPool",
                  "nameLocations": [
                    "1886:22:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5119,
                  "src": "1886:22:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1886:49:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5891,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "1767:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5917,
                  "src": "1759:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5893,
                  "mutability": "mutable",
                  "name": "trade",
                  "nameLocation": "1790:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5917,
                  "src": "1782:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5895,
                  "mutability": "mutable",
                  "name": "s_trade",
                  "nameLocation": "1814:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5917,
                  "src": "1806:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1806:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5897,
                  "mutability": "mutable",
                  "name": "_entry",
                  "nameLocation": "1840:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5917,
                  "src": "1832:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1832:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5899,
                  "mutability": "mutable",
                  "name": "_controller",
                  "nameLocation": "1865:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5917,
                  "src": "1857:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1857:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1758:128:3"
            },
            "returnParameters": {
              "id": 5907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1935:0:3"
            },
            "scope": 6269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5992,
            "nodeType": "FunctionDefinition",
            "src": "2380:654:3",
            "body": {
              "id": 5991,
              "nodeType": "Block",
              "src": "2487:547:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5928,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2505:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2509:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2505:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5930,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5886,
                          "src": "2519:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2505:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a6564",
                        "id": 5932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2531:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                          "typeString": "literal_string \"unauthorized\""
                        },
                        "value": "unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                          "typeString": "literal_string \"unauthorized\""
                        }
                      ],
                      "id": 5927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2497:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5934,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:49:3"
                },
                {
                  "expression": {
                    "id": 5947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5935,
                      "name": "b_initial",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5878,
                      "src": "2557:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5941,
                              "name": "P",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5920,
                              "src": "2586:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 5942,
                              "name": "I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5922,
                              "src": "2588:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2586:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 5936,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2570:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 5937,
                                  "name": "P",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5920,
                                  "src": "2572:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2570:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 5939,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2569:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2575:10:3",
                          "memberName": "divWadDown",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57492,
                          "src": "2569:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 5944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2569:21:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 5945,
                        "name": "precision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5889,
                        "src": "2593:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2569:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2557:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5948,
                  "nodeType": "ExpressionStatement",
                  "src": "2557:45:3"
                },
                {
                  "expression": {
                    "id": 5959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5949,
                      "name": "a_initial",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5876,
                      "src": "2613:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5955,
                            "name": "P",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5920,
                            "src": "2658:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 5956,
                            "name": "I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5922,
                            "src": "2660:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2658:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5950,
                                "name": "precision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5889,
                                "src": "2626:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 5951,
                                "name": "b_initial",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5878,
                                "src": "2636:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2626:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5953,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2625:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2647:10:3",
                        "memberName": "divWadDown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57492,
                        "src": "2625:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2625:37:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2613:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5960,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:49:3"
                },
                {
                  "expression": {
                    "id": 5975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 5961,
                          "name": "discount_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5882,
                          "src": "2789:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 5962,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5880,
                          "src": "2803:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5963,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2788:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 5968,
                              "name": "sigma",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5924,
                              "src": "2850:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 5966,
                              "name": "P",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5920,
                              "src": "2837:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2839:10:3",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57460,
                            "src": "2837:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2837:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 5970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2858:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 5971,
                          "name": "a_initial",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5876,
                          "src": "2861:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 5972,
                          "name": "b_initial",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5878,
                          "src": "2872:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 5973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2883:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 5964,
                          "name": "LinearCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2898,
                          "src": "2808:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LinearCurve_$2898_$",
                            "typeString": "type(library LinearCurve)"
                          }
                        },
                        "id": 5965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2820:16:3",
                        "memberName": "amountOutGivenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2777,
                        "src": "2808:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,bool) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 5974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2808:80:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "2788:100:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5976,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:100:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 5982,
                                "name": "a_initial",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5876,
                                "src": "2985:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 5980,
                                "name": "precision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5889,
                                "src": "2964:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2974:10:3",
                              "memberName": "divWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57492,
                              "src": "2964:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 5983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2964:31:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2956:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 5978,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "2956:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2956:40:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 5977,
                      "name": "setLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "2943:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$returns$__$",
                        "typeString": "function (uint128)"
                      }
                    },
                    "id": 5985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2943:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5986,
                  "nodeType": "ExpressionStatement",
                  "src": "2943:54:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5988,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5880,
                        "src": "3025:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5987,
                      "name": "setPriceAndPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "3008:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3008:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5990,
                  "nodeType": "ExpressionStatement",
                  "src": "3008:19:3"
                }
              ]
            },
            "documentation": {
              "id": 5918,
              "nodeType": "StructuredDocumentation",
              "src": "2012:363:3",
              "text": "@notice calculate and store initial curve params that takes into account\n validator rewards(from discounted zcb). For validator rewards, just skew up the initial price\n These params are used for utilizer bond issuance, but a is set to 0 after issuance phase \n @param sigma is the proportion of P that is going to be bought at a discount  "
            },
            "functionSelector": "75e2d946",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateInitCurveParams",
            "nameLocation": "2389:24:3",
            "parameters": {
              "id": 5925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5920,
                  "mutability": "mutable",
                  "name": "P",
                  "nameLocation": "2431:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5992,
                  "src": "2423:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2423:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5922,
                  "mutability": "mutable",
                  "name": "I",
                  "nameLocation": "2451:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5992,
                  "src": "2443:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2443:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5924,
                  "mutability": "mutable",
                  "name": "sigma",
                  "nameLocation": "2471:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 5992,
                  "src": "2463:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2463:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:64:3"
            },
            "returnParameters": {
              "id": 5926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2487:0:3"
            },
            "scope": 6269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6106,
            "nodeType": "FunctionDefinition",
            "src": "3203:1132:3",
            "body": {
              "id": 6105,
              "nodeType": "Block",
              "src": "3397:938:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6007,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3415:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3419:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3415:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6009,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5886,
                          "src": "3429:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3415:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a6564",
                        "id": 6011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3441:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                          "typeString": "literal_string \"unauthorized\""
                        },
                        "value": "unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                          "typeString": "literal_string \"unauthorized\""
                        }
                      ],
                      "id": 6006,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3407:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3407:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6013,
                  "nodeType": "ExpressionStatement",
                  "src": "3407:49:3"
                },
                {
                  "assignments": [
                    6015
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6015,
                      "mutability": "mutable",
                      "name": "saleAmountQty",
                      "nameLocation": "3517:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 6105,
                      "src": "3509:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6014,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3509:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6025,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6021,
                          "name": "initPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5997,
                          "src": "3559:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 6022,
                          "name": "endPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5999,
                          "src": "3570:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3559:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "32",
                              "id": 6016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3534:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 6017,
                              "name": "saleAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5995,
                              "src": "3536:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3534:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6019,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3533:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3548:10:3",
                      "memberName": "divWadDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57492,
                      "src": "3533:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3533:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3509:70:3"
                },
                {
                  "assignments": [
                    6027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6027,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "3598:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 6105,
                      "src": "3590:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6026,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3590:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6035,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6033,
                        "name": "saleAmountQty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6015,
                        "src": "3636:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6028,
                              "name": "endPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5999,
                              "src": "3603:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 6029,
                              "name": "initPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5997,
                              "src": "3614:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3603:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6031,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3602:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3625:10:3",
                      "memberName": "divWadDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57492,
                      "src": "3602:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3602:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3590:60:3"
                },
                {
                  "expression": {
                    "id": 6049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 6036,
                          "name": "discount_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5882,
                          "src": "3721:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 6037,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3720:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$__$",
                        "typeString": "tuple(uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6042,
                              "name": "sigma",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6001,
                              "src": "3790:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 6040,
                              "name": "saleAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5995,
                              "src": "3768:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3779:10:3",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57460,
                            "src": "3768:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3768:28:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 6044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3797:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 6045,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6027,
                          "src": "3800:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 6046,
                          "name": "initPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5997,
                          "src": "3803:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 6047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3813:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 6038,
                          "name": "LinearCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2898,
                          "src": "3739:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LinearCurve_$2898_$",
                            "typeString": "type(library LinearCurve)"
                          }
                        },
                        "id": 6039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3751:16:3",
                        "memberName": "amountOutGivenIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2777,
                        "src": "3739:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,bool) pure returns (uint256,uint256)"
                        }
                      },
                      "id": 6048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3739:80:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "3720:99:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6050,
                  "nodeType": "ExpressionStatement",
                  "src": "3720:99:3"
                },
                {
                  "expression": {
                    "id": 6053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6051,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5880,
                      "src": "3830:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6052,
                      "name": "initPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5997,
                      "src": "3834:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3830:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6054,
                  "nodeType": "ExpressionStatement",
                  "src": "3830:13:3"
                },
                {
                  "expression": {
                    "id": 6072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6055,
                      "name": "managementFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6004,
                      "src": "3927:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 6058,
                                "name": "endPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5999,
                                "src": "3967:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6056,
                                "name": "discount_cap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5882,
                                "src": "3943:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3956:10:3",
                              "memberName": "mulWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57460,
                              "src": "3943:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3943:33:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 6062,
                                "name": "sigma",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6001,
                                "src": "4014:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6060,
                                "name": "saleAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5995,
                                "src": "3992:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4003:10:3",
                              "memberName": "mulWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57460,
                              "src": "3992:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3992:28:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3943:77:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 6067,
                              "name": "endPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5999,
                              "src": "4048:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 6065,
                              "name": "saleAmountQty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6015,
                              "src": "4023:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4037:10:3",
                            "memberName": "mulWadDown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57460,
                            "src": "4023:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4023:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3943:114:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 6070,
                        "name": "saleAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5995,
                        "src": "4060:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3943:127:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3927:143:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6073,
                  "nodeType": "ExpressionStatement",
                  "src": "3927:143:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 6079,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6027,
                                "src": "4169:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6077,
                                "name": "precision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5889,
                                "src": "4148:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4158:10:3",
                              "memberName": "divWadDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57492,
                              "src": "4148:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4148:23:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4140:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 6075,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "4140:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4140:32:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 6074,
                      "name": "setLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "4127:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$returns$__$",
                        "typeString": "function (uint128)"
                      }
                    },
                    "id": 6082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4127:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6083,
                  "nodeType": "ExpressionStatement",
                  "src": "4127:46:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6085,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5880,
                        "src": "4201:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6084,
                      "name": "setPriceAndPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "4184:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4184:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6087,
                  "nodeType": "ExpressionStatement",
                  "src": "4184:19:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6090,
                            "name": "endPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5999,
                            "src": "4247:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6089,
                          "name": "priceToPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2063,
                          "src": "4234:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
                            "typeString": "function (uint256) pure returns (uint16)"
                          }
                        },
                        "id": 6091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4234:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4263:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int128_$",
                                "typeString": "type(int128)"
                              },
                              "typeName": {
                                "id": 6093,
                                "name": "int128",
                                "nodeType": "ElementaryTypeName",
                                "src": "4263:6:3",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_int128_$",
                                "typeString": "type(int128)"
                              }
                            ],
                            "id": 6092,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4258:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 6095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4258:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_int128",
                            "typeString": "type(int128)"
                          }
                        },
                        "id": 6096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4271:3:3",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4258:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      ],
                      "id": 6088,
                      "name": "setDynamicLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1882,
                      "src": "4214:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$_t_int128_$returns$__$",
                        "typeString": "function (uint16,int128)"
                      }
                    },
                    "id": 6097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4214:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6098,
                  "nodeType": "ExpressionStatement",
                  "src": "4214:61:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6101,
                            "name": "endPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5999,
                            "src": "4317:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6100,
                          "name": "priceToPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2063,
                          "src": "4304:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
                            "typeString": "function (uint256) pure returns (uint16)"
                          }
                        },
                        "id": 6102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4304:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 6099,
                      "name": "setModifyLiqPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1894,
                      "src": "4286:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$__$",
                        "typeString": "function (uint16)"
                      }
                    },
                    "id": 6103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4286:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6104,
                  "nodeType": "ExpressionStatement",
                  "src": "4286:41:3"
                }
              ]
            },
            "documentation": {
              "id": 5993,
              "nodeType": "StructuredDocumentation",
              "src": "3040:158:3",
              "text": "@notice calculates initparams for pool based instruments \n param endPrice is the inception Price of longZCB, or its price when there is no discount"
            },
            "functionSelector": "34327d8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateInitCurveParamsPool",
            "nameLocation": "3212:28:3",
            "parameters": {
              "id": 6002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5995,
                  "mutability": "mutable",
                  "name": "saleAmount",
                  "nameLocation": "3258:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6106,
                  "src": "3250:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3250:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5997,
                  "mutability": "mutable",
                  "name": "initPrice",
                  "nameLocation": "3287:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6106,
                  "src": "3279:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5999,
                  "mutability": "mutable",
                  "name": "endPrice",
                  "nameLocation": "3315:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6106,
                  "src": "3307:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6001,
                  "mutability": "mutable",
                  "name": "sigma",
                  "nameLocation": "3342:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6106,
                  "src": "3334:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3334:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3240:117:3"
            },
            "returnParameters": {
              "id": 6005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6004,
                  "mutability": "mutable",
                  "name": "managementFee",
                  "nameLocation": "3383:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6106,
                  "src": "3375:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3375:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3374:23:3"
            },
            "scope": 6269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6133,
            "nodeType": "FunctionDefinition",
            "src": "4432:246:3",
            "body": {
              "id": 6132,
              "nodeType": "Block",
              "src": "4508:170:3",
              "statements": [
                {
                  "assignments": [
                    6115,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6115,
                      "mutability": "mutable",
                      "name": "amountDelta",
                      "nameLocation": "4527:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 6132,
                      "src": "4519:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6114,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4519:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 6124,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6118,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6109,
                        "src": "4573:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 6119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4581:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 6120,
                        "name": "a_initial",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5876,
                        "src": "4584:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6121,
                        "name": "b_initial",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5878,
                        "src": "4595:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 6122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4606:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 6116,
                        "name": "LinearCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2898,
                        "src": "4544:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinearCurve_$2898_$",
                          "typeString": "type(library LinearCurve)"
                        }
                      },
                      "id": 6117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4556:16:3",
                      "memberName": "amountOutGivenIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2777,
                      "src": "4544:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,bool) pure returns (uint256,uint256)"
                      }
                    },
                    "id": 6123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4544:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4518:93:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 6127,
                          "name": "maxPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4031,
                          "src": "4652:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6125,
                          "name": "amountDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6115,
                          "src": "4629:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4641:10:3",
                        "memberName": "mulWadDown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57460,
                        "src": "4629:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4629:32:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6129,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6109,
                      "src": "4664:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4629:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6113,
                  "id": 6131,
                  "nodeType": "Return",
                  "src": "4622:48:3"
                }
              ]
            },
            "documentation": {
              "id": 6107,
              "nodeType": "StructuredDocumentation",
              "src": "4341:86:3",
              "text": "@notice computes area between the curve and max price for given storage parameters"
            },
            "functionSelector": "14e2b929",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areaBetweenCurveAndMax",
            "nameLocation": "4441:22:3",
            "parameters": {
              "id": 6110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6109,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4472:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6133,
                  "src": "4464:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4464:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4463:16:3"
            },
            "returnParameters": {
              "id": 6113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6133,
                  "src": "4500:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4500:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4499:9:3"
            },
            "scope": 6269,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6161,
            "nodeType": "FunctionDefinition",
            "src": "4716:243:3",
            "body": {
              "id": 6160,
              "nodeType": "Block",
              "src": "4817:142:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6142,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4835:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4839:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4835:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6144,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "4849:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4835:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656e747279455252",
                        "id": 6146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4856:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        },
                        "value": "entryERR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        }
                      ],
                      "id": 6141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4827:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4827:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6148,
                  "nodeType": "ExpressionStatement",
                  "src": "4827:40:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6152,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6136,
                        "src": "4895:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6153,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6138,
                        "src": "4905:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6149,
                        "name": "TradeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4025,
                        "src": "4879:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5745",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4890:4:3",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5731,
                      "src": "4879:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 6154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4879:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6155,
                  "nodeType": "ExpressionStatement",
                  "src": "4879:33:3"
                },
                {
                  "expression": {
                    "id": 6158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6156,
                      "name": "discountedReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5884,
                      "src": "4922:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6157,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6138,
                      "src": "4944:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4922:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6159,
                  "nodeType": "ExpressionStatement",
                  "src": "4922:28:3"
                }
              ]
            },
            "documentation": {
              "id": 6134,
              "nodeType": "StructuredDocumentation",
              "src": "4684:27:3",
              "text": "@notice mints new zcbs "
            },
            "functionSelector": "681504cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trustedDiscountedMint",
            "nameLocation": "4725:21:3",
            "parameters": {
              "id": 6139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6136,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "4764:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6161,
                  "src": "4756:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4756:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6138,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4791:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6161,
                  "src": "4783:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4746:62:3"
            },
            "returnParameters": {
              "id": 6140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4817:0:3"
            },
            "scope": 6269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6195,
            "nodeType": "FunctionDefinition",
            "src": "4966:268:3",
            "body": {
              "id": 6194,
              "nodeType": "Block",
              "src": "5075:159:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5093:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5097:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5093:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6173,
                          "name": "entry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "5107:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5093:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656e747279455252",
                        "id": 6175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5114:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        },
                        "value": "entryERR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        }
                      ],
                      "id": 6170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5085:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5085:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6177,
                  "nodeType": "ExpressionStatement",
                  "src": "5085:40:3"
                },
                {
                  "condition": {
                    "id": 6178,
                    "name": "long",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6167,
                    "src": "5141:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 6189,
                          "name": "trader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6163,
                          "src": "5212:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6190,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6165,
                          "src": "5220:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6186,
                          "name": "s_tradeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4028,
                          "src": "5194:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5745",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 6188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5207:4:3",
                        "memberName": "burn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5744,
                        "src": "5194:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 6191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5194:33:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6192,
                    "nodeType": "ExpressionStatement",
                    "src": "5194:33:3"
                  },
                  "id": 6193,
                  "nodeType": "IfStatement",
                  "src": "5137:90:3",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 6182,
                          "name": "trader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6163,
                          "src": "5163:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6183,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6165,
                          "src": "5171:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6179,
                          "name": "TradeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4025,
                          "src": "5147:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5745",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 6181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5158:4:3",
                        "memberName": "burn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5744,
                        "src": "5147:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) external"
                        }
                      },
                      "id": 6184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5147:31:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6185,
                    "nodeType": "ExpressionStatement",
                    "src": "5147:31:3"
                  }
                }
              ]
            },
            "functionSelector": "c93ac3ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trustedBurn",
            "nameLocation": "4975:11:3",
            "parameters": {
              "id": 6168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6163,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "5004:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6195,
                  "src": "4996:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4996:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6165,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5029:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6195,
                  "src": "5021:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5021:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6167,
                  "mutability": "mutable",
                  "name": "long",
                  "nameLocation": "5051:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6195,
                  "src": "5046:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6166,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5046:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4986:79:3"
            },
            "returnParameters": {
              "id": 6169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5075:0:3"
            },
            "scope": 6269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6234,
            "nodeType": "FunctionDefinition",
            "src": "5240:253:3",
            "body": {
              "id": 6233,
              "nodeType": "Block",
              "src": "5297:196:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6203,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5315:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5319:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5315:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6205,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5886,
                          "src": "5329:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5315:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656e747279455252",
                        "id": 6207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5341:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        },
                        "value": "entryERR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        }
                      ],
                      "id": 6202,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5307:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5307:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6209,
                  "nodeType": "ExpressionStatement",
                  "src": "5307:45:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6210,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6199,
                      "src": "5367:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 6213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5382:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 6212,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5382:7:3",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 6211,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "5377:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 6214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5377:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 6215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5391:3:3",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "5377:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5367:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 6228,
                          "name": "flushTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6197,
                          "src": "5469:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6229,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6199,
                          "src": "5478:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6225,
                          "name": "BaseToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4022,
                          "src": "5450:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5745",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 6227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5460:8:3",
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5469,
                        "src": "5450:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 6230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5450:35:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 6231,
                    "nodeType": "ExpressionStatement",
                    "src": "5450:35:3"
                  },
                  "id": 6232,
                  "nodeType": "IfStatement",
                  "src": "5363:122:3",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 6220,
                          "name": "flushTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6197,
                          "src": "5415:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6221,
                            "name": "baseBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4160,
                            "src": "5424:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 6222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5424:9:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 6217,
                          "name": "BaseToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4022,
                          "src": "5396:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$5745",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 6219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5406:8:3",
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5469,
                        "src": "5396:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 6223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5396:38:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 6224,
                    "nodeType": "ExpressionStatement",
                    "src": "5396:38:3"
                  }
                }
              ]
            },
            "functionSelector": "96fd1c42",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flush",
            "nameLocation": "5249:5:3",
            "parameters": {
              "id": 6200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6197,
                  "mutability": "mutable",
                  "name": "flushTo",
                  "nameLocation": "5263:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6234,
                  "src": "5255:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5255:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6199,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5280:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 6234,
                  "src": "5272:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5272:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5254:33:3"
            },
            "returnParameters": {
              "id": 6201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5297:0:3"
            },
            "scope": 6269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6254,
            "nodeType": "FunctionDefinition",
            "src": "5601:141:3",
            "body": {
              "id": 6253,
              "nodeType": "Block",
              "src": "5629:113:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6239,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5647:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5651:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5647:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6241,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5886,
                          "src": "5661:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5647:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656e747279455252",
                        "id": 6243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5673:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        },
                        "value": "entryERR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb19bc9d8778982a3e52e33be9d21010a473706560466b4fee4d88f2d86a6de",
                          "typeString": "literal_string \"entryERR\""
                        }
                      ],
                      "id": 6238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5639:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5639:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6245,
                  "nodeType": "ExpressionStatement",
                  "src": "5639:45:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 6247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5708:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 6246,
                      "name": "setLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "5695:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint128_$returns$__$",
                        "typeString": "function (uint128)"
                      }
                    },
                    "id": 6248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5695:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6249,
                  "nodeType": "ExpressionStatement",
                  "src": "5695:15:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6250,
                      "name": "amortizeLiq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1904,
                      "src": "5721:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5721:13:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6252,
                  "nodeType": "ExpressionStatement",
                  "src": "5721:13:3"
                }
              ]
            },
            "documentation": {
              "id": 6235,
              "nodeType": "StructuredDocumentation",
              "src": "5499:97:3",
              "text": "@notice resets AMM liquidity to 0 and make it ready to be liq provisioned \n by anyone "
            },
            "functionSelector": "8d01450f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetLiq",
            "nameLocation": "5610:8:3",
            "parameters": {
              "id": 6236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5618:2:3"
            },
            "returnParameters": {
              "id": 6237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5629:0:3"
            },
            "scope": 6269,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6268,
            "nodeType": "FunctionDefinition",
            "src": "5748:105:3",
            "body": {
              "id": 6267,
              "nodeType": "Block",
              "src": "5794:59:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6263,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5839:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SyntheticZCBPool_$6269",
                              "typeString": "contract SyntheticZCBPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SyntheticZCBPool_$6269",
                              "typeString": "contract SyntheticZCBPool"
                            }
                          ],
                          "id": 6262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5831:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6261,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5831:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5831:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6259,
                        "name": "BaseToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4022,
                        "src": "5811:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$5745",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 6260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5821:9:3",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5362,
                      "src": "5811:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 6265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5811:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6258,
                  "id": 6266,
                  "nodeType": "Return",
                  "src": "5804:41:3"
                }
              ]
            },
            "functionSelector": "48af7132",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cBal",
            "nameLocation": "5757:4:3",
            "parameters": {
              "id": 6255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5761:2:3"
            },
            "returnParameters": {
              "id": 6258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6268,
                  "src": "5786:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5786:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5785:9:3"
            },
            "scope": 6269,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5870,
              "name": "BoundedDerivativesPool",
              "nameLocations": [
                "1404:22:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5119,
              "src": "1404:22:3"
            },
            "id": 5871,
            "nodeType": "InheritanceSpecifier",
            "src": "1404:22:3"
          }
        ],
        "canonicalName": "SyntheticZCBPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6269,
          5119,
          2342
        ],
        "name": "SyntheticZCBPool",
        "nameLocation": "1384:16:3",
        "scope": 6270,
        "usedErrors": []
      }
    ]
  },
  "id": 3
}